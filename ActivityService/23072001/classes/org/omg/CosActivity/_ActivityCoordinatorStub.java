//
// Java code automatically generated by the Orbix 2000 IDL Compiler
// Do not edit this code!
//

package org.omg.CosActivity;

public class _ActivityCoordinatorStub
    extends org.omg.CORBA.portable.ObjectImpl
    implements ActivityCoordinator
{
    final public static java.lang.Class _opsClass = ActivityCoordinatorOperations.class;


    public _ActivityCoordinatorStub () {}

    public org.omg.CosActivity.Outcome complete_activity(
        java.lang.String signal_set_name,
        org.omg.CosActivity.CompletionStatus cs
    ) throws org.omg.CosActivity.ActivityPending, org.omg.CosActivity.ChildContextPending, org.omg.CosActivity.SignalSetUnknown, org.omg.CosActivity.ActivityNotProcessed
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.Outcome _result;
                try {
                    _output = _request("complete_activity", true);
                    _output.write_string(signal_set_name);
                    org.omg.CosActivity.CompletionStatusHelper.write(_output, cs);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.OutcomeHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.ActivityPendingHelper.id())) {
                            throw org.omg.CosActivity.ActivityPendingHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.ChildContextPendingHelper.id())) {
                            throw org.omg.CosActivity.ChildContextPendingHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.SignalSetUnknownHelper.id())) {
                            throw org.omg.CosActivity.SignalSetUnknownHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.ActivityNotProcessedHelper.id())) {
                            throw org.omg.CosActivity.ActivityNotProcessedHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("complete_activity", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    return _self.complete_activity(signal_set_name, cs);
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.Outcome process_signal_set(
        java.lang.String signal_set_name,
        org.omg.CosActivity.CompletionStatus cs
    ) throws org.omg.CosActivity.SignalSetUnknown, org.omg.CosActivity.ActivityNotProcessed
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.Outcome _result;
                try {
                    _output = _request("process_signal_set", true);
                    _output.write_string(signal_set_name);
                    org.omg.CosActivity.CompletionStatusHelper.write(_output, cs);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.OutcomeHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.SignalSetUnknownHelper.id())) {
                            throw org.omg.CosActivity.SignalSetUnknownHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.ActivityNotProcessedHelper.id())) {
                            throw org.omg.CosActivity.ActivityNotProcessedHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("process_signal_set", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    return _self.process_signal_set(signal_set_name, cs);
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void add_signal_set(
        org.omg.CosActivity.SignalSet signal_set
    ) throws org.omg.CosActivity.SignalSetAlreadyRegistered
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("add_signal_set", true);
                    org.omg.CosActivity.SignalSetHelper.write(_output, signal_set);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.SignalSetAlreadyRegisteredHelper.id())) {
                            throw org.omg.CosActivity.SignalSetAlreadyRegisteredHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("add_signal_set", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    _self.add_signal_set(signal_set);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void remove_signal_set(
        java.lang.String signal_set_name
    ) throws org.omg.CosActivity.SignalSetUnknown
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("remove_signal_set", true);
                    _output.write_string(signal_set_name);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.SignalSetUnknownHelper.id())) {
                            throw org.omg.CosActivity.SignalSetUnknownHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("remove_signal_set", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    _self.remove_signal_set(signal_set_name);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void add_action(
        org.omg.CosActivity.Action act,
        java.lang.String signal_set_name,
        int priority
    ) throws org.omg.CosActivity.SignalSetUnknown
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("add_action", true);
                    org.omg.CosActivity.ActionHelper.write(_output, act);
                    _output.write_string(signal_set_name);
                    _output.write_long(priority);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.SignalSetUnknownHelper.id())) {
                            throw org.omg.CosActivity.SignalSetUnknownHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("add_action", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    _self.add_action(act, signal_set_name, priority);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void remove_action(
        org.omg.CosActivity.Action act
    ) throws org.omg.CosActivity.ActionNotFound
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("remove_action", true);
                    org.omg.CosActivity.ActionHelper.write(_output, act);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.ActionNotFoundHelper.id())) {
                            throw org.omg.CosActivity.ActionNotFoundHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("remove_action", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    _self.remove_action(act);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void add_actions(
        org.omg.CosActivity.Action[] acts,
        java.lang.String signal_set_name,
        int priority
    ) throws org.omg.CosActivity.SignalSetUnknown
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("add_actions", true);
                    org.omg.CosActivity.ActionSeqHelper.write(_output, acts);
                    _output.write_string(signal_set_name);
                    _output.write_long(priority);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.SignalSetUnknownHelper.id())) {
                            throw org.omg.CosActivity.SignalSetUnknownHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("add_actions", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    _self.add_actions(acts, signal_set_name, priority);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.Action[] remove_actions(
        org.omg.CosActivity.Action[] acts
    )
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.Action[] _result;
                try {
                    _output = _request("remove_actions", true);
                    org.omg.CosActivity.ActionSeqHelper.write(_output, acts);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.ActionSeqHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("remove_actions", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    return _self.remove_actions(acts);
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void add_global_action(
        org.omg.CosActivity.Action act,
        int priority
    )
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("add_global_action", true);
                    org.omg.CosActivity.ActionHelper.write(_output, act);
                    _output.write_long(priority);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("add_global_action", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    _self.add_global_action(act, priority);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void remove_global_action(
        org.omg.CosActivity.Action act
    ) throws org.omg.CosActivity.ActionNotFound
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("remove_global_action", true);
                    org.omg.CosActivity.ActionHelper.write(_output, act);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.ActionNotFoundHelper.id())) {
                            throw org.omg.CosActivity.ActionNotFoundHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("remove_global_action", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    _self.remove_global_action(act);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public int get_number_registered_actions(
        java.lang.String signal_set_name
    ) throws org.omg.CosActivity.SignalSetUnknown
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                int _result;
                try {
                    _output = _request("get_number_registered_actions", true);
                    _output.write_string(signal_set_name);
                    _input = _invoke(_output);
                    _result = _input.read_long();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.SignalSetUnknownHelper.id())) {
                            throw org.omg.CosActivity.SignalSetUnknownHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_number_registered_actions", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    return _self.get_number_registered_actions(signal_set_name);
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.Action[] get_actions(
        java.lang.String signal_set_name
    ) throws org.omg.CosActivity.SignalSetUnknown
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.Action[] _result;
                try {
                    _output = _request("get_actions", true);
                    _output.write_string(signal_set_name);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.ActionSeqHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.SignalSetUnknownHelper.id())) {
                            throw org.omg.CosActivity.SignalSetUnknownHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_actions", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    return _self.get_actions(signal_set_name);
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.ActivityCoordinator get_parent_coordinator()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.ActivityCoordinator _result;
                try {
                    _output = _request("get_parent_coordinator", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.ActivityCoordinatorHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_parent_coordinator", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    return _self.get_parent_coordinator();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public byte[] get_global_id()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                byte[] _result;
                try {
                    _output = _request("get_global_id", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.GlobalIdHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_global_id", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    return _self.get_global_id();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.Status get_status()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.Status _result;
                try {
                    _output = _request("get_status", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.StatusHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_status", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    return _self.get_status();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.Status get_parent_status()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.Status _result;
                try {
                    _output = _request("get_parent_status", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.StatusHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_parent_status", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    return _self.get_parent_status();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public java.lang.String get_activity_name()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                java.lang.String _result;
                try {
                    _output = _request("get_activity_name", true);
                    _input = _invoke(_output);
                    _result = _input.read_string();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_activity_name", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    return _self.get_activity_name();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public boolean is_same_activity(
        org.omg.CosActivity.ActivityCoordinator ac
    )
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                boolean _result;
                try {
                    _output = _request("is_same_activity", true);
                    org.omg.CosActivity.ActivityCoordinatorHelper.write(_output, ac);
                    _input = _invoke(_output);
                    _result = _input.read_boolean();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("is_same_activity", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    return _self.is_same_activity(ac);
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public int hash_activity()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                int _result;
                try {
                    _output = _request("hash_activity", true);
                    _input = _invoke(_output);
                    _result = _input.read_ulong();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("hash_activity", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    return _self.hash_activity();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void destroy() throws org.omg.CosActivity.AlreadyDestroyed
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("destroy", true);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.AlreadyDestroyedHelper.id())) {
                            throw org.omg.CosActivity.AlreadyDestroyedHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("destroy", _opsClass);
                if (_so == null) {
                    continue;
                }
                ActivityCoordinatorOperations _self = (ActivityCoordinatorOperations)_so.servant;
                try {
                    _self.destroy();
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public static final String _interfaces[] =
    {"IDL:omg.org/CosActivity/ActivityCoordinator:1.0"};

    public String[] _ids()
    {
        return _interfaces;
    }

}
