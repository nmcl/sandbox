//
// Java code automatically generated by the Orbix 2000 IDL Compiler
// Do not edit this code!
//

package org.omg.CosActivity;

public class _SignalSetStub
    extends org.omg.CORBA.portable.ObjectImpl
    implements SignalSet
{
    final public static java.lang.Class _opsClass = SignalSetOperations.class;


    public _SignalSetStub () {}

    public java.lang.String signal_set_name()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("_get_signal_set_name", true);
                    java.lang.String _result;
                    _input = _invoke(_output);
                    _result                     = _input.read_string();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception) {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected UserException : " + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("signal_set_name", _opsClass);
                if (_so == null) {
                    continue;
                }
                SignalSetOperations _self = (SignalSetOperations)_so.servant;
                try {
                    return _self.signal_set_name();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }    }



    public org.omg.CosActivity.Signal get_signal(
        org.omg.CORBA.BooleanHolder lastSignal
    )
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.Signal _result;
                try {
                    _output = _request("get_signal", true);
                    _output.write_boolean(lastSignal.value);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.SignalHelper.read(_input);
                    lastSignal.value = _input.read_boolean();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_signal", _opsClass);
                if (_so == null) {
                    continue;
                }
                SignalSetOperations _self = (SignalSetOperations)_so.servant;
                try {
                    return _self.get_signal(lastSignal);
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.Outcome get_outcome() throws org.omg.CosActivity.SignalSetActive
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.Outcome _result;
                try {
                    _output = _request("get_outcome", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.OutcomeHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.SignalSetActiveHelper.id())) {
                            throw org.omg.CosActivity.SignalSetActiveHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_outcome", _opsClass);
                if (_so == null) {
                    continue;
                }
                SignalSetOperations _self = (SignalSetOperations)_so.servant;
                try {
                    return _self.get_outcome();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public boolean set_response(
        org.omg.CosActivity.Outcome response,
        org.omg.CORBA.BooleanHolder nextSignal
    ) throws org.omg.CosActivity.SignalSetInactive
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                boolean _result;
                try {
                    _output = _request("set_response", true);
                    org.omg.CosActivity.OutcomeHelper.write(_output, response);
                    _input = _invoke(_output);
                    _result = _input.read_boolean();
                    nextSignal.value = _input.read_boolean();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.SignalSetInactiveHelper.id())) {
                            throw org.omg.CosActivity.SignalSetInactiveHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("set_response", _opsClass);
                if (_so == null) {
                    continue;
                }
                SignalSetOperations _self = (SignalSetOperations)_so.servant;
                try {
                    return _self.set_response(response, nextSignal);
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void set_completion_status(
        org.omg.CosActivity.CompletionStatus cs
    )
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("set_completion_status", true);
                    org.omg.CosActivity.CompletionStatusHelper.write(_output, cs);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("set_completion_status", _opsClass);
                if (_so == null) {
                    continue;
                }
                SignalSetOperations _self = (SignalSetOperations)_so.servant;
                try {
                    _self.set_completion_status(cs);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.CompletionStatus get_completion_status()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.CompletionStatus _result;
                try {
                    _output = _request("get_completion_status", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.CompletionStatusHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_completion_status", _opsClass);
                if (_so == null) {
                    continue;
                }
                SignalSetOperations _self = (SignalSetOperations)_so.servant;
                try {
                    return _self.get_completion_status();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void set_activity_coordinator(
        org.omg.CosActivity.ActivityCoordinator coord
    ) throws org.omg.CosActivity.SignalSetActive
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("set_activity_coordinator", true);
                    org.omg.CosActivity.ActivityCoordinatorHelper.write(_output, coord);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.SignalSetActiveHelper.id())) {
                            throw org.omg.CosActivity.SignalSetActiveHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("set_activity_coordinator", _opsClass);
                if (_so == null) {
                    continue;
                }
                SignalSetOperations _self = (SignalSetOperations)_so.servant;
                try {
                    _self.set_activity_coordinator(coord);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void destroy() throws org.omg.CosActivity.AlreadyDestroyed
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("destroy", true);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.AlreadyDestroyedHelper.id())) {
                            throw org.omg.CosActivity.AlreadyDestroyedHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("destroy", _opsClass);
                if (_so == null) {
                    continue;
                }
                SignalSetOperations _self = (SignalSetOperations)_so.servant;
                try {
                    _self.destroy();
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public static final String _interfaces[] =
    {"IDL:omg.org/CosActivity/SignalSet:1.0"};

    public String[] _ids()
    {
        return _interfaces;
    }

}
