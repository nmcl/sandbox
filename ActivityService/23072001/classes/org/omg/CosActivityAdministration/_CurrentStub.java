//
// Java code automatically generated by the Orbix 2000 IDL Compiler
// Do not edit this code!
//

package org.omg.CosActivityAdministration;

public class _CurrentStub
    extends org.omg.CORBA.portable.ObjectImpl
    implements Current, org.omg.CosActivity.Current
{
    final public static java.lang.Class _opsClass = CurrentOperations.class;


    public _CurrentStub () {}

    public void begin(
        int timeout
    ) throws org.omg.CosActivity.InvalidState, org.omg.CosActivity.TimeoutOutOfRange
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("begin", true);
                    _output.write_long(timeout);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.InvalidStateHelper.id())) {
                            throw org.omg.CosActivity.InvalidStateHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.TimeoutOutOfRangeHelper.id())) {
                            throw org.omg.CosActivity.TimeoutOutOfRangeHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("begin", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    _self.begin(timeout);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.Outcome complete() throws org.omg.CosActivity.NoActivity, org.omg.CosActivity.ActivityPending, org.omg.CosActivity.ChildContextPending, org.omg.CosActivity.ActivityNotProcessed
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.Outcome _result;
                try {
                    _output = _request("complete", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.OutcomeHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.NoActivityHelper.id())) {
                            throw org.omg.CosActivity.NoActivityHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.ActivityPendingHelper.id())) {
                            throw org.omg.CosActivity.ActivityPendingHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.ChildContextPendingHelper.id())) {
                            throw org.omg.CosActivity.ChildContextPendingHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.ActivityNotProcessedHelper.id())) {
                            throw org.omg.CosActivity.ActivityNotProcessedHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("complete", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.complete();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.Outcome complete_with_status(
        org.omg.CosActivity.CompletionStatus cs
    ) throws org.omg.CosActivity.NoActivity, org.omg.CosActivity.ActivityPending, org.omg.CosActivity.ChildContextPending, org.omg.CosActivity.InvalidState, org.omg.CosActivity.ActivityNotProcessed
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.Outcome _result;
                try {
                    _output = _request("complete_with_status", true);
                    org.omg.CosActivity.CompletionStatusHelper.write(_output, cs);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.OutcomeHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.NoActivityHelper.id())) {
                            throw org.omg.CosActivity.NoActivityHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.ActivityPendingHelper.id())) {
                            throw org.omg.CosActivity.ActivityPendingHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.ChildContextPendingHelper.id())) {
                            throw org.omg.CosActivity.ChildContextPendingHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.InvalidStateHelper.id())) {
                            throw org.omg.CosActivity.InvalidStateHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.ActivityNotProcessedHelper.id())) {
                            throw org.omg.CosActivity.ActivityNotProcessedHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("complete_with_status", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.complete_with_status(cs);
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void set_completion_status(
        org.omg.CosActivity.CompletionStatus cs
    ) throws org.omg.CosActivity.NoActivity, org.omg.CosActivity.InvalidState
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("set_completion_status", true);
                    org.omg.CosActivity.CompletionStatusHelper.write(_output, cs);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.NoActivityHelper.id())) {
                            throw org.omg.CosActivity.NoActivityHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.InvalidStateHelper.id())) {
                            throw org.omg.CosActivity.InvalidStateHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("set_completion_status", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    _self.set_completion_status(cs);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.CompletionStatus get_completion_status() throws org.omg.CosActivity.NoActivity
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.CompletionStatus _result;
                try {
                    _output = _request("get_completion_status", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.CompletionStatusHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.NoActivityHelper.id())) {
                            throw org.omg.CosActivity.NoActivityHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_completion_status", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.get_completion_status();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void set_completion_signal_set(
        java.lang.String signal_set_name
    ) throws org.omg.CosActivity.NoActivity, org.omg.CosActivity.SignalSetUnknown, org.omg.CosActivity.InvalidState
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("set_completion_signal_set", true);
                    _output.write_string(signal_set_name);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.NoActivityHelper.id())) {
                            throw org.omg.CosActivity.NoActivityHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.SignalSetUnknownHelper.id())) {
                            throw org.omg.CosActivity.SignalSetUnknownHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.InvalidStateHelper.id())) {
                            throw org.omg.CosActivity.InvalidStateHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("set_completion_signal_set", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    _self.set_completion_signal_set(signal_set_name);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public java.lang.String get_completion_signal_set() throws org.omg.CosActivity.NoActivity
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                java.lang.String _result;
                try {
                    _output = _request("get_completion_signal_set", true);
                    _input = _invoke(_output);
                    _result = _input.read_string();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.NoActivityHelper.id())) {
                            throw org.omg.CosActivity.NoActivityHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_completion_signal_set", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.get_completion_signal_set();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.ActivityToken suspend() throws org.omg.CosActivity.InvalidParentContext
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.ActivityToken _result;
                try {
                    _output = _request("suspend", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.ActivityTokenHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.InvalidParentContextHelper.id())) {
                            throw org.omg.CosActivity.InvalidParentContextHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("suspend", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.suspend();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void resume(
        org.omg.CosActivity.ActivityToken at
    ) throws org.omg.CosActivity.InvalidToken, org.omg.CosActivity.InvalidParentContext
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("resume", true);
                    org.omg.CosActivity.ActivityTokenHelper.write(_output, at);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.InvalidTokenHelper.id())) {
                            throw org.omg.CosActivity.InvalidTokenHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.InvalidParentContextHelper.id())) {
                            throw org.omg.CosActivity.InvalidParentContextHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("resume", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    _self.resume(at);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.ActivityToken suspend_all()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.ActivityToken _result;
                try {
                    _output = _request("suspend_all", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.ActivityTokenHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("suspend_all", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.suspend_all();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void resume_all(
        org.omg.CosActivity.ActivityToken at
    ) throws org.omg.CosActivity.InvalidToken, org.omg.CosActivity.InvalidParentContext
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("resume_all", true);
                    org.omg.CosActivity.ActivityTokenHelper.write(_output, at);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.InvalidTokenHelper.id())) {
                            throw org.omg.CosActivity.InvalidTokenHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.InvalidParentContextHelper.id())) {
                            throw org.omg.CosActivity.InvalidParentContextHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("resume_all", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    _self.resume_all(at);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public byte[] get_global_id()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                byte[] _result;
                try {
                    _output = _request("get_global_id", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.GlobalIdHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_global_id", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.get_global_id();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.Status get_status()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.Status _result;
                try {
                    _output = _request("get_status", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.StatusHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_status", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.get_status();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public java.lang.String get_activity_name()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                java.lang.String _result;
                try {
                    _output = _request("get_activity_name", true);
                    _input = _invoke(_output);
                    _result = _input.read_string();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_activity_name", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.get_activity_name();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void set_timeout(
        int seconds
    ) throws org.omg.CosActivity.TimeoutOutOfRange
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("set_timeout", true);
                    _output.write_long(seconds);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.TimeoutOutOfRangeHelper.id())) {
                            throw org.omg.CosActivity.TimeoutOutOfRangeHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("set_timeout", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    _self.set_timeout(seconds);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public int get_timeout()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                int _result;
                try {
                    _output = _request("get_timeout", true);
                    _input = _invoke(_output);
                    _result = _input.read_long();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_timeout", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.get_timeout();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.ActivityContext get_context()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.ActivityContext _result;
                try {
                    _output = _request("get_context", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.ActivityContextHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_context", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.get_context();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void recreate_context(
        org.omg.CosActivity.ActivityContext ctx
    ) throws org.omg.CosActivity.InvalidContext
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("recreate_context", true);
                    org.omg.CosActivity.ActivityContextHelper.write(_output, ctx);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.InvalidContextHelper.id())) {
                            throw org.omg.CosActivity.InvalidContextHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("recreate_context", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    _self.recreate_context(ctx);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.ActivityCoordinator get_coordinator()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.ActivityCoordinator _result;
                try {
                    _output = _request("get_coordinator", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.ActivityCoordinatorHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_coordinator", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.get_coordinator();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.ActivityCoordinator get_parent_coordinator()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.ActivityCoordinator _result;
                try {
                    _output = _request("get_parent_coordinator", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.ActivityCoordinatorHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_parent_coordinator", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.get_parent_coordinator();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.ActivityIdentity get_identity()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.ActivityIdentity _result;
                try {
                    _output = _request("get_identity", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.ActivityIdentityHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_identity", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.get_identity();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.ActivityToken get_token()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.ActivityToken _result;
                try {
                    _output = _request("get_token", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.ActivityTokenHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_token", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.get_token();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosActivity.PropertyGroup get_property_group(
        java.lang.String name
    ) throws org.omg.CosActivity.PropertyGroupUnknown, org.omg.CosActivity.NoActivity
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosActivity.PropertyGroup _result;
                try {
                    _output = _request("get_property_group", true);
                    _output.write_string(name);
                    _input = _invoke(_output);
                    _result = org.omg.CosActivity.PropertyGroupHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivity.PropertyGroupUnknownHelper.id())) {
                            throw org.omg.CosActivity.PropertyGroupUnknownHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosActivity.NoActivityHelper.id())) {
                            throw org.omg.CosActivity.NoActivityHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_property_group", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.get_property_group(name);
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void register_property_group(
        java.lang.String property_group_name,
        org.omg.CosActivityAdministration.PropertyGroupManager manager,
        org.omg.CosActivityAdministration.PropertyGroupAttributes attributes
    ) throws org.omg.CosActivityAdministration.PropertyGroupAlreadyRegistered
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("register_property_group", true);
                    _output.write_string(property_group_name);
                    org.omg.CosActivityAdministration.PropertyGroupManagerHelper.write(_output, manager);
                    org.omg.CosActivityAdministration.PropertyGroupAttributesHelper.write(_output, attributes);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivityAdministration.PropertyGroupAlreadyRegisteredHelper.id())) {
                            throw org.omg.CosActivityAdministration.PropertyGroupAlreadyRegisteredHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("register_property_group", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    _self.register_property_group(property_group_name, manager, attributes);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void unregister_property_group(
        java.lang.String property_group_name
    ) throws org.omg.CosActivityAdministration.PropertyGroupNotRegistered
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("unregister_property_group", true);
                    _output.write_string(property_group_name);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosActivityAdministration.PropertyGroupNotRegisteredHelper.id())) {
                            throw org.omg.CosActivityAdministration.PropertyGroupNotRegisteredHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("unregister_property_group", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    _self.unregister_property_group(property_group_name);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public static final String _interfaces[] =
    {"IDL:omg.org/CosActivityAdministration/Current:1.0", "IDL:omg.org/CosActivity/Current:1.0"};

    public String[] _ids()
    {
        return _interfaces;
    }

}
