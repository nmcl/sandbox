//
// Java generated by the OrbixWeb IDL compiler 
//

package org.omg.CosTransactions.otid_tPackage;

import IE.Iona.OrbixWeb._OrbixWeb;


public class tidHelper
{
    public static void insert (org.omg.CORBA.Any any, byte[] value)
    {
        any.insert_Streamable(new org.omg.CosTransactions.otid_tPackage.tidHolder(value));
    }
    public static byte[] extract (org.omg.CORBA.Any any)
    {
        if (!any.type().equal(type())) 
            throw new org.omg.CORBA.BAD_TYPECODE("Error inserting/extracting value from typecode.");
        else
            return read(any.create_input_stream()); 
    }
    private static org.omg.CORBA.TypeCode _type;
    public static org.omg.CORBA.TypeCode type()
    {
        if (_type == null) {
            org.omg.CORBA.TypeCode _tc = org.omg.CORBA.ORB.init().get_primitive_tc(org.omg.CORBA.TCKind.tk_octet);
            _type =  org.omg.CORBA.ORB.init().create_sequence_tc(0, _tc);
        }
        return _type;
    }
    public static org.omg.CORBA.ORB _orb () {
        return org.omg.CORBA.ORB.init(); 
    }
    public static String id () {
        return "";
    }
    public static byte[] read (org.omg.CORBA.portable.InputStream _stream)
    {
        int _l = _OrbixWeb.MarshalBuffer(_stream).extract_array_header(tidHelper.type());
        byte value []= new byte[_l];
        _stream.read_octet_array(value,0 , value.length);
        _OrbixWeb.MarshalBuffer(_stream).array_marshal(false);
        return value;
    }
    public static void write (org.omg.CORBA.portable.OutputStream _stream, byte[] value)
    {
        _OrbixWeb.MarshalBuffer(_stream).insert_array_header(tidHelper.type(),value.length);

        _stream.write_octet_array(value, 0, value.length);
        _OrbixWeb.MarshalBuffer(_stream).array_marshal(false);
    }
}
