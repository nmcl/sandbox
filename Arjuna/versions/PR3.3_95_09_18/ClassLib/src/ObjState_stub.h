/*
 * Automatically Generated by:
 * Arjuna Stub Generator Version 5.5.3 - $Date: 1996/09/10 15:38:44 $
 *
 * Do Not Edit By Hand
 *
 */

#ifdef STUB
#  pragma @NoRename
#endif

#ifndef OBJSTATE_STUB_H_
#define OBJSTATE_STUB_H_

#ifndef STUBGEN_TYPES_H_
#  include <StubGen/Types.h>
#endif

class RpcBuffer;
class ClientRpcManager;


#include <System/stddef.h>

#include <Common/CommonT.h>

#include <Common/Uid_stub.h>

#include <Common/Buffer_stub.h>
/* @NoRemote */ class RpcBuffer ;
/* @NoRemote, @UserMarshall */ class ObjectState: public Buffer
{
public:
	/* @NoMarshall */ ObjectState ( );
	/* @NoMarshall */ ObjectState ( const ObjectState& );
	/* @NoMarshall */ ObjectState ( const Uid& , TypeName );
	/* @NoMarshall */ ObjectState ( const Uid& , TypeName , size_t , char* );
	/* @NoMarshall */ ~ObjectState ( );
	/* @NoMarshall */ Boolean notempty ( ) const ;
	/* @NoMarshall */ size_t size ( ) const ;
	/* @NoMarshall */ const Uid& stateUid ( ) const ;
	/* @NoMarshall */ const TypeName type ( ) const ;
	/* @NoMarshall */ ObjectState& operator = ( const ObjectState& );
	/* @NoMarshall */ virtual Boolean packInto ( Buffer& ) const ;
	/* @NoMarshall */ virtual Boolean unpackFrom ( Buffer& );
	/* @NoMarshall */ virtual void marshall ( RpcBuffer& ) const ;
	/* @NoMarshall */ virtual void unmarshall ( RpcBuffer& );
	/* @NoMarshall */ virtual ostream& print ( ostream& ) const ;
private:
	/* @NoMarshall */ void copytype ( const TypeName );
	Uid bufferUid;
	TypeName imageType;
};

#ifndef STUB

extern RpcBuffer& operator<< ( RpcBuffer&, const ObjectState *);
extern RpcBuffer& operator>> ( RpcBuffer&, ObjectState *&);

extern RpcBuffer& operator<< ( RpcBuffer& rpcbuff, const ObjectState& topack);
extern RpcBuffer& operator>> ( RpcBuffer& rpcbuff, ObjectState& tounpack);
#endif


#include <Arjuna/ObjState.n>

#endif  /* OBJSTATE_STUB_H_ */
