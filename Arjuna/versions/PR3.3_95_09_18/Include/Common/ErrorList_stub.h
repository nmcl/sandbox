/*
 * Automatically Generated by:
 * Arjuna Stub Generator Version 5.5.3 - $Date: 1996/09/10 15:38:44 $
 *
 * Do Not Edit By Hand
 *
 */

#ifdef STUB
#  pragma @NoRename
#endif

#ifndef ERRORLIST_STUB_H_
#define ERRORLIST_STUB_H_

#ifndef STUBGEN_TYPES_H_
#  include <StubGen/Types.h>
#endif

class RpcBuffer;
class ClientRpcManager;


#include <Common/CommonT.h>

#include <Common/Error_stub.h>
/* @NoRemote, @AutoMarshall */ class ErrorList
{
		/* @NoRemote @NoMarshall */ friend class ErrorListI ;
public:
	/* @NoMarshall */ ErrorList ( );
	/* @NoMarshall */ ~ErrorList ( );
	/* @NoMarshall */ void clearList ( );
	/* @NoMarshall */ const Error* const  findError ( FacilityCode ) const ;
	/* @NoMarshall */ int entryCount ( ) const ;
	/* @NoMarshall */ Boolean insert ( Error* );
	/* @NoMarshall */ Error* pop ( );
	/* @NoMarshall */ void push ( Error* );
	/* @NoMarshall */ void forgetNext ( Error* );
private:
	int count;
	Error* head;
#ifndef STUB
public:
	void marshall (RpcBuffer&) const;
	void unmarshall (RpcBuffer&);

#endif
};

#ifndef STUB

extern RpcBuffer& operator<< ( RpcBuffer&, const ErrorList *);
extern RpcBuffer& operator>> ( RpcBuffer&, ErrorList *&);

extern RpcBuffer& operator<< ( RpcBuffer& rpcbuff, const ErrorList& topack);
extern RpcBuffer& operator>> ( RpcBuffer& rpcbuff, ErrorList& tounpack);
#endif


#include <Common/ErrorList.n>

#endif  /* ERRORLIST_STUB_H_ */
