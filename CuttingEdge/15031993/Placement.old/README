/*
 * Copyright (C) 1993
 *
 * Department of Computing Science,
 * The University,
 * Newcastle upon Tyne,
 * UK.
 */

D. McCue, M. Little	Computing Laboratory
29 November 1991	University of Newcastle upon Tyne, NE1 7RU, England

This is version 1.0 of C++SIM, a set of c++ class definitions that mimic the
process-based simulation facilities of SIMULA and the SIMSET routines.  

The co-routine facility of Simula is implemented by Sun threads.
Classes are provided for various random number distributions.

The following classes are defined:

    Process	- An abstract class that exports the major functions
		  of the Simula class, process.  To use, derive your own
		  class from the class Process.  The pure virtual function,
		  Body, is the "main" procedure of the class.  Note that,
		  like Simula, a process is not scheduled to run when it is
		  created.  It must be explicitly 'activated'.

    ProcessList	- A list class for processes that (by default) orders
		  the elements by event time.

    ProcessIterator - An iterator class for ProcessList.

    ProcessCons - Allows LISP-like list manipulation (car & cdr).

    Random - A series of classes which provide various random number
	     streams.

    Element & Head - These classes form the basis of the SIMSET utility.

    thread - The basic thread class, which defines what operations other
	     threads packages must provide. This is essentially a template
	     which allows other thread packages to be used as long as they
	     provide at least the operations necessary for this class.

    lwp_thread - This is the Sun threads class.

    gnu_thread - This is the interface to Gnu's thread package.



If you find any bugs or make modifications (e.g., ports to other thread
packages) then please let me know so I can keep the sources up-to-date
for other users.

Send to: M.C.Little@ac.uk.newcastle



