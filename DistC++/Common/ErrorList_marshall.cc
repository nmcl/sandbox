/*
 * Automatically Generated by:
 * Arjuna Stub Generator Version 5.5.3 - $Date: 1997/09/25 15:31:02 $
 *
 * Do Not Edit By Hand
 *
 */

#ifdef STUB
#  pragma @NoRename
#endif

#include "ErrorList_stub.h"

#include <StubGen/RpcBuffer.h>

RpcBuffer& operator<< ( RpcBuffer& rpcbuff, const ErrorList& topack)
{
	rpcbuff << 157776948;
	topack.marshall(rpcbuff);
	return rpcbuff;
}


RpcBuffer& operator>> ( RpcBuffer& rpcbuff, ErrorList& tounpack)
{
	Int32 hashVal;
	rpcbuff >> hashVal;
	if (hashVal != 157776948)
		rpcbuff.setState(BUFFER_BAD);
	else
		tounpack.unmarshall(rpcbuff);
	return rpcbuff;
}


RpcBuffer& operator<< ( RpcBuffer& rpcbuff, const ErrorList *classptr )
{
if (rpcbuff.shouldPack(classptr))
rpcbuff << *classptr;
return rpcbuff;
}


RpcBuffer& operator>> ( RpcBuffer& rpcbuff, ErrorList *& classptr )
{
const void *p = 0;
Int32 index = 0;
if (rpcbuff.unpackPtr(p, index))
{
if (classptr == 0)
classptr = new ErrorList();
rpcbuff >> *classptr;
rpcbuff.saveUnpackedPtr(classptr,index);
}
else
{
if (p == 0)
delete classptr;
classptr = (ErrorList *)p;
}return rpcbuff;
}


void ErrorList::marshall ( RpcBuffer& rpcBuff ) const
{
rpcBuff << count;
rpcBuff << head;

}


void ErrorList::unmarshall ( RpcBuffer& rpcBuff )
{
rpcBuff >> count;
rpcBuff >> head;

}

