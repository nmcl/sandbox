/*
 * Automatically Generated by:
 * Arjuna Stub Generator Version 5.5.3 - $Date: 1997/09/25 15:31:02 $
 *
 * Do Not Edit By Hand
 *
 */

#ifdef STUB
#  pragma @NoRename
#endif

#ifndef ERROR_STUB_H_
#define ERROR_STUB_H_

#ifndef STUBGEN_TYPES_H_
#  include <StubGen/Types.h>
#endif

class RpcBuffer;
class ClientRpcManager;


#include <Common/FacCode_stub.h>

#include <Common/ErrCodes.h>
/* @AutoMarshall */ 
enum ErrorSeverity {FATAL, WARNING};

#ifndef STUB
extern RpcBuffer& operator<< ( RpcBuffer&, ErrorSeverity* );
extern RpcBuffer& operator>> ( RpcBuffer&, ErrorSeverity& );
extern RpcBuffer& operator>> ( RpcBuffer&, ErrorSeverity*&);
#endif
class ostream ;

#ifndef STUB

extern RpcBuffer& operator<< ( RpcBuffer&, const ostream *);
extern RpcBuffer& operator>> ( RpcBuffer&, ostream *&);

extern RpcBuffer& operator<< ( RpcBuffer& rpcbuff, const ostream& topack);
extern RpcBuffer& operator>> ( RpcBuffer& rpcbuff, ostream& tounpack);
#endif

/* @NoRemote, @AutoMarshall */ class Error
{
	friend class ErrorList ;
	friend class ErrorListI ;
public:
	/* @NoMarshall */ Error ( FacilityCode , int , const char* const  , ErrorSeverity  = WARNING);
	/* @NoMarshall */ Error ( );
	/* @NoMarshall */ ~Error ( );
	/* @NoMarshall */ int errorCode ( ) const ;
	/* @NoMarshall */ FacilityCode errorFac ( ) const ;
	/* @NoMarshall */ operator const char* const  ( ) const ;
	/* @NoMarshall */ ostream& print ( ostream& ) const ;
private:
	/* @NoMarshall */ Error* getLink ( ) const ;
	/* @NoMarshall */ void setLink ( Error* );
	int errCode;
	FacilityCode errorFacility;
	ErrorSeverity errorLevel;
	char* errorHead;
	char* errorText;
	Error* nextError;
#ifndef STUB
public:
	void marshall (RpcBuffer&) const;
	void unmarshall (RpcBuffer&);

#endif
};

#ifndef STUB

extern RpcBuffer& operator<< ( RpcBuffer&, const Error *);
extern RpcBuffer& operator>> ( RpcBuffer&, Error *&);

extern RpcBuffer& operator<< ( RpcBuffer& rpcbuff, const Error& topack);
extern RpcBuffer& operator>> ( RpcBuffer& rpcbuff, Error& tounpack);
#endif

extern ostream& operator << ( ostream& , ErrorSeverity );
extern void ArjunaFatal ( );

#include <Common/Error.n>

#endif  /* ERROR_STUB_H_ */
