# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.72 92/09/14 11:44:22 rws Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#

STUBGEN = /home/nmcl/DistC++/StubGen/src/tatsu

MULTISERVER = /home/nmcl/DistC++/Utilities/Tools/multiserver

LIBCOMMON = /home/nmcl/DistC++/lib/libCommon.a

LIBSTUB = /home/nmcl/DistC++/lib/libRPC.a

LIBSIMPLERPC = /home/nmcl/DistC++/lib/libRPC.a

LIBRPC = $(LIBSIMPLERPC)

STD_INCLUDES = /home/nmcl/DistC++/Include

UIDSTUB_H = /home/nmcl/DistC++/include/Common/Uid_stub.h
BUFFSTUB_H = /home/nmcl/DistC++/include/Common/Buffer_stub.h

#
# Make generated for SunOS 5.5.1 - "sun4m"
#

TOPDIR = /home/nmcl/DistC++
INSTALL_TOPDIR = /usr/local/DistC++

CURDIR = .

MAKE = make
IMAKE = imake

MAKEDEPEND = /home/nmcl/DistC++/Utilities/Tools/makedepend

CPLUSPLUS = "g++"
CPLUSPLUS_CROSS = ""

AR = ar
SED = sed
RANLIB = true
PURIFY = "exec"
YACC = "bison"
LEX = "flex"

MV = mv
CP = cp
RM = rm -f
CAT = cat
MKDIR = mkdir
CHMOD = chmod

xMAKEFLAGS =
IMAKEFLAGS = -TConfig/Config.tmpl -I""$(TOPDIR)/Include $(LOCAL_CPPFLAGS) $(CPPFLAGS)
STUBFLAGS += +w +V
MAKEDEPENDFLAGS += -I""$(CPLUSPLUSINCLUDE)
ARFLAGS = rv

CPPFLAGS +=  -DHAVE_SOLARIS_THREADS -DHAVE_POSIX_THREADS -D_REENTRANT -DHAVE_BOOLEAN_TYPE -DHAVE_WCHAR_TYPE -DHAVE_LONG_LONG -DGCC_STATIC_INIT_BUG -DMEMFNS_IN_STRING_H -DSYSV -DHAVE_MMAP -DHAVE_SELECT_H_ -DNEED_USLEEP_PROTO -DNEED_MALLOC_T -DINT_YYLESS  -Dsun -D__sun -D__sun__
CPLUSPLUSFLAGS +=
LDFLAGS +=
xLIBRARIES +=  -lposix4 -lsocket -lnsl

CPPFLAGS_CROSS +=  -DHAVE_BOOLEAN_TYPE -DHAVE_WCHAR_TYPE -DHAVE_LONG_LONG -DGCC_STATIC_INIT_BUG -DMEMFNS_IN_STRING_H -DSYSV -DHAVE_MMAP -DHAVE_SELECT_H_ -DNEED_USLEEP_PROTO -DNEED_MALLOC_T -DINT_YYLESS  -Dsun -D__sun -D__sun__
CPLUSPLUSFLAGS_CROSS +=
LDFLAGS_CROSS +=
xLIBRARIES_CROSS +=  -lsocket -lnsl

YACCFLAGS += -y
LEXFLAGS +=

CPLUSPLUSINCLUDE += /usr/local/GNU/gcc/2.8.1/include/g++

all :: Makefile

Makefile :: Imakefile
	@echo
	@echo "***"
	@echo "*** WARNING : "$(CURDIR)"/Makefile may be out of date,"
	@echo "***         : older than "$(CURDIR)"/Imakefile"
	@echo "***"

#
# Copyright (C) 1993
#
# Department of Computing Science,
# The University,
# Newcastle upon Tyne,
# UK.
#
# $Id: Imakefile,v 1.1 1997/09/25 15:31:04 nmcl Exp $
#
#
#
# Supress dependency on $(STUBGEN)
#

STUBGEN=

LOCAL_CPPFLAGS = -DCOMPILER_NAME=\"$(CPLUSPLUS)\"  -I../include -I$(STD_INCLUDES) -DSYS_INCLUDE=\"-I$(CPLUSPLUSINCLUDE)\" -D__EXTERN_C__

SOURCES = ADclCntxt.cc \
          BaseClass.cc \
          CDclCntxt.cc \
          CLnkage.cc \
	  BoolT.cc \
          CharT.cc \
          ClassT.cc \
          CppLnkage.cc \
          CvQuals.cc \
          CvT.cc \
          DclContxt.cc \
          Debug.cc \
          Decl.cc \
          DeclList.cc \
          DeclListE.cc \
          DeclListI.cc \
          DeclSpec.cc \
          DirectivT.cc \
          DummyArgT.cc \
          DummyT.cc \
	  EDclCntxt.cc \
          EnumT.cc \
          Error.cc \
          Expr.cc \
	  AllocExpr.cc \
	  ArrayExpr.cc \
          BinExpr.cc \
	  Literal.cc \
	  NestExpr.cc \
          FileInfo.cc \
          FloatT.cc \
          FuncMods.cc \
          FuncT.cc \
          GlobalInf.cc \
          IncludeT.cc \
          IntT.cc \
          Interface.cc \
          Linkage.cc \
          Location.cc \
          ModifiedT.cc \
          PointerT.cc \
          QualT.cc \
          StoreSpec.cc \
          StringClass.cc \
          StubMods.cc \
          TDesc.cc \
	  TemplateCT.cc \
	  InstClassT.cc \
	  TmplCntxt.cc \
          Type.cc \
          TypeDefT.cc \
          TypeMods.cc \
          Utility.cc \
          VecT.cc \
          VisSpec.cc \
          VoidT.cc \
          tatsu.cc \
          c++21.gram.cc \
          c++21.lex.cc

OBJECTS = ADclCntxt.o \
          BaseClass.o \
          CDclCntxt.o \
          CLnkage.o \
	  BoolT.o \
          CharT.o \
          ClassT.o \
          CppLnkage.o \
          CvQuals.o \
          CvT.o \
          DclContxt.o \
          Debug.o \
          Decl.o \
          DeclList.o \
          DeclListE.o \
          DeclListI.o \
          DeclSpec.o \
          DirectivT.o \
          DummyArgT.o \
          DummyT.o \
	  EDclCntxt.o \
          EnumT.o \
          Error.o \
          Expr.o \
	  AllocExpr.o \
	  ArrayExpr.o \
	  BinExpr.o \
	  Literal.o \
	  NestExpr.o \
          FileInfo.o \
          FloatT.o \
          FuncMods.o \
          FuncT.o \
          GlobalInf.o \
          IncludeT.o \
          IntT.o \
          Interface.o \
          Linkage.o \
          Location.o \
          ModifiedT.o \
          PointerT.o \
          QualT.o \
          StoreSpec.o \
          StringClass.o \
          StubMods.o \
          TDesc.o \
	  TemplateCT.o \
	  InstClassT.o \
	  TmplCntxt.o \
          Type.o \
          TypeDefT.o \
          TypeMods.o \
          Utility.o \
          VecT.o \
          VisSpec.o \
          VoidT.o \
          tatsu.o \
          c++21.gram.o \
          c++21.lex.o

LOCAL_YACCFLAGS = -d

LOCAL_LIBRARIES =

all :: all.local
all.local : stubs tatsu
	@echo Made $? [in $(CURDIR) ] as $@

install.local :: $(INSTALL_TOPDIR)/bin $(INSTALL_TOPDIR)/bin/tatsu

$(INSTALL_TOPDIR)/bin :: $(INSTALL_TOPDIR)
	@if test ! -d $(INSTALL_TOPDIR)/bin; \
	then \
	echo Creating Directory $(INSTALL_TOPDIR)/bin; \
	$(MKDIR) $(INSTALL_TOPDIR)/bin; \
	$(CHMOD) u=rwx,g=rx,o=rx $(INSTALL_TOPDIR)/bin; \
	fi

$(INSTALL_TOPDIR)/bin/tatsu : tatsu
	@echo Copying tatsu to $(INSTALL_TOPDIR)/bin/tatsu
	@$(CP) tatsu $(INSTALL_TOPDIR)/bin/tatsu
	@$(CHMOD) u=rwx,g=rx,o=rx $(INSTALL_TOPDIR)/bin/tatsu

tatsu :  $(OBJECTS)
	@echo Linking $@
	@eval $(PURIFY) $(CPLUSPLUS) $(LOCAL_LDFLAGS) $(LDFLAGS) -o tatsu  $(OBJECTS)   $(LOCAL_LIBRARIES) $(xLIBRARIES)

ADclCntxt.o : ADclCntxt.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) ADclCntxt.cc

BaseClass.o : BaseClass.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) BaseClass.cc

CDclCntxt.o : CDclCntxt.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) CDclCntxt.cc

CLnkage.o : CLnkage.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) CLnkage.cc

BoolT.o : BoolT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) BoolT.cc

CharT.o : CharT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) CharT.cc

ClassT.o : ClassT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) ClassT.cc

CppLnkage.o : CppLnkage.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) CppLnkage.cc

CvQuals.o : CvQuals.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) CvQuals.cc

CvT.o : CvT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) CvT.cc

DclContxt.o : DclContxt.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) DclContxt.cc

Debug.o : Debug.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) Debug.cc

Decl.o : Decl.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) Decl.cc

DeclList.o : DeclList.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) DeclList.cc

DeclListE.o : DeclListE.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) DeclListE.cc

DeclListI.o : DeclListI.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) DeclListI.cc

DeclSpec.o : DeclSpec.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) DeclSpec.cc

DirectivT.o : DirectivT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) DirectivT.cc

DummyT.o : DummyT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) DummyT.cc

DummyArgT.o : DummyArgT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) DummyArgT.cc

EDclCntxt.o : EDclCntxt.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) EDclCntxt.cc

EnumT.o : EnumT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) EnumT.cc

Error.o : Error.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) Error.cc

Expr.o : Expr.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) Expr.cc

AllocExpr.o : AllocExpr.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) AllocExpr.cc

ArrayExpr.o : ArrayExpr.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) ArrayExpr.cc

BinExpr.o : BinExpr.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) BinExpr.cc

Literal.o : Literal.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) Literal.cc

NestExpr.o : NestExpr.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) NestExpr.cc

FileInfo.o : FileInfo.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) FileInfo.cc

FloatT.o : FloatT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) FloatT.cc

FuncMods.o : FuncMods.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) FuncMods.cc

FuncT.o : FuncT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) FuncT.cc

GlobalInf.o : GlobalInf.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) GlobalInf.cc

IncludeT.o : IncludeT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) IncludeT.cc

IntT.o : IntT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) IntT.cc

IntegralT.o : IntegralT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) IntegralT.cc

Interface.o : Interface.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) Interface.cc

Linkage.o : Linkage.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) Linkage.cc

Location.o : Location.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) Location.cc

ModifiedT.o : ModifiedT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) ModifiedT.cc

PointerT.o : PointerT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) PointerT.cc

QualT.o : QualT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) QualT.cc

StoreSpec.o : StoreSpec.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) StoreSpec.cc

StringClass.o : StringClass.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) StringClass.cc

StubMods.o : StubMods.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) StubMods.cc

TDesc.o : TDesc.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) TDesc.cc

TemplateCT.o : TemplateCT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) TemplateCT.cc

InstClassT.o : InstClassT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) InstClassT.cc

TmplCntxt.o : TmplCntxt.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) TmplCntxt.cc

Type.o : Type.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) Type.cc

TypeDefT.o : TypeDefT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) TypeDefT.cc

TypeMods.o : TypeMods.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) TypeMods.cc

Utility.o : Utility.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) Utility.cc

VecT.o : VecT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) VecT.cc

VisSpec.o : VisSpec.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) VisSpec.cc

VoidT.o : VoidT.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) VoidT.cc

tatsu.o : tatsu.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) tatsu.cc

c++21.gram.cc c++21.gram.h : c++21.gram.y
	@echo Creating $@ from $?
	@$(YACC) $(YACCFLAGS) $(LOCAL_YACCFLAGS) c++21.gram.y
	@$(MV) y.tab.h c++21.gram.h
	@$(CAT) < y.tab.c > c++21.gram.cc
	@$(RM) y.tab.c

c++21.gram.o : c++21.gram.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) c++21.gram.cc

c++21.lex.cc : c++21.lex.l
	@echo Creating $@ from $?
	@$(LEX) $(LEXFLAGS) $(LOCAL_LEXFLAGS) c++21.lex.l
	@$(SED) -e ""s@lex.yy.c@c++21.lex.cc@"" lex.yy.c > lex.yy.c.temp
	@$(CAT) < lex.yy.c.temp > c++21.lex.cc
	@$(RM) lex.yy.c lex.yy.c.temp

c++21.lex.o : c++21.lex.cc
	@echo Compiling $@
	@exec $(CPLUSPLUS) -c   $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_CPLUSPLUSFLAGS) $(CPLUSPLUSFLAGS) c++21.lex.cc

tidy :: tidy.local

tidy.local ::
	@$(RM) core *~ \#*\# *.bak *.BAK *\%

clean :: clean.local

clean.local :: tidy.local
	@$(RM) -f .dummy $(OBJECTS)

purge :: purge.local

purge.local :: clean.local
	@$(RM) -f Makefile tatsu y.output c++21.gram.cc c++21.gram.h c++21.lex.cc *.stamp
	@$(RM) -rf Templates.DB

Makefiles ::

all :: all.local

all.local :

depend :: depend.local

depend.local :: $(SOURCES)
	@CC=$(CPLUSPLUS) $(MAKEDEPEND) $(LOCAL_CPPFLAGS) $(CPPFLAGS) $(LOCAL_MAKEDEPENDFLAGS) $(MAKEDEPENDFLAGS) $(SOURCES)

tidy :: tidy.local

tidy.local ::
	@$(RM) core *~ \#*\# *.bak *.BAK *\%

clean :: clean.local

clean.local :: tidy.local
	@$(RM) -f .dummy $(OBJECTS)

purge :: purge.local

purge.local :: clean.local
	@$(RM) -f Makefile $(OBJECTS) *.stamp
	@$(RM) -rf Templates.DB

Makefile_ ::
	@echo Making $@ [in $(CURDIR) ]
	@$(IMAKE) $(IMAKEFLAGS);$(MV) Makefile Makefile.sed;$(SED) -e '/^COMMENT$$/s//#/' -e '/^COMMENT /s//# /' -e 's/\%\%/\\"/g' < Makefile.sed > Makefile;$(RM) Makefile.sed

install :: install.local

install :: all.local

install.local ::

stubs :: $(STUBGEN) stubs.local

stubs.local ::

