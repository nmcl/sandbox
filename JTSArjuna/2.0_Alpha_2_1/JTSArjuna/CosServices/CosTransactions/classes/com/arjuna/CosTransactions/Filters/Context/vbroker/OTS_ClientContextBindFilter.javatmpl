/*
 * Copyright (C) 1998, 1999, 2000,
 *
 * Arjuna Solutions Limited,
 * Tyne and Wear,
 * Tyne and Wear,
 * UK.  
 *
 * $Id: OTS_ClientContextBindFilter.javatmpl,v 1.2 2000/04/14 15:40:05 nmcl Exp $
 */

#include <Common/OrbPortability.h>
#include <CosTransactions/CosTranNames.h>

package com.arjuna.CosTransactions.Filters.Context.vbroker;

import com.arjuna.OrbCommon.ORBInterface;
import com.arjuna.CosTransactions.*;
import org.omg.CosTransactions.*;
import com.arjuna.ArjunaOTS.*;

import com.visigenic.vbroker.interceptor.*;
import com.visigenic.vbroker.IOP.*;

#ifndef JAR_PACKAGE_PROBLEM
import NAMESPACE_(CORBA).*;
#else
import NAMESPACE_(CORBA).BOA;
import NAMESPACE_(CORBA).CompletionStatus;
#endif

import NAMESPACE_(CORBA).SystemException;
import NAMESPACE_(CORBA).BAD_PARAM;
import NAMESPACE_(CORBA).UNKNOWN;

#include <CosTransactions/CosTranExceptions.h>

public class OTS_ClientContextBindFilter implements BindInterceptor
{

public OTS_ClientContextBindFilter ()
    {
#ifdef DEBUG
	System.out.println("OTS_ClientContextBindFilter created.");
#endif
    }
	    
public boolean bind (IORHolder ior, org.omg.CORBA.Object object, Closure closure)
    {
        return false;
    }

public boolean bind_failed (IORHolder ior, org.omg.CORBA.Object object, Closure closure)
    {
#ifdef DEBUG
	System.out.println("OTS_ClientContextBindFilter - bind failed.");
#endif
	
	return false;
    }

public void bind_succeeded (IOR ior, org.omg.CORBA.Object object, Closure closure)
    {
#ifdef DEBUG
	System.out.println("OTS_ClientContextBindFilter - bind succeeded.");
#endif
    }

public boolean rebind (IORHolder ior, org.omg.CORBA.Object object, Closure closure)
    {
        return false;
    }

public boolean rebind_failed (IORHolder ior, org.omg.CORBA.Object object, Closure closure)
    {
        return false;
    }

public void rebind_succeeded (IOR ior, org.omg.CORBA.Object object, Closure closure)
    {
    }

public void exception_occurred (IOR ior, org.omg.CORBA.Object object, org.omg.CORBA.Environment env, Closure closure)
    {
    }
    
};
