/*
 * Copyright (C) 1998, 1999, 2000,
 *
 * Arjuna Solutions Limited,
 * Newcastle upon Tyne,
 * Tyne and Wear,
 * UK.
 *
 * $Id: GridClient.javatmpl,v 1.1 2000/02/25 14:07:25 nmcl Exp $
 */

#include <Common/OrbPortability.h>

import CosTransactionsTests.*;
import TestModule.*;
import com.arjuna.OrbCommon.*;
import com.arjuna.CosTransactions.OTS_Factory;
import com.arjuna.CosTransactions.OTS;
import org.omg.CosTransactions.*;

import org.omg.CosTransactions.Unavailable;
import NAMESPACE_(CORBA).SystemException;
import NAMESPACE_(CORBA).UserException;

public class GridClient
{

public static void main (String[] args)
    {
	ORBInterface.initORB(args, null);
	ORBInterface.initOA();
	
	TransactionFactory theOTS = null;
	Control myControl = null;
	grid gridVar = null;
	int h = -1, w = -1, v = -1;
	String gridReference = "/tmp/grid.ref";
	String serverName = "Grid";

	if (System.getProperty("os.name").startsWith("Windows"))
	{
	    gridReference = "C:\\temp\\grid.ref";
	}
	
	for (int i = 0; i < args.length; i++)
	{
	    if (args[i].compareTo("-help") == 0)
	    {
		System.out.println("Usage: GridClient [-server <name>] [-reffile <file>] [-help]");
		System.exit(0);
	    }
	    if (args[i].compareTo("-server") == 0)
	    {
#ifdef HAVE_MARKER_NAME
		serverName = args[i+1];
#else
		System.out.println("Sorry, server name not supported by ORB.");
		System.exit(0);
#endif
	    }
	    if (args[i].compareTo("-reffile") == 0)
		gridReference = args[i+1];
	}

	try
	{
#ifndef USE_BIND
	    String[] params = new String[1];

	    params[0] = ORBServices.otsKind;
	    
	    NAMESPACE_(CORBA).Object obj = ORBServices.getService(ORBServices.transactionService,
								  params);

	    params = null;
	    theOTS = HELPER_CLASS_(TransactionFactory).narrow(obj);
#else
#ifndef ORBIXWEB	    
	    theOTS = SCOPED_CORBA_BIND_(org.omg.CosTransactions,TransactionFactory,ORBServices.transactionService);
#else
	    theOTS = SCOPED_CORBA_BIND_(org.omg.CosTransactions,TransactionFactory,":"+ORBServices.transactionService);
#endif	    
#endif
	}
	catch (Exception e)
	{
	    System.err.println("Unexpected bind exception: "+e);
	    System.exit(1);
	}

	System.out.println("Creating transaction.");
	
	try
	{
	    myControl = theOTS.create(0);
	}
	catch (Exception e)
	{
	    System.err.println("Create call failed: "+e);
	    e.printStackTrace();
	    System.exit(1);
	}
	
	try
	{
#ifdef USE_BIND
#ifdef ORBIXWEB
	    serverName = ":"+serverName;
#endif
	    gridVar = CORBA_BIND_(grid, serverName);
#else	    
	    gridVar = HELPER_CLASS_(grid).narrow(ORBObject.fileToObject(gridReference));
#endif
	}
	catch (Exception e)
	{
	    System.err.println("Grid bind failed: "+e);
	    System.exit(1);
	}

	try
	{
	    h = gridVar.height();
	    w = gridVar.width();
	}
	catch (Exception e)
	{
	    System.err.println("Grid invocation failed: "+e);
	    System.exit(1);
	}

	System.out.println("height is "+h);
	System.out.println("width  is "+w);

	try
	{
	    System.out.println("calling set");
	     
	    gridVar.set(2, 4, 123, myControl);

	    System.out.println("calling get");
	
	    v = gridVar.get(2, 4, myControl);
	}
	catch (Exception sysEx)
	{
	    System.err.println("Grid set/get failed: "+sysEx);
	    System.exit(1);
	}

	// no problem setting and getting the elememt:
	System.out.println("grid[2,4] is "+v);
	
	// sanity check: make sure we got the value 123 back:
	if (v != 123)
	{
	    // oops - we didn't:
	    System.err.println("something went seriously wrong");

	    try
	    {
		myControl.get_terminator().rollback();
	    }
	    catch (Exception e)
	    {
	    }
	
	    System.exit(1);
	}
	else
	{
	    System.out.println("Committing transaction.");
	    
	    try
	    {
		Terminator handle = myControl.get_terminator();
      
		handle.commit(true);
	    }
	    catch (Exception sysEx)
	    {
		System.err.println("Transaction commit error: "+sysEx);
		System.exit(1);
	    }
	}
	
	/*
	 * OTSArjuna specific call to tell the system
	 * that we are finished with this transaction.
	 */

	try
	{
	    OTS.destroyControl(myControl);
	}
	catch (Exception e)
	{
	    System.out.println("Caught destroy exception: "+e);
	    System.exit(0);
	}

	ORBInterface.shutdownOA();
	ORBInterface.shutdownORB();

	System.out.println("Test completed successfully.");
    }
 
};

