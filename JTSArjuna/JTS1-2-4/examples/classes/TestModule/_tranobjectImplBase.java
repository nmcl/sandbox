// **********************************************************************
//
// Generated by the ORBacus IDL to Java Translator
//
// Copyright (c) 1999
// Object-Oriented Concepts, Inc.
// Billerica, MA, USA
//
// Copyright (c) 1999
// Object-Oriented Concepts GmbH
// Ettlingen, Germany
//
// All Rights Reserved
//
// **********************************************************************

// Version: 3.1.3
// License: non-commercial

package TestModule;

//
// IDL:/TestModule/tranobject:1.0
//
public abstract class _tranobjectImplBase extends org.omg.CORBA.DynamicImplementation
                                          implements tranobject
{

    //
    // IDL:/TestModule/tranobject/foobar:1.0
    //
    final private void
    _OB_op_foobar(org.omg.CORBA.ServerRequest _ob_req)
    {
        org.omg.CORBA.NVList _ob_list = _orb().create_list(0);
        _ob_req.params(_ob_list);

        foobar();
    }

    //
    // IDL:omg.org/CosTransactions/Resource/prepare:1.0
    //
    final private void
    _OB_op_prepare(org.omg.CORBA.ServerRequest _ob_req)
    {
        org.omg.CORBA.NVList _ob_list = _orb().create_list(0);
        _ob_req.params(_ob_list);

        try
        {
            org.omg.CosTransactions.Vote _ob_r = prepare();

            org.omg.CORBA.Any _ob_ra = _orb().create_any();
            org.omg.CosTransactions.VoteHelper.insert(_ob_ra, _ob_r);
            _ob_req.result(_ob_ra);
        }
        catch(org.omg.CosTransactions.HeuristicMixed _ob_ex)
        {
            org.omg.CORBA.Any _ob_exa = _orb().create_any();
            org.omg.CosTransactions.HeuristicMixedHelper.insert(_ob_exa, _ob_ex);
            _ob_req.except(_ob_exa);
        }
        catch(org.omg.CosTransactions.HeuristicHazard _ob_ex)
        {
            org.omg.CORBA.Any _ob_exa = _orb().create_any();
            org.omg.CosTransactions.HeuristicHazardHelper.insert(_ob_exa, _ob_ex);
            _ob_req.except(_ob_exa);
        }
    }

    //
    // IDL:omg.org/CosTransactions/Resource/rollback:1.0
    //
    final private void
    _OB_op_rollback(org.omg.CORBA.ServerRequest _ob_req)
    {
        org.omg.CORBA.NVList _ob_list = _orb().create_list(0);
        _ob_req.params(_ob_list);

        try
        {
            rollback();
        }
        catch(org.omg.CosTransactions.HeuristicCommit _ob_ex)
        {
            org.omg.CORBA.Any _ob_exa = _orb().create_any();
            org.omg.CosTransactions.HeuristicCommitHelper.insert(_ob_exa, _ob_ex);
            _ob_req.except(_ob_exa);
        }
        catch(org.omg.CosTransactions.HeuristicMixed _ob_ex)
        {
            org.omg.CORBA.Any _ob_exa = _orb().create_any();
            org.omg.CosTransactions.HeuristicMixedHelper.insert(_ob_exa, _ob_ex);
            _ob_req.except(_ob_exa);
        }
        catch(org.omg.CosTransactions.HeuristicHazard _ob_ex)
        {
            org.omg.CORBA.Any _ob_exa = _orb().create_any();
            org.omg.CosTransactions.HeuristicHazardHelper.insert(_ob_exa, _ob_ex);
            _ob_req.except(_ob_exa);
        }
    }

    //
    // IDL:omg.org/CosTransactions/Resource/commit:1.0
    //
    final private void
    _OB_op_commit(org.omg.CORBA.ServerRequest _ob_req)
    {
        org.omg.CORBA.NVList _ob_list = _orb().create_list(0);
        _ob_req.params(_ob_list);

        try
        {
            commit();
        }
        catch(org.omg.CosTransactions.NotPrepared _ob_ex)
        {
            org.omg.CORBA.Any _ob_exa = _orb().create_any();
            org.omg.CosTransactions.NotPreparedHelper.insert(_ob_exa, _ob_ex);
            _ob_req.except(_ob_exa);
        }
        catch(org.omg.CosTransactions.HeuristicRollback _ob_ex)
        {
            org.omg.CORBA.Any _ob_exa = _orb().create_any();
            org.omg.CosTransactions.HeuristicRollbackHelper.insert(_ob_exa, _ob_ex);
            _ob_req.except(_ob_exa);
        }
        catch(org.omg.CosTransactions.HeuristicMixed _ob_ex)
        {
            org.omg.CORBA.Any _ob_exa = _orb().create_any();
            org.omg.CosTransactions.HeuristicMixedHelper.insert(_ob_exa, _ob_ex);
            _ob_req.except(_ob_exa);
        }
        catch(org.omg.CosTransactions.HeuristicHazard _ob_ex)
        {
            org.omg.CORBA.Any _ob_exa = _orb().create_any();
            org.omg.CosTransactions.HeuristicHazardHelper.insert(_ob_exa, _ob_ex);
            _ob_req.except(_ob_exa);
        }
    }

    //
    // IDL:omg.org/CosTransactions/Resource/commit_one_phase:1.0
    //
    final private void
    _OB_op_commit_one_phase(org.omg.CORBA.ServerRequest _ob_req)
    {
        org.omg.CORBA.NVList _ob_list = _orb().create_list(0);
        _ob_req.params(_ob_list);

        try
        {
            commit_one_phase();
        }
        catch(org.omg.CosTransactions.HeuristicHazard _ob_ex)
        {
            org.omg.CORBA.Any _ob_exa = _orb().create_any();
            org.omg.CosTransactions.HeuristicHazardHelper.insert(_ob_exa, _ob_ex);
            _ob_req.except(_ob_exa);
        }
    }

    //
    // IDL:omg.org/CosTransactions/Resource/forget:1.0
    //
    final private void
    _OB_op_forget(org.omg.CORBA.ServerRequest _ob_req)
    {
        org.omg.CORBA.NVList _ob_list = _orb().create_list(0);
        _ob_req.params(_ob_list);

        forget();
    }
    static final String[] _ob_ids_ =
    {
        "IDL:/TestModule/tranobject:1.0",
        "IDL:omg.org/CosTransactions/Resource:1.0"
    };

    public String[]
    _ids()
    {
        return _ob_ids_;
    }

    final public void
    invoke(org.omg.CORBA.ServerRequest _ob_req)
    {
        String _ob_op = _ob_req.op_name();
        final String[] _ob_names =
        {
            "commit",
            "commit_one_phase",
            "foobar",
            "forget",
            "prepare",
            "rollback"
        };

        int _ob_left = 0;
        int _ob_right = _ob_names.length;
        int _ob_m;
        int _ob_index = -1;

        while(_ob_left < _ob_right)
        {
            _ob_m = (_ob_left + _ob_right) / 2;
            int _ob_res = _ob_names[_ob_m].compareTo(_ob_op);
            if(_ob_res == 0)
            {
                _ob_index = _ob_m;
                break;
            }
            if(_ob_res > 0)
                _ob_right = _ob_m;
            else
                _ob_left = _ob_m + 1;
        }

        switch(_ob_index)
        {
        case 0: // commit
            _OB_op_commit(_ob_req);
            return;

        case 1: // commit_one_phase
            _OB_op_commit_one_phase(_ob_req);
            return;

        case 2: // foobar
            _OB_op_foobar(_ob_req);
            return;

        case 3: // forget
            _OB_op_forget(_ob_req);
            return;

        case 4: // prepare
            _OB_op_prepare(_ob_req);
            return;

        case 5: // rollback
            _OB_op_rollback(_ob_req);
            return;
        }

        throw new org.omg.CORBA.BAD_OPERATION();
    }
}
