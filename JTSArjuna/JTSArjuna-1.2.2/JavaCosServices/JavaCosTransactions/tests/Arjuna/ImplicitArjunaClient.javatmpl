/*
 * Copyright (C) 1997, 1998, 1999,
 *
 * Department of Computing Science,
 * The University,
 * Newcastle upon Tyne,
 * UK.
 *
 * $Id: ImplicitArjunaClient.javatmpl,v 1.2 1999/01/26 16:04:39 nmcl Exp $
 */

#include <Common/OrbPortability.h>

import JavaCosTransactionsTests.*;
import TestModule.*;
import com.arjuna.OrbCommon.*;
import com.arjuna.JavaCosTransactions.*;
import org.omg.CosTransactions.*;
import NAMESPACE_(CORBA).IntHolder;

public class ImplicitArjunaClient
{

public static void main (String[] args)
    {
	ORBInterface.initORB(args, null);
	ORBInterface.initBOA();

	String refFile = "/tmp/stack.ref";
	OTS_Current current = OTS.current();

	for (int i = 0; i < args.length; i++)
	{
	    if (args[i].compareTo("-reffile") == 0)
		refFile = args[i+1];
	    if (args[i].compareTo("-help") == 0)
	    {
		System.out.println("Usage: ImplicitArjunaClient [-reffile <file>] [-help]");
		System.exit(0);
	    }
	}
	
	stack stackVar = null;   // pointer the grid object that will be used.

	try
	{
	    current.begin();

	    try
	    {
		stackVar = HELPER_CLASS_(stack).narrow(ORBObject.fileToObject(refFile));
	    }
	    catch (Exception e)
	    {
		System.err.println("Bind to object failed: "+e);
		System.exit(1);
	    }

	    System.out.println("pushing 1 onto stack");
	
	    stackVar.push(1);

	    System.out.println("pushing 2 onto stack");

	    stackVar.push(2);
	}
	catch (Exception e)
	{
	    System.err.println("call to push failed");
	    System.exit(1);
	}

	try
	{
	    current.commit(false);

	    current.begin();

	    IntHolder val = new IntHolder(-1);

	    if (stackVar.pop(val) == 0)
	    {
		System.out.println("popped top of stack "+val.value);

		current.begin();
	
		stackVar.push(3);

		System.out.println("pushed 3 onto stack. Aborting nested action.");
	
		current.rollback();

		stackVar.pop(val);

		System.out.println("popped top of stack is "+val.value);

		current.commit(false);

		if (val.value == 1)
		    System.out.println("\nThis is correct.");
		else
		    System.out.println("\nThis is incorrect.");
	    }
	    else
	    {
		System.err.println("Error getting stack value.");
	
		current.rollback();
	    }
	}
	catch (Exception e)
	{
	    System.err.println(e);
	    System.exit(1);
	}

	ORBInterface.shutdownBOA();
	ORBInterface.shutdownORB();
    }

};
