//
// Copyright (C) 2000,
//
// Arjuna Solutions, Ltd., 
// Newcastle upon Tyne,
// Tyne and Wear,
// UK
//

#include <Common/OrbPortability.h>

import org.omg.CORBA.*;
import com.arjuna.OrbCommon.*;
import Recovery.*;

public class Server03
{
    public static void main(String args[])
    {
        try
        {
            ORBInterface.initORB(args, null);
            OAInterface.initOA();

            BeforeCrashServiceImpl01 beforeCrashServiceImpl1 = new BeforeCrashServiceImpl01(Integer.parseInt(args[args.length - 3]), 0);
            BeforeCrashServiceImpl01 beforeCrashServiceImpl2 = new BeforeCrashServiceImpl01(Integer.parseInt(args[args.length - 3]), 1);
            
            TIE_INSTANCE_(BeforeCrashService) servant1  = new TIE_INSTANCE_(BeforeCrashService)(beforeCrashServiceImpl1);
            TIE_INSTANCE_(BeforeCrashService) servant2  = new TIE_INSTANCE_(BeforeCrashService)(beforeCrashServiceImpl2);
            
            READY_IMPL_(servant1);
            BeforeCrashService beforeCrashService1 = CORBA_REF_(servant1, BeforeCrashService);

            READY_IMPL_(servant2);
            BeforeCrashService beforeCrashService2 = CORBA_REF_(servant2, BeforeCrashService);

            ServerIORStore.storeIOR(args[args.length - 2], ORBInterface.orb().object_to_string(beforeCrashService1));
            ServerIORStore.storeIOR(args[args.length - 1], ORBInterface.orb().object_to_string(beforeCrashService2));

            System.out.println("Ready");

            ORBInterface.run();
        }
        catch (Exception exception)
        {
            System.err.println("Server03.main: " + exception);
            exception.printStackTrace(System.err);
        }
    }
}

