/*
 * Copyright (C) 1998, 1999, 2000,
 *
 * Arjuna Solutions Limited,
 * Newcastle upon Tyne,
 * Tyne and Wear,
 * UK.  
 *
 * $Id: DemoArjunaResource.javatmpl,v 1.1.28.1 2000/11/08 14:26:02 nmcl Exp $
 */

#include <Common/OrbPortability.h>

package CosTransactionsTests;

import com.arjuna.OrbCommon.*;
import com.arjuna.CosTransactions.OTS;
import com.arjuna.CosTransactions.OTS_Current;
import org.omg.CosTransactions.*;
import com.arjuna.ArjunaOTS.*;

import org.omg.CosTransactions.Unavailable;
import org.omg.CosTransactions.NotPrepared;
import org.omg.CosTransactions.HeuristicRollback;
import org.omg.CosTransactions.HeuristicCommit;
import org.omg.CosTransactions.HeuristicMixed;
import org.omg.CosTransactions.HeuristicHazard;
import org.omg.CORBA.SystemException;

public class DemoArjunaResource extends SCOPED_SKEL_(com.arjuna.ArjunaOTS,ArjunaSubtranAwareResource)
{

public DemoArjunaResource ()
    {
	READY_IMPL_(this);

	ref = CORBA_REF_(this,ArjunaSubtranAwareResource);
    }

public ArjunaSubtranAwareResource getReference ()
    {
	return ref;
    }
 
public void registerResource (boolean registerSubtran) throws Unavailable, Inactive, NotSubtransaction, SystemException
    {
	OTS_Current current = OTS.current();
	Control myControl = current.get_control();
	Coordinator coord = myControl.get_coordinator();
    
	if (registerSubtran)
	    coord.register_subtran_aware(ref);
	else
	    coord.register_resource(ref);

	System.out.println("Registered DemoArjunaResource");
    }

#ifndef CORBA_2_0
public org.omg.CosTransactions.Vote prepare_subtransaction () throws SystemException
#else
public int prepare_subtransaction () throws SystemException
#endif
    {
	System.out.println("DEMOARJUNARESOURCE : PREPARE_SUBTRANSACTION");

	return Vote.VoteCommit;
    }

public void commit_subtransaction (Coordinator parent) throws SystemException
    {
	System.out.println("DEMOARJUNARESOURCE : COMMIT_SUBTRANSACTION");
    }

public void rollback_subtransaction () throws SystemException
    {
	System.out.println("DEMOARJUNARESOURCE : ROLLBACK_SUBTRANSACTION");
    }

#ifndef CORBA_2_0
public org.omg.CosTransactions.Vote prepare () throws SystemException
#else
public int prepare () throws SystemException
#endif
    {
	System.out.println("DEMOARJUNARESOURCE : PREPARE");
    
	return Vote.VoteCommit;
    }

public void rollback () throws SystemException, HeuristicCommit, HeuristicMixed, HeuristicHazard
    {
	System.out.println("DEMOARJUNARESOURCE : ROLLBACK");
    }

public void commit () throws SystemException, NotPrepared, HeuristicRollback, HeuristicMixed, HeuristicHazard
    {
	System.out.println("DEMOARJUNARESOURCE : COMMIT");
    }

public void forget () throws SystemException
    {
	System.out.println("DEMOARJUNARESOURCE : FORGET");
    }

public void commit_one_phase () throws SystemException, HeuristicHazard
    {
	System.out.println("DEMOARJUNARESOURCE : COMMIT_ONE_PHASE");
    }

private ArjunaSubtranAwareResource ref;
 
};
