//
// Java code automatically generated by the Orbix 2000 IDL Compiler
// Do not edit this code!
//
// This Helper file provides several static methods needed to
// manipulate the IDL type

package com.arjuna.ArjunaOTS;

public class GlobalTransactionInfoHelper
{
    public static void insert(
        org.omg.CORBA.Any any,
        com.arjuna.ArjunaOTS.GlobalTransactionInfo value
    )
    {
        any.type(type());
        org.omg.CORBA.portable.OutputStream _stream = any.create_output_stream();
        write(_stream, value);
    }

    public static com.arjuna.ArjunaOTS.GlobalTransactionInfo extract(
        org.omg.CORBA.Any any
    )
    {
        if (!any.type().equal(type()))
        {
            throw new org.omg.CORBA.BAD_TYPECODE("Error inserting/extracting value from typecode.");
        }
        else
        {
            return read(any.create_input_stream());
        }
    }

    private static org.omg.CORBA.TypeCode _type;
    public static org.omg.CORBA.TypeCode type()
    {
        if (_type == null)
        {
            org.omg.CORBA.StructMember[] _s = new org.omg.CORBA.StructMember[7];
            org.omg.CORBA.TypeCode _tc_totalNumberOfTransactions_0 = _orb().get_primitive_tc(org.omg.CORBA.TCKind.tk_long);
            _s[0] = new org.omg.CORBA.StructMember("totalNumberOfTransactions", _tc_totalNumberOfTransactions_0, null);
            org.omg.CORBA.TypeCode _tc_numberOfCommittedTransactions_0 = _orb().get_primitive_tc(org.omg.CORBA.TCKind.tk_long);
            _s[1] = new org.omg.CORBA.StructMember("numberOfCommittedTransactions", _tc_numberOfCommittedTransactions_0, null);
            org.omg.CORBA.TypeCode _tc_numberOfAbortedTransactions_0 = _orb().get_primitive_tc(org.omg.CORBA.TCKind.tk_long);
            _s[2] = new org.omg.CORBA.StructMember("numberOfAbortedTransactions", _tc_numberOfAbortedTransactions_0, null);
            org.omg.CORBA.TypeCode _tc_averageLifetime_0 = _orb().get_primitive_tc(org.omg.CORBA.TCKind.tk_float);
            _s[3] = new org.omg.CORBA.StructMember("averageLifetime", _tc_averageLifetime_0, null);
            org.omg.CORBA.TypeCode _tc_numberOfHeuristics_0 = _orb().get_primitive_tc(org.omg.CORBA.TCKind.tk_long);
            _s[4] = new org.omg.CORBA.StructMember("numberOfHeuristics", _tc_numberOfHeuristics_0, null);
            org.omg.CORBA.TypeCode _tc_reaperTimeout_0 = _orb().get_primitive_tc(org.omg.CORBA.TCKind.tk_long);
            _s[5] = new org.omg.CORBA.StructMember("reaperTimeout", _tc_reaperTimeout_0, null);
            org.omg.CORBA.TypeCode _tc_defaultTimeout_0 = _orb().get_primitive_tc(org.omg.CORBA.TCKind.tk_long);
            _s[6] = new org.omg.CORBA.StructMember("defaultTimeout", _tc_defaultTimeout_0, null);
            _type = _orb().create_struct_tc(id(),"GlobalTransactionInfo",_s);
        }
        return _type;
    }

    public static org.omg.CORBA.ORB _orb()
    {
        return org.omg.CORBA.ORB.init();
    }

    public static String id()
    {
        return "IDL:arjuna.com/ArjunaOTS/GlobalTransactionInfo:1.0";
    }

    public static com.arjuna.ArjunaOTS.GlobalTransactionInfo read(
        org.omg.CORBA.portable.InputStream _stream
    )
    {
        com.arjuna.ArjunaOTS.GlobalTransactionInfo value = new com.arjuna.ArjunaOTS.GlobalTransactionInfo();
        value.totalNumberOfTransactions = _stream.read_long();
        value.numberOfCommittedTransactions = _stream.read_long();
        value.numberOfAbortedTransactions = _stream.read_long();
        value.averageLifetime = _stream.read_float();
        value.numberOfHeuristics = _stream.read_long();
        value.reaperTimeout = _stream.read_long();
        value.defaultTimeout = _stream.read_long();

        return value;
    }

    public static void write(
        org.omg.CORBA.portable.OutputStream _stream,
        com.arjuna.ArjunaOTS.GlobalTransactionInfo value
    )
    {
        _stream.write_long(value.totalNumberOfTransactions);
        _stream.write_long(value.numberOfCommittedTransactions);
        _stream.write_long(value.numberOfAbortedTransactions);
        _stream.write_float(value.averageLifetime);
        _stream.write_long(value.numberOfHeuristics);
        _stream.write_long(value.reaperTimeout);
        _stream.write_long(value.defaultTimeout);
    }

}
