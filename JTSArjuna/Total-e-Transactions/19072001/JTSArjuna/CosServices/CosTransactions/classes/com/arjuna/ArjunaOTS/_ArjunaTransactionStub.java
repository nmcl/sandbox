//
// Java code automatically generated by the Orbix 2000 IDL Compiler
// Do not edit this code!
//

package com.arjuna.ArjunaOTS;

public class _ArjunaTransactionStub
    extends org.omg.CORBA.portable.ObjectImpl
    implements ArjunaTransaction, com.arjuna.ArjunaOTS.UidCoordinator, org.omg.CosTransactions.Terminator
{
    final public static java.lang.Class _opsClass = ArjunaTransactionOperations.class;


    public _ArjunaTransactionStub () {}

    public org.omg.CosTransactions.Status get_status()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosTransactions.Status _result;
                try {
                    _output = _request("get_status", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosTransactions.StatusHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_status", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    return _self.get_status();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosTransactions.Status get_parent_status()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosTransactions.Status _result;
                try {
                    _output = _request("get_parent_status", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosTransactions.StatusHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_parent_status", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    return _self.get_parent_status();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosTransactions.Status get_top_level_status()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosTransactions.Status _result;
                try {
                    _output = _request("get_top_level_status", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosTransactions.StatusHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_top_level_status", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    return _self.get_top_level_status();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public boolean is_same_transaction(
        org.omg.CosTransactions.Coordinator tc
    )
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                boolean _result;
                try {
                    _output = _request("is_same_transaction", true);
                    org.omg.CosTransactions.CoordinatorHelper.write(_output, tc);
                    _input = _invoke(_output);
                    _result = _input.read_boolean();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("is_same_transaction", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    return _self.is_same_transaction(tc);
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public boolean is_related_transaction(
        org.omg.CosTransactions.Coordinator tc
    )
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                boolean _result;
                try {
                    _output = _request("is_related_transaction", true);
                    org.omg.CosTransactions.CoordinatorHelper.write(_output, tc);
                    _input = _invoke(_output);
                    _result = _input.read_boolean();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("is_related_transaction", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    return _self.is_related_transaction(tc);
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public boolean is_ancestor_transaction(
        org.omg.CosTransactions.Coordinator tc
    )
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                boolean _result;
                try {
                    _output = _request("is_ancestor_transaction", true);
                    org.omg.CosTransactions.CoordinatorHelper.write(_output, tc);
                    _input = _invoke(_output);
                    _result = _input.read_boolean();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("is_ancestor_transaction", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    return _self.is_ancestor_transaction(tc);
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public boolean is_descendant_transaction(
        org.omg.CosTransactions.Coordinator tc
    )
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                boolean _result;
                try {
                    _output = _request("is_descendant_transaction", true);
                    org.omg.CosTransactions.CoordinatorHelper.write(_output, tc);
                    _input = _invoke(_output);
                    _result = _input.read_boolean();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("is_descendant_transaction", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    return _self.is_descendant_transaction(tc);
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public boolean is_top_level_transaction()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                boolean _result;
                try {
                    _output = _request("is_top_level_transaction", true);
                    _input = _invoke(_output);
                    _result = _input.read_boolean();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("is_top_level_transaction", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    return _self.is_top_level_transaction();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public int hash_transaction()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                int _result;
                try {
                    _output = _request("hash_transaction", true);
                    _input = _invoke(_output);
                    _result = _input.read_ulong();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("hash_transaction", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    return _self.hash_transaction();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public int hash_top_level_tran()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                int _result;
                try {
                    _output = _request("hash_top_level_tran", true);
                    _input = _invoke(_output);
                    _result = _input.read_ulong();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("hash_top_level_tran", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    return _self.hash_top_level_tran();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosTransactions.RecoveryCoordinator register_resource(
        org.omg.CosTransactions.Resource r
    ) throws org.omg.CosTransactions.Inactive
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosTransactions.RecoveryCoordinator _result;
                try {
                    _output = _request("register_resource", true);
                    org.omg.CosTransactions.ResourceHelper.write(_output, r);
                    _input = _invoke(_output);
                    _result = org.omg.CosTransactions.RecoveryCoordinatorHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosTransactions.InactiveHelper.id())) {
                            throw org.omg.CosTransactions.InactiveHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("register_resource", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    return _self.register_resource(r);
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void register_synchronization(
        org.omg.CosTransactions.Synchronization sync
    ) throws org.omg.CosTransactions.Inactive, org.omg.CosTransactions.SynchronizationUnavailable
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("register_synchronization", true);
                    org.omg.CosTransactions.SynchronizationHelper.write(_output, sync);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosTransactions.InactiveHelper.id())) {
                            throw org.omg.CosTransactions.InactiveHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosTransactions.SynchronizationUnavailableHelper.id())) {
                            throw org.omg.CosTransactions.SynchronizationUnavailableHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("register_synchronization", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    _self.register_synchronization(sync);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void register_subtran_aware(
        org.omg.CosTransactions.SubtransactionAwareResource r
    ) throws org.omg.CosTransactions.Inactive, org.omg.CosTransactions.NotSubtransaction
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("register_subtran_aware", true);
                    org.omg.CosTransactions.SubtransactionAwareResourceHelper.write(_output, r);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosTransactions.InactiveHelper.id())) {
                            throw org.omg.CosTransactions.InactiveHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosTransactions.NotSubtransactionHelper.id())) {
                            throw org.omg.CosTransactions.NotSubtransactionHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("register_subtran_aware", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    _self.register_subtran_aware(r);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void rollback_only() throws org.omg.CosTransactions.Inactive
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("rollback_only", true);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosTransactions.InactiveHelper.id())) {
                            throw org.omg.CosTransactions.InactiveHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("rollback_only", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    _self.rollback_only();
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public java.lang.String get_transaction_name()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                java.lang.String _result;
                try {
                    _output = _request("get_transaction_name", true);
                    _input = _invoke(_output);
                    _result = _input.read_string();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_transaction_name", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    return _self.get_transaction_name();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosTransactions.Control create_subtransaction() throws org.omg.CosTransactions.SubtransactionsUnavailable, org.omg.CosTransactions.Inactive
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosTransactions.Control _result;
                try {
                    _output = _request("create_subtransaction", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosTransactions.ControlHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosTransactions.SubtransactionsUnavailableHelper.id())) {
                            throw org.omg.CosTransactions.SubtransactionsUnavailableHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosTransactions.InactiveHelper.id())) {
                            throw org.omg.CosTransactions.InactiveHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("create_subtransaction", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    return _self.create_subtransaction();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosTransactions.PropagationContext get_txcontext() throws org.omg.CosTransactions.Unavailable
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosTransactions.PropagationContext _result;
                try {
                    _output = _request("get_txcontext", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosTransactions.PropagationContextHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosTransactions.UnavailableHelper.id())) {
                            throw org.omg.CosTransactions.UnavailableHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_txcontext", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    return _self.get_txcontext();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public java.lang.String uid()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("_get_uid", true);
                    java.lang.String _result;
                    _input = _invoke(_output);
                    _result                     = _input.read_string();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception) {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected UserException : " + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("uid", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    return _self.uid();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }    }



    public java.lang.String topLevelUid()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("_get_topLevelUid", true);
                    java.lang.String _result;
                    _input = _invoke(_output);
                    _result                     = _input.read_string();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception) {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected UserException : " + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("topLevelUid", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    return _self.topLevelUid();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }    }



    public void commit(
        boolean report_heuristics
    ) throws org.omg.CosTransactions.HeuristicMixed, org.omg.CosTransactions.HeuristicHazard
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("commit", true);
                    _output.write_boolean(report_heuristics);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosTransactions.HeuristicMixedHelper.id())) {
                            throw org.omg.CosTransactions.HeuristicMixedHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosTransactions.HeuristicHazardHelper.id())) {
                            throw org.omg.CosTransactions.HeuristicHazardHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("commit", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    _self.commit(report_heuristics);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void rollback()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("rollback", true);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("rollback", _opsClass);
                if (_so == null) {
                    continue;
                }
                ArjunaTransactionOperations _self = (ArjunaTransactionOperations)_so.servant;
                try {
                    _self.rollback();
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public static final String _interfaces[] =
    {"IDL:omg.org/CosTransactions/Coordinator:1.0", "IDL:arjuna.com/ArjunaOTS/UidCoordinator:1.0", "IDL:omg.org/CosTransactions/Terminator:1.0", "IDL:arjuna.com/ArjunaOTS/ArjunaTransaction:1.0"};

    public String[] _ids()
    {
        return _interfaces;
    }

}
