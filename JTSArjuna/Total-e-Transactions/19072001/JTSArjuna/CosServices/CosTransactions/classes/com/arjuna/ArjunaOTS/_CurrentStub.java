//
// Java code automatically generated by the Orbix 2000 IDL Compiler
// Do not edit this code!
//

package com.arjuna.ArjunaOTS;

public class _CurrentStub
    extends org.omg.CORBA.portable.ObjectImpl
    implements Current, org.omg.CosTransactions.Current
{
    final public static java.lang.Class _opsClass = CurrentOperations.class;


    public _CurrentStub () {}

    public void begin() throws org.omg.CosTransactions.SubtransactionsUnavailable
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("begin", true);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosTransactions.SubtransactionsUnavailableHelper.id())) {
                            throw org.omg.CosTransactions.SubtransactionsUnavailableHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("begin", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    _self.begin();
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void commit(
        boolean report_heuristics
    ) throws org.omg.CosTransactions.NoTransaction, org.omg.CosTransactions.HeuristicMixed, org.omg.CosTransactions.HeuristicHazard
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("commit", true);
                    _output.write_boolean(report_heuristics);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosTransactions.NoTransactionHelper.id())) {
                            throw org.omg.CosTransactions.NoTransactionHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosTransactions.HeuristicMixedHelper.id())) {
                            throw org.omg.CosTransactions.HeuristicMixedHelper.read(_exception.getInputStream());
                        }
                        if (_exception_id.equals(org.omg.CosTransactions.HeuristicHazardHelper.id())) {
                            throw org.omg.CosTransactions.HeuristicHazardHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("commit", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    _self.commit(report_heuristics);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void rollback() throws org.omg.CosTransactions.NoTransaction
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("rollback", true);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosTransactions.NoTransactionHelper.id())) {
                            throw org.omg.CosTransactions.NoTransactionHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("rollback", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    _self.rollback();
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void rollback_only() throws org.omg.CosTransactions.NoTransaction
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("rollback_only", true);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosTransactions.NoTransactionHelper.id())) {
                            throw org.omg.CosTransactions.NoTransactionHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("rollback_only", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    _self.rollback_only();
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosTransactions.Status get_status()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosTransactions.Status _result;
                try {
                    _output = _request("get_status", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosTransactions.StatusHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_status", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.get_status();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public java.lang.String get_transaction_name()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                java.lang.String _result;
                try {
                    _output = _request("get_transaction_name", true);
                    _input = _invoke(_output);
                    _result = _input.read_string();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_transaction_name", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.get_transaction_name();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void set_timeout(
        int seconds
    )
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("set_timeout", true);
                    _output.write_ulong(seconds);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("set_timeout", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    _self.set_timeout(seconds);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosTransactions.Control get_control()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosTransactions.Control _result;
                try {
                    _output = _request("get_control", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosTransactions.ControlHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_control", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.get_control();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public org.omg.CosTransactions.Control suspend()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                org.omg.CosTransactions.Control _result;
                try {
                    _output = _request("suspend", true);
                    _input = _invoke(_output);
                    _result = org.omg.CosTransactions.ControlHelper.read(_input);
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("suspend", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.suspend();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public void resume(
        org.omg.CosTransactions.Control which
    ) throws org.omg.CosTransactions.InvalidControl
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                try {
                    _output = _request("resume", true);
                    org.omg.CosTransactions.ControlHelper.write(_output, which);
                    _input = _invoke(_output);
                    return;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                        if (_exception_id.equals(org.omg.CosTransactions.InvalidControlHelper.id())) {
                            throw org.omg.CosTransactions.InvalidControlHelper.read(_exception.getInputStream());
                        }
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("resume", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    _self.resume(which);
                    return;
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public int get_timeout()
    {
        while (true) {
            if(!_is_local()) {
                org.omg.CORBA.portable.OutputStream _output = null;
                org.omg.CORBA.portable.InputStream _input = null;
                int _result;
                try {
                    _output = _request("get_timeout", true);
                    _input = _invoke(_output);
                    _result = _input.read_long();
                    return _result;
                }
                catch (org.omg.CORBA.portable.RemarshalException _exception) {
                    continue;
                }
                catch (org.omg.CORBA.portable.ApplicationException _exception)
                {
                    final java.lang.String _exception_id = _exception.getId();
                    throw new org.omg.CORBA.UNKNOWN("Unexpected User Exception;" + _exception_id);
                }
                finally {
                    _releaseReply(_input);
                }
            }
            else {
                org.omg.CORBA.portable.ServantObject _so = _servant_preinvoke("get_timeout", _opsClass);
                if (_so == null) {
                    continue;
                }
                CurrentOperations _self = (CurrentOperations)_so.servant;
                try {
                    return _self.get_timeout();
                }
                finally {
                    _servant_postinvoke(_so);
                }
            }
        }
    }


    public static final String _interfaces[] =
    {"IDL:omg.org/CosTransactions/Current:1.0", "IDL:arjuna.com/ArjunaOTS/Current:1.0"};

    public String[] _ids()
    {
        return _interfaces;
    }

}
