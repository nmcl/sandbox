//
// Java code automatically generated by the Orbix 2000 IDL Compiler
// Do not edit this code!
//
// This Helper file provides several static methods needed to
// manipulate the IDL type

package com.arjuna.ArjunaOTS;

public class txIdsHelper
{
    public static void insert(
        org.omg.CORBA.Any any,
        org.omg.CosTransactions.otid_t[] value
    )
    {
        any.type(type());
        org.omg.CORBA.portable.OutputStream _stream = any.create_output_stream();
        write(_stream, value);
    }

    public static org.omg.CosTransactions.otid_t[] extract(
        org.omg.CORBA.Any any
    )
    {
        if (!any.type().equivalent(type()))
        {
            throw new org.omg.CORBA.BAD_TYPECODE("Error inserting/extracting value from typecode.");
        }
        else
        {
            return read(any.create_input_stream());
        }
    }

    private static org.omg.CORBA.TypeCode _type;
    public static org.omg.CORBA.TypeCode type()
    {
        if (_type == null)
        {
            org.omg.CORBA.TypeCode _tc_td_seq_1 = org.omg.CosTransactions.otid_tHelper.type();
            org.omg.CORBA.TypeCode _tc_td_0 = _orb().create_sequence_tc(0, _tc_td_seq_1);
            _type = _orb().create_alias_tc("IDL:arjuna.com/ArjunaOTS/txIds:1.0", "txIds", _tc_td_0);
        }
        return _type;
    }

    public static org.omg.CORBA.ORB _orb()
    {
        return org.omg.CORBA.ORB.init();
    }

    public static String id()
    {
        return "IDL:arjuna.com/ArjunaOTS/txIds:1.0";
    }

    public static org.omg.CosTransactions.otid_t[] read(
        org.omg.CORBA.portable.InputStream _stream
    )
    {
        int _l_seq0 = _stream.read_ulong();
        org.omg.CosTransactions.otid_t[] value = new org.omg.CosTransactions.otid_t[_l_seq0];
        for (int _i_seq0 = 0; _i_seq0 < _l_seq0; _i_seq0++)
        {
            value[_i_seq0] = org.omg.CosTransactions.otid_tHelper.read(_stream);
        }
        return value;
    }

    public static void write(
        org.omg.CORBA.portable.OutputStream _stream,
        org.omg.CosTransactions.otid_t[] value
    )
    {
        _stream.write_ulong(value.length);
        for (int _i_seq0 = 0; _i_seq0 < value.length; _i_seq0++)
        {
            org.omg.CosTransactions.otid_tHelper.write(_stream, value[_i_seq0]);
        }
    }

}
