//
// Copyright (C) 2000,
//
// Arjuna Solutions, Ltd.,
// Newcastle upon Tyne,
// Tyne and Wear,
// UK.
//
// $Id: ResourceImpl02.javatmpl,v 1.1.2.2 2002/07/04 10:41:29 delsworthy Exp $
//


#include <Common/OrbPortability.h>

import org.omg.CORBA.*;
import org.omg.CosTransactions.*;
import Recovery.*;

public class ResourceImpl02 implements TIE_CLASS_(Resource)
{
    public ResourceImpl02(int objectNumber, int resourceNumber)
    {
        _objectNumber     = objectNumber;
        _resourceNumber   = resourceNumber;
    }

    public Vote prepare() throws HeuristicMixed, HeuristicHazard
    {
        if (_resourceTrace == ResourceTrace.ResourceTraceNone)
            _resourceTrace = ResourceTrace.ResourceTracePrepare;
        else
            _resourceTrace = ResourceTrace.ResourceTraceUnknown;

        System.err.println("ReturnVoteCommit");

        return Vote.VoteCommit;
    }

    public void rollback() throws HeuristicCommit, HeuristicMixed, HeuristicHazard
    {
        if (_resourceTrace == ResourceTrace.ResourceTraceNone)
            _resourceTrace = ResourceTrace.ResourceTraceRollback;
        else if (_resourceTrace == ResourceTrace.ResourceTracePrepare)
            _resourceTrace = ResourceTrace.ResourceTracePrepareRollback;
        else
            _resourceTrace = ResourceTrace.ResourceTraceUnknown;

        System.err.println("Return");
    }

    public void commit()
        throws NotPrepared, HeuristicRollback, HeuristicMixed, HeuristicHazard
    {
        if (_resourceTrace == ResourceTrace.ResourceTraceNone)
            _resourceTrace = ResourceTrace.ResourceTraceCommit;
        else if (_resourceTrace == ResourceTrace.ResourceTracePrepare)
            _resourceTrace = ResourceTrace.ResourceTracePrepareCommit;
        else
            _resourceTrace = ResourceTrace.ResourceTraceUnknown;

        System.err.println("Return");
    }

    public void commit_one_phase()
        throws HeuristicHazard
    {
        if (_resourceTrace == ResourceTrace.ResourceTraceNone)
            _resourceTrace = ResourceTrace.ResourceTraceCommitOnePhase;
        else
            _resourceTrace = ResourceTrace.ResourceTraceUnknown;

        System.err.println("Return");
    }

    public void forget()
    {
        if (_resourceTrace == ResourceTrace.ResourceTracePrepare)
            _resourceTrace = ResourceTrace.ResourceTracePrepareForget;
        else if (_resourceTrace == ResourceTrace.ResourceTracePrepareRollback)
            _resourceTrace = ResourceTrace.ResourceTracePrepareRollbackForget;
        else if (_resourceTrace == ResourceTrace.ResourceTracePrepareCommit)
            _resourceTrace = ResourceTrace.ResourceTracePrepareCommitForget;
        else if (_resourceTrace == ResourceTrace.ResourceTraceCommitOnePhase)
            _resourceTrace = ResourceTrace.ResourceTraceCommitOnePhaseForget;
        else
            _resourceTrace = ResourceTrace.ResourceTraceUnknown;

        System.err.println("Return");
    }

    public boolean isCorrect()
    {
        return true;
    }

    public ResourceTrace getTrace()
    {
        return _resourceTrace;
    }

    private int              _objectNumber;
    private int              _resourceNumber;
    private ResourceBehavior _resourceBehavior;
    private ResourceTrace    _resourceTrace = ResourceTrace.ResourceTraceNone;
}
