head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	97.06.08.19.18.27;	author nmcl;	state Exp;
branches;
next	;


desc
@@


1.1
log
@added documentation comments
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
<head>
<!-- Generated by javadoc on Sun Jun 08 20:14:39 GMT+01:00 1997 -->
<title>
  Class RMISystem.net.NetworkClassLoader
</title>
</head>
<body>
<a name="_top_"></a>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-RMISystem.net.html">This Package</a>  <a href="RMISystem.net.ArjunaKeyDatabase.html#_top_">Previous</a>  <a href="Package-RMISystem.net.html">Next</a>  <a href="AllNames.html">Index</a></pre>
<hr>
<h1>
  Class RMISystem.net.NetworkClassLoader
</h1>
<pre>
java.lang.Object
   |
   +----java.lang.ClassLoader
           |
           +----RMISystem.net.NetworkClassLoader
</pre>
<hr>
<dl>
  <dt> public class <b>NetworkClassLoader</b>
  <dt> extends ClassLoader
</dl>
A network class loader. Instances of this class can be used to load classes
 within another address space. This implementation make use of the NetworkInventory
 class to perform its work.
<p>
<hr>
<a name="index"></a>
<h2>
  <img src="images/constructor-index.gif" width=275 height=38 alt="Constructor Index">
</h2>
<dl>
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#NetworkClassLoader(java.lang.String, java.lang.String)"><b>NetworkClassLoader</b></a>(String, String)
  <dd>  Create a class loader which obtains its classes from the
 specified inventory on the specified (remote) machine.
</dl>
<h2>
  <img src="images/method-index.gif" width=207 height=38 alt="Method Index">
</h2>
<dl>
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#loadClass(java.lang.String, boolean)"><b>loadClass</b></a>(String, boolean)
  <dd>  Load the specified class.
</dl>
<a name="constructors"></a>
<h2>
  <img src="images/constructors.gif" width=231 height=38 alt="Constructors">
</h2>
<a name="NetworkClassLoader"></a>
<a name="NetworkClassLoader(java.lang.String, java.lang.String)"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>NetworkClassLoader</b>
<pre>
 public NetworkClassLoader(String hostName,
                           String inventoryName)
</pre>
<dl>
  <dd> Create a class loader which obtains its classes from the
 specified inventory on the specified (remote) machine.
<p>
</dl>
<a name="methods"></a>
<h2>
  <img src="images/methods.gif" width=151 height=38 alt="Methods">
</h2>
<a name="loadClass(java.lang.String, boolean)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="loadClass"><b>loadClass</b></a>
<pre>
 public synchronized Class loadClass(String className,
                                     boolean resolve) throws ClassNotFoundException
</pre>
<dl>
  <dd> Load the specified class. If the class is a sysem class, or one which
 can be resolved locally, then no network communication is performed.
 If the resolve parameter is true then resolve all
 references to other classes found within this new class definition.
 Once obtained, a class definition is retained within a volatile cache and
 subsequent requests are fielded by this.
<p>
  <dd><dl>
    <dt> <b>Overrides:</b>
    <dd> <a href="java.lang.ClassLoader.html#loadClass(java.lang.String, boolean)">loadClass</a> in class ClassLoader
  </dl></dd>
</dl>
<hr>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-RMISystem.net.html">This Package</a>  <a href="RMISystem.net.ArjunaKeyDatabase.html#_top_">Previous</a>  <a href="Package-RMISystem.net.html">Next</a>  <a href="AllNames.html">Index</a></pre>
</body>
</html>
@
