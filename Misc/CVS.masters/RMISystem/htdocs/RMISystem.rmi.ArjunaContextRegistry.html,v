head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	97.06.08.19.18.27;	author nmcl;	state Exp;
branches;
next	;


desc
@@


1.1
log
@added documentation comments
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN">
<!--NewPage-->
<html>
<head>
<!-- Generated by javadoc on Sun Jun 08 20:14:39 GMT+01:00 1997 -->
<title>
  Class RMISystem.rmi.ArjunaContextRegistry
</title>
</head>
<body>
<a name="_top_"></a>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-RMISystem.rmi.html">This Package</a>  <a href="Package-RMISystem.rmi.html">Previous</a>  <a href="RMISystem.rmi.ArjunaRegistry.html#_top_">Next</a>  <a href="AllNames.html">Index</a></pre>
<hr>
<h1>
  Class RMISystem.rmi.ArjunaContextRegistry
</h1>
<pre>
java.lang.Object
   |
   +----<a href="RMISystem.rmi.ArjunaRegistry.html#_top_">RMISystem.rmi.ArjunaRegistry</a>
           |
           +----RMISystem.rmi.ArjunaContextRegistry
</pre>
<hr>
<dl>
  <dt> public class <b>ArjunaContextRegistry</b>
  <dt> extends <a href="RMISystem.rmi.ArjunaRegistry.html#_top_">ArjunaRegistry</a>
</dl>
This implementation of the Registry loads all requested objects into
 itself, rather than start a separate process for each, which the
 ArjunaRegistry does by default. The code for objects can be searched
 for in a provided search path, or assumed to be available in the
 standard CLASSPATH.
<p>
<hr>
<a name="index"></a>
<h2>
  <img src="images/constructor-index.gif" width=275 height=38 alt="Constructor Index">
</h2>
<dl>
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#ArjunaContextRegistry()"><b>ArjunaContextRegistry</b></a>()
  <dd>  Search for all classes via CLASSPATH.
  <dt> <img src="images/yellow-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#ArjunaContextRegistry(java.lang.String[])"><b>ArjunaContextRegistry</b></a>(String[])
  <dd>  Search for all classes via the provided search path.
</dl>
<h2>
  <img src="images/method-index.gif" width=207 height=38 alt="Method Index">
</h2>
<dl>
  <dt> <img src="images/red-ball-small.gif" width=6 height=6 alt=" o ">
	<a href="#create(java.lang.String)"><b>create</b></a>(String)
  <dd>  Rather than exec new java runtimes we simply load the class
 locally and pass back a reference to it within our current
 context.
</dl>
<a name="constructors"></a>
<h2>
  <img src="images/constructors.gif" width=231 height=38 alt="Constructors">
</h2>
<a name="ArjunaContextRegistry"></a>
<a name="ArjunaContextRegistry()"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>ArjunaContextRegistry</b>
<pre>
 public ArjunaContextRegistry()
</pre>
<dl>
  <dd> Search for all classes via CLASSPATH.
<p>
</dl>
<a name="ArjunaContextRegistry(java.lang.String[])"><img src="images/yellow-ball.gif" width=12 height=12 alt=" o "></a>
<b>ArjunaContextRegistry</b>
<pre>
 public ArjunaContextRegistry(String searchPath[])
</pre>
<dl>
  <dd> Search for all classes via the provided search path.
<p>
</dl>
<a name="methods"></a>
<h2>
  <img src="images/methods.gif" width=151 height=38 alt="Methods">
</h2>
<a name="create(java.lang.String)"><img src="images/red-ball.gif" width=12 height=12 alt=" o "></a>
<a name="create"><b>create</b></a>
<pre>
 protected Remote create(String name) throws AccessException
</pre>
<dl>
  <dd> Rather than exec new java runtimes we simply load the class
 locally and pass back a reference to it within our current
 context. As such, we override the ArjunaRegistry version
 of create.
<p>
  <dd><dl>
    <dt> <b>Overrides:</b>
    <dd> <a href="RMISystem.rmi.ArjunaRegistry.html#create(java.lang.String)">create</a> in class <a href="RMISystem.rmi.ArjunaRegistry.html#_top_">ArjunaRegistry</a>
  </dl></dd>
</dl>
<hr>
<pre>
<a href="packages.html">All Packages</a>  <a href="tree.html">Class Hierarchy</a>  <a href="Package-RMISystem.rmi.html">This Package</a>  <a href="Package-RMISystem.rmi.html">Previous</a>  <a href="RMISystem.rmi.ArjunaRegistry.html#_top_">Next</a>  <a href="AllNames.html">Index</a></pre>
</body>
</html>
@
