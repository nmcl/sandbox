head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	97.06.08.19.18.28;	author nmcl;	state Exp;
branches;
next	1.2;

1.2
date	97.06.08.14.22.54;	author nmcl;	state Exp;
branches;
next	1.1;

1.1
date	97.06.01.14.56.23;	author nmcl;	state Exp;
branches;
next	;


desc
@@


1.3
log
@added documentation comments
@
text
@/*
 * Copyright (C) 1997,
 *
 * Department of Computing Science,
 * University of Newcastle upon Tyne,
 * Newcastle upon Tyne,
 * UK.
 *
 * $Id: NetworkInventory.java,v 1.2 1997/06/08 14:22:54 nmcl Exp $
 */

package RMISystem.net;

import java.rmi.Remote;

import java.lang.SecurityException;
import java.lang.ClassNotFoundException;
import java.rmi.RemoteException;
import java.rmi.AccessException;

/**
 * Instances of this class represent repositories for classes. An inventory can load a
 * class definition (byte array) from the local disk, for example. In addition, inventories
 * can co-operate to supply class definitions to each other across the network.
 */

public interface NetworkInventory extends Remote
{

    /**
     * Return the specified class definition. How this is performed is
     * implementation specific.
     */
    
public byte[] loadClass (String className) throws RemoteException, AccessException, ClassNotFoundException, SecurityException;

    /**
     * Retrieve the specified class definition from the inventory residing on the
     * specified host.
     */

public void retrieveClass (String className, String hostName, String inventoryName) throws RemoteException, AccessException, ClassNotFoundException, SecurityException;

};
@


1.2
log
@added a security key server
@
text
@d9 1
a9 1
 * $Id: NetworkInventory.java,v 1.1 1997/06/01 14:56:23 nmcl Exp $
d21 6
d30 5
d36 5
@


1.1
log
@added remote inventories
@
text
@d9 1
a9 1
 * $Id$
d24 1
a24 12
    /*
     * The token is used to validate the caller to the inventory.
     */
    
public byte[] loadClass (String token, String className) throws RemoteException, AccessException, ClassNotFoundException, SecurityException;

    /*
     * The security token is used to validate the caller. When the inventory does a callback
     * to the caller to get the class bytes it must present a *different* token, i.e., the
     * caller's security token. How it gets this is implementation dependant, but it should
     * not be present in the method signature!
     */
d26 1
a26 1
public void retrieveClass (String token, String className, String hostName, String inventoryName) throws RemoteException, AccessException, ClassNotFoundException, SecurityException;
@
