%!PS-Adobe-3.0 EPSF-2.0
%%Creator: Windows PSCRIPT
%%Title: Microsoft Word - STUBMAN.DOC
%%BoundingBox: 13 10 577 832
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%Pages: 0
%%BeginResource: procset Win35Dict 3 1
/Win35Dict 290 dict def Win35Dict begin/bd{bind def}bind def/in{72
mul}bd/ed{exch def}bd/ld{load def}bd/tr/translate ld/gs/gsave ld/gr
/grestore ld/M/moveto ld/L/lineto ld/rmt/rmoveto ld/rlt/rlineto ld
/rct/rcurveto ld/st/stroke ld/n/newpath ld/sm/setmatrix ld/cm/currentmatrix
ld/cp/closepath ld/ARC/arcn ld/TR{65536 div}bd/lj/setlinejoin ld/lc
/setlinecap ld/ml/setmiterlimit ld/sl/setlinewidth ld/scignore false
def/sc{scignore{pop pop pop}{0 index 2 index eq 2 index 4 index eq
and{pop pop 255 div setgray}{3{255 div 3 1 roll}repeat setrgbcolor}ifelse}ifelse}bd
/FC{bR bG bB sc}bd/fC{/bB ed/bG ed/bR ed}bd/HC{hR hG hB sc}bd/hC{
/hB ed/hG ed/hR ed}bd/PC{pR pG pB sc}bd/pC{/pB ed/pG ed/pR ed}bd/sM
matrix def/PenW 1 def/iPen 5 def/mxF matrix def/mxE matrix def/mxUE
matrix def/mxUF matrix def/fBE false def/iDevRes 72 0 matrix defaultmatrix
dtransform dup mul exch dup mul add sqrt def/fPP false def/SS{fPP{
/SV save def}{gs}ifelse}bd/RS{fPP{SV restore}{gr}ifelse}bd/EJ{gsave
showpage grestore}bd/#C{userdict begin/#copies ed end}bd/FEbuf 2 string
def/FEglyph(G  )def/FE{1 exch{dup 16 FEbuf cvrs FEglyph exch 1 exch
putinterval 1 index exch FEglyph cvn put}for}bd/SM{/iRes ed/cyP ed
/cxPg ed/cyM ed/cxM ed 72 100 div dup scale dup 0 ne{90 eq{cyM exch
0 eq{cxM exch tr -90 rotate -1 1 scale}{cxM cxPg add exch tr +90 rotate}ifelse}{cyP
cyM sub exch 0 ne{cxM exch tr -90 rotate}{cxM cxPg add exch tr -90
rotate 1 -1 scale}ifelse}ifelse}{pop cyP cyM sub exch 0 ne{cxM cxPg
add exch tr 180 rotate}{cxM exch tr 1 -1 scale}ifelse}ifelse 100 iRes
div dup scale 0 0 transform .25 add round .25 sub exch .25 add round
.25 sub exch itransform translate}bd/SJ{1 index 0 eq{pop pop/fBE false
def}{1 index/Break ed div/dxBreak ed/fBE true def}ifelse}bd/ANSIVec[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97
/emdash 16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar 16#A7/section
16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5
/mu 16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2
/Acircumflex 16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7
/Ccedilla 16#C8/Egrave 16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis
16#CC/Igrave 16#CD/Iacute 16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth
16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde
16#D6/Odieresis 16#D7/multiply 16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute
16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute 16#DE/Thorn 16#DF/germandbls
16#E0/agrave 16#E1/aacute 16#E2/acircumflex 16#E3/atilde 16#E4/adieresis
16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA
/ecircumflex 16#EB/edieresis 16#EC/igrave 16#ED/iacute 16#EE/icircumflex
16#EF/idieresis 16#F0/eth 16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4
/ocircumflex 16#F5/otilde 16#F6/odieresis 16#F7/divide 16#F8/oslash
16#F9/ugrave 16#FA/uacute 16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute
16#FE/thorn 16#FF/ydieresis ] def/reencdict 12 dict def/IsChar{basefontdict
/CharStrings get exch known}bd/MapCh{dup IsChar not{pop/bullet}if
newfont/Encoding get 3 1 roll put}bd/MapDegree{16#b0/degree IsChar{
/degree}{/ring}ifelse MapCh}bd/MapBB{16#a6/brokenbar IsChar{/brokenbar}{
/bar}ifelse MapCh}bd/ANSIFont{reencdict begin/newfontname ed/basefontname
ed FontDirectory newfontname known not{/basefontdict basefontname findfont
def/newfont basefontdict maxlength dict def basefontdict{exch dup/FID
ne{dup/Encoding eq{exch dup length array copy newfont 3 1 roll put}{exch
newfont 3 1 roll put}ifelse}{pop pop}ifelse}forall newfont/FontName
newfontname put 127 1 159{newfont/Encoding get exch/bullet put}for
ANSIVec aload pop ANSIVec length 2 idiv{MapCh}repeat MapDegree MapBB
newfontname newfont definefont pop}if newfontname end}bd/SB{FC/ULlen
ed/str ed str length fBE not{dup 1 gt{1 sub}if}if/cbStr ed/dxGdi ed
/y0 ed/x0 ed str stringwidth dup 0 ne{/y1 ed/x1 ed y1 y1 mul x1 x1
mul add sqrt dxGdi exch div 1 sub dup x1 mul cbStr div exch y1 mul
cbStr div}{exch abs neg dxGdi add cbStr div exch}ifelse/dyExtra ed
/dxExtra ed x0 y0 M fBE{dxBreak 0 BCh dxExtra dyExtra str awidthshow}{dxExtra
dyExtra str ashow}ifelse fUL{x0 y0 M dxUL dyUL rmt ULlen fBE{Break
add}if 0 mxUE transform gs rlt cyUL sl [] 0 setdash st gr}if fSO{x0
y0 M dxSO dySO rmt ULlen fBE{Break add}if 0 mxUE transform gs rlt cyUL
sl [] 0 setdash st gr}if n/fBE false def}bd/font{/name ed/Ascent ed
0 ne/fT3 ed 0 ne/fSO ed 0 ne/fUL ed/Sy ed/Sx ed 10.0 div/ori ed -10.0
div/esc ed/BCh ed name findfont/xAscent 0 def/yAscent Ascent def/ULesc
esc def ULesc mxUE rotate pop fT3{/esc 0 def xAscent yAscent mxUE transform
/yAscent ed/xAscent ed}if [Sx 0 0 Sy neg xAscent yAscent] esc mxE
rotate mxF concatmatrix makefont setfont [Sx 0 0 Sy neg 0 Ascent] mxUE
mxUF concatmatrix pop fUL{currentfont dup/FontInfo get/UnderlinePosition
known not{pop/Courier findfont}if/FontInfo get/UnderlinePosition get
1000 div 0 exch mxUF transform/dyUL ed/dxUL ed}if fSO{0 .3 mxUF transform
/dySO ed/dxSO ed}if fUL fSO or{currentfont dup/FontInfo get/UnderlineThickness
known not{pop/Courier findfont}if/FontInfo get/UnderlineThickness get
1000 div Sy mul/cyUL ed}if}bd/min{2 copy gt{exch}if pop}bd/max{2 copy
lt{exch}if pop}bd/CP{/ft ed{{ft 0 eq{clip}{eoclip}ifelse}stopped{currentflat
1 add setflat}{exit}ifelse}loop}bd/patfont 10 dict def patfont begin
/FontType 3 def/FontMatrix [1 0 0 -1 0 0] def/FontBBox [0 0 16 16]
def/Encoding StandardEncoding def/BuildChar{pop pop 16 0 0 0 16 16
setcachedevice 16 16 false [1 0 0 1 .25 .25]{pat}imagemask}bd end/p{
/pat 32 string def{}forall 0 1 7{dup 2 mul pat exch 3 index put dup
2 mul 1 add pat exch 3 index put dup 2 mul 16 add pat exch 3 index
put 2 mul 17 add pat exch 2 index put pop}for}bd/pfill{/PatFont patfont
definefont setfont/ch(AAAA)def X0 64 X1{Y1 -16 Y0{1 index exch M ch
show}for pop}for}bd/vert{X0 w X1{dup Y0 M Y1 L st}for}bd/horz{Y0 w
Y1{dup X0 exch M X1 exch L st}for}bd/fdiag{X0 w X1{Y0 M X1 X0 sub dup
rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup rlt st}for}bd/bdiag{X0 w
X1{Y1 M X1 X0 sub dup neg rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup
neg rlt st}for}bd/AU{1 add cvi 15 or}bd/AD{1 sub cvi -16 and}bd/SHR{pathbbox
AU/Y1 ed AU/X1 ed AD/Y0 ed AD/X0 ed}bd/hfill{/w iRes 37.5 div round
def 0.1 sl [] 0 setdash n dup 0 eq{horz}if dup 1 eq{vert}if dup 2 eq{fdiag}if
dup 3 eq{bdiag}if dup 4 eq{horz vert}if 5 eq{fdiag bdiag}if}bd/F{/ft
ed fm 256 and 0 ne{gs FC ft 0 eq{fill}{eofill}ifelse gr}if fm 1536
and 0 ne{SHR gs HC ft CP fm 1024 and 0 ne{/Tmp save def pfill Tmp restore}{fm
15 and hfill}ifelse gr}if}bd/S{PenW sl PC st}bd/m matrix def/GW{iRes
12 div PenW add cvi}bd/DoW{iRes 50 div PenW add cvi}bd/DW{iRes 8 div
PenW add cvi}bd/SP{/PenW ed/iPen ed iPen 0 eq iPen 6 eq or{[] 0 setdash}if
iPen 1 eq{[DW GW] 0 setdash}if iPen 2 eq{[DoW GW] 0 setdash}if iPen
3 eq{[DW GW DoW GW] 0 setdash}if iPen 4 eq{[DW GW DoW GW DoW GW] 0
setdash}if}bd/E{m cm pop tr scale 1 0 moveto 0 0 1 0 360 arc cp m sm}bd
/AG{/sy ed/sx ed sx div 4 1 roll sy div 4 1 roll sx div 4 1 roll sy
div 4 1 roll atan/a2 ed atan/a1 ed sx sy scale a1 a2 ARC}def/A{m cm
pop tr AG m sm}def/P{m cm pop tr 0 0 M AG cp m sm}def/RRect{n 4 copy
M 3 1 roll exch L 4 2 roll L L cp}bd/RRCC{/r ed/y1 ed/x1 ed/y0 ed/x0
ed x0 x1 add 2 div y0 M x1 y0 x1 y1 r arcto 4{pop}repeat x1 y1 x0 y1
r arcto 4{pop}repeat x0 y1 x0 y0 r arcto 4{pop}repeat x0 y0 x1 y0 r
arcto 4{pop}repeat cp}bd/RR{2 copy 0 eq exch 0 eq or{pop pop RRect}{2
copy eq{pop RRCC}{m cm pop/y2 ed/x2 ed/ys y2 x2 div 1 max def/xs x2
y2 div 1 max def/y1 exch ys div def/x1 exch xs div def/y0 exch ys div
def/x0 exch xs div def/r2 x2 y2 min def xs ys scale x0 x1 add 2 div
y0 M x1 y0 x1 y1 r2 arcto 4{pop}repeat x1 y1 x0 y1 r2 arcto 4{pop}repeat
x0 y1 x0 y0 r2 arcto 4{pop}repeat x0 y0 x1 y0 r2 arcto 4{pop}repeat
m sm cp}ifelse}ifelse}bd/PP{{rlt}repeat}bd/OB{gs 0 ne{7 3 roll/y ed
/x ed x y translate ULesc rotate x neg y neg translate x y 7 -3 roll}if
sc B fill gr}bd/B{M/dy ed/dx ed dx 0 rlt 0 dy rlt dx neg 0 rlt cp}bd
/CB{B clip n}bd/ErrHandler{errordict dup maxlength exch length gt
dup{errordict begin}if/errhelpdict 12 dict def errhelpdict begin/stackunderflow(operand stack underflow)def
/undefined(this name is not defined in a dictionary)def/VMerror(you have used up all the printer's memory)def
/typecheck(operator was expecting a different type of operand)def
/ioerror(input/output error occured)def end{end}if errordict begin
/handleerror{$error begin newerror{/newerror false def showpage 72
72 scale/x .25 def/y 9.6 def/Helvetica findfont .2 scalefont setfont
x y moveto(Offending Command = )show/command load{dup type/stringtype
ne{(max err string)cvs}if show}exec/y y .2 sub def x y moveto(Error = )show
errorname{dup type dup( max err string )cvs show( : )show/stringtype
ne{( max err string )cvs}if show}exec errordict begin errhelpdict errorname
known{x 1 add y .2 sub moveto errhelpdict errorname get show}if end
/y y .4 sub def x y moveto(Stack =)show ostack{/y y .2 sub def x 1
add y moveto dup type/stringtype ne{( max err string )cvs}if show}forall
showpage}if end}def end}bd end
%%EndResource
/SVDoc save def
%%EndProlog
%%BeginSetup
Win35Dict begin
ErrHandler
%%EndSetup
SS
0 0 18 13 783 1169 300 SM
32 0 0 100 100 0 0 0 90 /Helvetica /font12 ANSIFont font
0 0 0 fC
gs 861 118 305 376 CB
321 382 479 (Distributed) 479 SB
gr
gs 861 118 305 491 CB
321 497 601 (Programming) 601 SB
gr
gs 861 118 305 606 CB
321 612 294 (in C++) 294 SB
gr
%MSEPS Preamble 125 304 449 612 0 0 324 308	/pp_save save def	/showpage {} def	40 dict begin /pp_clip false def /pp_bbox false def	/F { pop } def /S {} def	/B { { /pp_dy1 exch def /pp_dx1 exch def		   /pp_dy2 exch def /pp_dx2 exch def }		stopped not { /pp_bbox true def } if } def	/CB { { /pp_cy exch def /pp_cx exch def		    /pp_cht exch def /pp_cwd exch def }		stopped not { /pp_clip true def } if } def	/pp_bx1 125 def /pp_by1 304 def /pp_bx2 449 def /pp_by2 612 def0 lc
0 lj
0 0 0 pC
0 1 SP
gs 860 502 1167 261 CB
521 498 1491 264 B
S
n
gr
	pp_clip	{ pp_cx pp_cy moveto pp_cwd 0 rlineto 0 pp_cht rlineto	  pp_cwd neg 0 rlineto clip newpath } if	pp_bbox {	/pp_dy2 pp_dy2 pp_dy1 add def	/pp_dx2 pp_dx2 pp_dx1 add def	/pp_sx pp_dx2 pp_dx1 sub pp_bx2 pp_bx1 sub div def	/pp_sy pp_dy2 pp_dy1 sub pp_by1 pp_by2 sub div def	/pp_tx pp_dx1 pp_sx pp_bx1 mul sub def	/pp_ty pp_dy1 pp_sy pp_by2 mul sub def	pp_tx pp_ty translate pp_sx pp_sy scale } ifend%!PS-Adobe-2.0 EPSF-1.2%%Creator: FreeHand%%Title: realfont master ov070 %%CreationDate: 19/11/90 3:33 pm%%BoundingBox: 125 304 449 612%%DocumentProcSets: FreeHand_header 2 0%%DocumentSuppliedProcSets: FreeHand_header 2 0%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentCustomColors: (PANTONE 102 CV)%%CMYKCustomColor: 0 0 1 0  (PANTONE 102 CV)%%CMYKProcessColor: 0 0 0 0.1  (10% grey)%%+ 0 0 0 0.2  (20% grey)%%+ 0 0 0 0.4  (40% grey)%%+ 0 0 0 0.6  (60% grey)%%+ 0 0 0 0.8  (80% grey)%%DocumentFonts: Symbol%%+UnclproteusLight%%DocumentNeededFonts: Symbol%%+UnclproteusLight%%EndComments%%BeginProcSet: FreeHand_header 2 0/FreeHandDict 200 dict defFreeHandDict begin/currentpacking where{pop true setpacking}if/bdf{bind def}bind def/bdef{bind def}bdf/xdf{exch def}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/graystep .01 def/bottom -0 def/delta -0 def/frac -0 def/left -0 def/numsteps -0 def/numsteps1 -0 def/radius -0 def/right -0 def/top -0 def/x -0 def/y -0 def/df currentflat def/tempstr 1 string def/clipflatness 3 def/inverted?0 currenttransfer exec .5 ge def/concatprocs{/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx}bdf/storerect{/top xdf/right xdf/bottom xdf/left xdf}bdf/rectpath{newpath left bottom moveto left top linetoright top lineto right bottom lineto closepath}bdf/sf{dup 0 eq{pop df dup 3 mul}{dup} ifelse /clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/gettint{0 get}bdf/puttint{0 exch put}bdf/vms{/vmsv save def}bdf/vmr{vmsv restore}bdf/vmrs{vmr vms}bdf/CD{/NF exch def{exch dup/FID ne{exch NF 3 1 roll put}{pop pop}ifelse}forall NF}bdf/MN{1 index length/Len exch defdup length Len add string dupLen 4 -1 roll putinterval dup 0 4 -1 roll putinterval}bdf/RC{256 string cvs(|______)anchorsearch{1 index MN cvn/NewN exch def cvnfindfont dup maxlength dict CD dup/FontName NewN put dup/Encoding MacVec put NewN exch definefont pop}{pop}ifelse}bdf/RF{dup FontDirectory exch known{pop}{RC}ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known{exch}if pop findfont}bdfuserdict begin /BDFontDict 20 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{pop}def/gm{moveto}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}defend/MacVec 256 array defMacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/register/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/fps{currentflat exch dup 0 le{pop 1}if{dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}{exit}ifelse}loop pop setflat pop pop}bdf/fp{100 currentflat fps}bdf/rfp{clipflatness currentflat fps}bdf/fcp{100 clipflatness fps}bdf/fclip{{clip}fcp}bdf/feoclip{{eoclip}fcp}bdfend %. FreeHandDict%%EndProcSet%%BeginSetupFreeHandDict begin/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{1 exch sub dup dup dup setcmykcolor}ndf/setoverprint{pop}ndf/currentoverprint false ndf/colorimage{pop pop[5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/exch cvx/pop cvx/exch cvx/pop cvx/exch cvx/pop cvx/invbuf cvx]cvx image}%. version 47.1 of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le{userdict begin bdf end}{ndf}ifelse/customcolorimage{pop image}ndf/separationimage{image}ndf/newcmykcustomcolor{6 /packedarray where{pop packedarray}{array astore readonly}ifelse}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf/overprintprocess{pop}ndf/setspotcolor{spots exch get 0 5 getinterval exch setcustomcolor}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{systemdict begin settransfer end pop pop pop}ndf/setimagecmyk{dup length 4 eq{aload pop}{aload pop spots exch get 0 4 getinterval aload pop 4{4 index mul 4 1 roll}repeat 5 -1 roll pop} ifelsesystemdict /colorimage known{version cvr 47.1 gt}{false}ifelsenot{pop 1 currentgray sub}if/ik xdf /iy xdf /im xdf /ic xdf}ndf/setcolor{dup length 4 eq{aload overprintprocess setcmykcolor}{aload 1 get spots exch get 5 get setinkoverprint setspotcolor}ifelse}ndf/bc2[0 0]def/bc4[0 0 0 0]def/c1[0 0 0 0]def/c2[0 0 0 0]def/absmax{2 copy abs exch abs gt{exch}if pop}bdf/calcstep{c1 length 4 eq{0 1 3{c1 1 index getc2 3 -1 roll getsub}forabsmax absmax absmax}{bc2 c1 1 get 1 exch putc1 gettint c2 gettintsub abs}ifelsegraystep div abs round dup 0 eq{pop 1}ifdup /numsteps xdf 1 sub dup 0 eq{pop 1}if /numsteps1 xdf}bdf/cblend{c1 length 4 eq{0 1 3{bc4 exchc1 1 index getc2 2 index get1 index subfrac mul add put}for bc4}{bc2c1 gettintc2 gettint1 index subfrac mul addputtint bc2}ifelsesetcolor}bdf/logtaper{/frac frac 9 mul 1 add log def}bdf/imbits 1 def/iminv false def/invbuf{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1 roll put}for}bdf/cyanrp{currentfile cyanbuf readhexstring pop iminv{invbuf}if}def/magentarp{cyanbuf magentabuf copy}bdf/yellowrp{cyanbuf yellowbuf copy}bdf/blackrp{cyanbuf blackbuf copy}bdf/fixtransfer{dup{ic mul ic sub 1 add}concatprocs exchdup{im mul im sub 1 add}concatprocs exchdup{iy mul iy sub 1 add}concatprocs exch{ik mul ik sub 1 add}concatprocscurrentcolortransfer5 -1 roll exch concatprocs 7 1 roll4 -1 roll exch concatprocs 6 1 roll3 -1 roll exch concatprocs 5 1 rollconcatprocs 4 1 rollsetcolortransfer}bdf/textopf false def/curtextmtx{}def/otw .25 def/msf{dup/curtextmtx xdf makefont setfont}bdf/makesetfont/msf load def/curtextheight{.707104 .707104 curtextmtx dtransformdup mul exch dup mul add sqrt}bdf/ta{1 index{tempstr 0 2 index put tempstr 2 indexgsave exec grestoretempstr stringwidth rmoveto5 index eq{6 index 6 index rmoveto}if3 index 3 index rmoveto}forall 7{pop}repeat}bdf/sts{setcolor textopf setoverprint/ts{awidthshow}def exec}bdf/stol{setlinewidth setcolor textopf setoverprint newpath/ts{{false charpath stroke}ta}def exec}bdf/s8 8 string def/pattnt 1 def/patcol[]def/pa{1 0 matrix defaultmatrix dtransform exch atan}bdf/por{1 0 dtransform 0 eq exch 0 ne and}bdf/patcolor{/pattnt xdfdup length array copy/patcol xdfsystemdict/setcmykcolor known{/pattnt 1 pattnt sub defpatcol length 4 eq{0 1 3{patcol exch 2 copyget .25 lt{0}{pattnt}ifelse put}for}{patcol dup gettint .25 lt{0}{pattnt}ifelse puttint}ifelsepatcol setcolor}{patcol setcolor currentgray 1 ne{pattnt systemdict /setgray get exec}if}ifelse}bdf/pat{s8 copy pop 9.375 pa por not{-90. add}if{1 add 4 mul cvi s8 exch get exch1 add 4 mul cvi 7 sub bitshift 1 and inverted?{1 exch sub}if}setscreensystemdict begin{}settransfer endinverted?{.9921875 exch sub}if patcolor}bdf/currentpacking where{pop false setpacking}if%%EndSetup%%BeginFont: UnclproteusLight%!PS-Adobe-2.0%%Creator: FontStudio 1.0%%Title: UNclProteus Light Font%%CreationDate: Mon, Oct 29, 1990 4:24 pm%%EndComments% Copyright (c) 1990 by AB Vista Company. All rights reserved./setpacking where{/cpack currentpacking defpop true setpacking}if/bd{bind def}bind def/bp{bind put}bd/xd{exch def}bd/dc{/bits xd/name xd/num xdnum 256 lt{Encoding num name put}ifCharStrings name bits put}bd/fsd 15 dict def fsd begin/FontType 3 def/FontMatrix [0.000067 0 0 0.000067 0 0] def/FontBBox [-62 -175 14292 10165] def/FontName /UnclproteusLight def/PaintType 0 def%	/UniqueID 0 def/FontInfo 10 dict dup begin/OutlineResolution 15000 def/Notice (COPYRIGHT ESSELTE LETRASET LTD., 1988 ) def/FullName (UNclProteus Light) def/FamilyName (Unclproteus) def/Weight (Light) def/version () def/ItalicAngle 0 def/isFixedPitch false def/UnderlinePosition 0 def/UnderlineThickness 0 defend def/Encoding 256 array def0 1 255{Encoding exch /.notdef put}for/temp 15 dict def temp begin/gw{0 s i get add 8 bitshift/i i 1 add defs i get add 32768 sub/i i 1 add def}bd/gb{s i get 128 sub/i i 1 add def}bd/gn{/len s i get def/i i 1 add defs i len getinterval/i i len add def}bd/eval{/s xd/i 0 def{/t s i get def/i i 1 add defea t get exec}loop}bd/dk{t s i matrix currentmatrix2{6 index}repeat translate2{8 index 256 div}repeat scaleend CharStrings 5 index gettemp begin/s xd/i 0 def{/t s i get def/i i 1 add defda t get exec}loopsetmatrix[/i /s /t]{xd}forall5{pop}repeat}bd/ea 16 array defea 0{gw 0}bpea 1{4{gw}repeat setcachedevice newpath}bpea 2{2{gw}repeat moveto}bpea 3{2{gw}repeat lineto}bpea 4{6{gw}repeat curveto}bpea 5{4{gw}repeat gn dk}bpea 6{0 gw rlineto}bpea 7{gw 0 rlineto}bpea 8{0 gb rlineto}bpea 9{gb 0 rlineto}bpea 10{2{gb}repeat rlineto}bpea 11{6{gb}repeat rcurveto}bpea 13{closepath}bpea 14{end PaintType 2 eq{temp begin stroke exit}{temp begin eofill exit}ifelse}bpea 15{end PaintType 2 eq{temp begin stroke exit}{temp begin eofill exit}ifelse}bp/da 16 array defda 0{gw pop}bpda 1{4{gw pop}repeat}bpda 2{2{gw}repeat moveto}bpda 3{2{gw}repeat lineto}bpda 4{6{gw}repeat curveto}bpda 5{4{gw}repeat gn dk}bpda 6{0 gw rlineto}bpda 7{gw 0 rlineto}bpda 8{0 gb rlineto}bpda 9{gb 0 rlineto}bpda 10{2{gb}repeat rlineto}bpda 11{6{gb}repeat rcurveto}bpda 13{closepath}bpda 14{exit}bpda 15{exit}bpend/BuildChar{exch begin0.2 setflatEncoding exch getCharStrings exch2 copy known not{pop /space}if gettemp begin eval end end}bd/CharStrings 256 dict def32 /space <0092520180008000800080000F>dcdc67 /C <00A2A10181F97F54A1E9A7A602A11BA70D049DE5A75D987AA7A695CBA7A6048722A7A681F9A2C481F994E70481F9858E873E7F54943B7F54049B107F549F19812EA1E9859B03A05386EA049D24839F9A218269951A8269048ABF826986D3877986D394D80486D3A0EA8A4DA4C39537A4C3049C29A4C39E69A3349F439DCE039F649CFD0781B70D0F>dc69 /E <009DF601818B80009C94A7B5029B21A7B5049A2CA74999A9A72798D1A71A0397B0A714039705A710076A86067E520485B6A54E8699A479869BA09D067ED2066832067ED204869B829A85B581C2818B81AE067E52079B09068937077E4D049A37839B98F9826893CE8268077B42077F1E048BAE82688B1782F28B03854F038AFF8693038AFB879E068C170788C90394BD93B60B8B809680A18004963F93B696E593AB97F4937F06833C0496AB967D95AD966C936D966C07778E0689A80680E4048AFBA46A8B4AA4C38E5BA4C803917BA4CD07812C049774A4CD98FEA36399699E950781B80D0F>dc70 /F <009BF801818680009B15A7A3029B15A7A30499CBA73198D6A71096E1A710076AA5067E520485B9A550869DA47B869FA09D067ED2066832067ED204869F829885B881C0818681AE067E52078F200681AE048BD581AE8AEF826E8AED867306812E068C130788CF0394A393B60B9C80B780D38004962893B696C793AD97F4938A068315049705968096A4967995D49674039445966B0493B19668936096669351966607779C0689AE048AEDA01D8AEFA06A8AF2A0F9038AF9A226048B06A4498B9CA4C18E3AA4C107833504979FA4C198E0A3C4994D9E8A0781C80D0F>dc73 /I <00918A01818A80009002A71002900281AE048BCA81BF8AE682948AE4867306812E0697CE06812E048AE4A4798BCBA5519002A5620681AE077188067E520485BEA55086A2A47B86A4A09D067ED2066832067ED20486A4829885BD81C0818A81AE067E52078E780D0F>dc76 /L <009C5C01818680009BD2A710029BD28926077E2E04995D838E9828826393068263077C1A048B2F82638AF682AA8AF6879E0697D106812E048AF6A4768BDCA54E9007A5620681AE07717F067E520485B6A54F8699A47A869BA09D067ED2066832067ED204869B829985B581C1818681AE067E52079A4C0D0F>dc78 /N <00A8AA0181877FC6A76AA71002A25E7FC6069FA906812E04A25EA475A343A54DA76AA5620681AE07731D067E52049EADA54D9F8FA4779F91A09D067ED20668FD038D54A21D048D44A2338D17A2728CCBA2DA048B4BA4EA8AEDA5998A8DA7100776FA067E520485B0A54D8692A4788694A09D067ED2066832067ED2048694829B85AF81C3818781AE067E52078CE50681AE048A4981C48968829A8966867306812E069822039E5B82A9049F5A81479FBB80A4A0127FC60D0F>dc79 /O <00A69A0181F97F5BA4A1A7B502A4A1938904A4A1A1F89FB3A7B5934DA7B50486FBA7B581F9A1E681F9939A0481F98544870A7F5B93557F5B049F937F5BA4A18540A4A193890D029FD49354049FD486B59C85821D936C821D048A2A821D86C186CD86C193880486C1A06C89F6A4D8934EA4D7049CADA4D69FD4A06E9FD493540D0F>dc80 /P <00A06C01819A80009F00A766028CC1904D048EAF8EFA90CF8E60938C8E60049B6B8E609F0092629F009B30049F00A4659C37A76693ACA766049253A7668F45A74D8C4AA72A048AB7A717899CA70E88F9A70E0387C1A7100779D9067E520485CBA54F86AEA47A86B0A09D067ED2066832067ED20486B0829985CA81C1819A81AE067E52078F570681AE0B6B8057804280048BFD81AE8B1282748B10867306812E0697AF048B109F628B149FF78B1DA10F048B36A43F8CA6A51C91DBA51C04985BA51C9A5EA2C59A5E9B32049A5E93BC983C90C192E590C00490F090C08F7091168D6B91FD0D0F>dcdcdc84 /T <009F5D01807480009EE9A781029EE9A781039E4EA763049D1CA7289C3BA7129AE1A710077F5A076AE8077F57048306A7108231A7278074A7810676140781D10482C4A33D8441A4BE8958A4BE048D42A4BE8D8DA4768D8DA0B40666ED067ED2048D8D82788CA081AF87EF81AE067E52078F7B0681AE0492BF81AF91D5827791D3867306812E0699100491D3A48B920BA4BF9625A4BF049B1EA4BF9CB8A3199D1E9D950781CB0D0F>dc85 /U <00A5620180F67F5CA46CA7100280F6A562048524A54F8607A4798609A09D067ED2066B8F0486078A45860689DD860689C5048606829889D87F5C92527F5C049C567F5C9F8882E19F8D8DEF06810506907B06812E049F8DA46AA069A541A46CA5620681AE077326067E52049BB6A54C9C97A4769C99A09D067ED2066F85067F14049C9984CC9A72822093018220048D2882208A8C848F8A7D8A12038A768CA4038A708DBE0691B106812E048A70A4758B55A54D8F7CA5620681AE07717A0D0F>dcdcdc89 /Y <00A24C017FC28000A28AA710027FC2A710067E52048164A53E822AA50782D8A4850483C9A3D18421A338877C9C7E048AEE95968D64911D8F378E7206792F067ED2048F37829C8E5281C48A2F81AE067E52078E630681AE04946981C3938782989385867306812E0687760495B292CC985C97BD9A669BDB049DBBA2969E3FA36D9FA7A47504A07CA511A126A547A28AA5620681AE077305067E520498FDA5459A1FA4A29A1FA2D0049A1FA1F699C7A0E198DD9EDC0497269B12940E954A920392110490A394268F3D96AE8CE29B57048B079F0389EBA1E289EBA3010489EBA4908B16A53B8E05A55B038EAAA5620681AE0D0F>dcend/UnclproteusLight fsd definefont pop/setpacking where{pop cpack setpacking}if%%EndFont/spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor0 0 1 0  (PANTONE 102 CV) falsenewcmykcustomcolor]defvmsgsave [1 0 0 1 0 0] concatvms%%IncludeFont: UnclproteusLight/f1 /UnclproteusLight FF def{f1 [24.980179 0 0 24.917343 0 0] makesetfont137.776337 546.902405 moveto0 0 32 0 0 (N) ts157.109146 546.902405 moveto0 0 32 0 0 (E) ts171.630096 546.902405 moveto0 0 32 0 0 (W) ts196.158966 546.902405 moveto0 0 32 0 0 (CA) ts228.701538 546.902405 moveto0 0 32 0 0 (S) ts242.508942 546.902405 moveto0 0 32 0 0 (T) ts257.377502 546.902405 moveto0 0 32 0 0 (L) ts270.465271 546.902405 moveto0 0 32 0 0 (E ) ts290.792175 546.902405 moveto0 0 32 0 0 (U) ts308.478333 546.902405 moveto0 0 32 0 0 (P) ts323.798218 546.902405 moveto0 0 32 0 0 (O) ts342.002747 546.902405 moveto0 0 32 0 0 (N ) ts369.641968 546.902405 moveto0 0 32 0 0 (T) ts385.510742 546.902405 moveto0 0 32 0 0 (Y) ts402.879761 546.902405 moveto0 0 32 0 0 (N) ts423.212769 546.902405 moveto0 0 32 0 0 (E) ts} [0 0 0 1]stsvmrs%%IncludeFont: UnclproteusLight/f1 /UnclproteusLight FF def{f1 [24.980179 0 0 24.917343 0 0] makesetfont192.048187 574.201172 moveto0 0 32 0 0 (U) ts210.484482 574.201172 moveto0 0 32 0 0 (N) ts231.06752 574.201172 moveto0 0 32 0 0 (I) ts240.294815 574.201172 moveto0 0 32 0 0 (V) ts257.578491 574.201172 moveto0 0 32 0 0 (E) ts272.099426 574.201172 moveto0 0 32 0 0 (R) ts289.468445 574.201172 moveto0 0 32 0 0 (S) ts304.776123 574.201172 moveto0 0 32 0 0 (I) ts314.253479 574.201172 moveto0 0 32 0 0 (T) ts329.37207 574.201172 moveto0 0 32 0 0 (Y ) ts350.546692 574.201172 moveto0 0 32 0 0 (O) ts369.001282 574.201172 moveto0 0 32 0 0 (F) ts} [0 0 0 1]stsvmrsgsave [1 0 0 1 0 0] concatvms0 sfnewpath271.9 404 moveto271.9 406 273.5 407.6 275.4 407.6 curveto277.4 407.6 279 406 279 404 curveto279 402.1 277.4 400.5 275.4 400.5 curveto273.5 400.5 271.9 402.1 271.9 404 curvetoclosepath0 sfnewpath199.1 461.1 moveto198.9 462.2 199.6 444.6 199.6 444.6 curveto200 429.3 204.5 413.4 207 406 curveto219.5 369.8 241.4 340.2 285.5 312.9 curveto329.7 340.2 351.4 369.8 363.9 405.8 curveto366.4 413.4 371.1 429.2 371.5 444.6 curveto371.5 444.6 372.2 462.2 372 461.1 curveto199.1 461.1 linetoclosepathgsave[0 0 0 1] 0.5<FF00FF00FF00FF00>pat {fill}fpgrestorevmrs0 sfnewpath199.1 461.1 moveto372 461.1 lineto0 sfnewpath199.1 461.1 moveto196.9 528 lineto374 528 lineto372 461.1 lineto199.1 461.1 linetoclosepathgsave1.6 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp grestore0 sfnewpath372 461.1 moveto372.2 462.2 371.5 444.6 371.5 444.6 curveto371.1 429.2 366.4 413.4 363.9 405.8 curveto351.4 369.8 329.7 340.2 285.5 312.9 curveto241.4 340.2 219.5 369.8 207 406 curveto204.5 413.4 200 429.3 199.6 444.6 curveto199.6 444.6 198.9 462.2 199.1 461.1 curveto372 461.1 linetoclosepathgsave1.6 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp grestore0 sfnewpath200.2 461.8 moveto372.2 461.8 lineto0 sfnewpath272.3 385 moveto270.8 382.3 273.4 378.7 277 380.1 curveto281.3 358.8 274.8 345.4 268.1 334.9 curveto274.6 332.9 278.7 332.4 285.5 332.4 curveto292.3 332.4 296.5 332.9 303 334.9 curveto296.5 344.9 289.6 358.8 294 380.1 curveto296.7 378.7 300.6 381.7 298.8 385 curveto317.4 389.5 331.5 384.5 341.5 378.1 curveto341.5 378.1 344 385.7 344 393.7 curveto344 401.3 341.5 409.4 341.5 409.4 curveto331 402.7 316.4 398.4 298.8 402.3 curveto300.3 406 297 408.7 294 407.2 curveto289.6 428.6 296.5 442.5 303 452.4 curveto296.5 454.4 292.3 455 285.5 455 curveto278.7 455 274.6 454.4 268.1 452.4 curveto274.4 442.8 281.3 428.6 277 407.2 curveto273.5 408.9 270.6 405.1 272.3 402.3 curveto252.2 397.5 237.7 403.4 228.7 409.4 curveto228.9 409.4 226.4 401.3 226.4 393.7 curveto226.4 385.7 228.9 378.1 228.7 378.1 curveto238.7 384.5 254.4 389.9 272.3 385 curvetoclosepathgsave[0 0 0 0]setcolor  {fill}fp grestoregsave1.6 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp grestoregsave [0.326797 0 0 0.326889 187.344513 299.638794] concatvms0 sfnewpath263.5 287.7 moveto263.5 308.1 280.1 324.7 300.5 324.7 curveto320.9 324.7 337.5 308.1 337.5 287.7 curveto337.5 267.3 320.9 250.7 300.5 250.7 curveto280.1 250.7 263.5 267.3 263.5 287.7 curvetoclosepathgsave[0 0 0 1]setcolor  {fill}fp grestore0 sfnewpath268.1 287.7 moveto268.1 305.5 282.7 320.1 300.5 320.1 curveto318.3 320.1 332.9 305.5 332.9 287.7 curveto332.9 269.9 318.3 255.3 300.5 255.3 curveto282.7 255.3 268.1 269.9 268.1 287.7 curvetoclosepathgsave[0 0 0 0]setcolor  {fill}fp grestore0 sfnewpath272.1 287.7 moveto272.1 303.3 284.8 316.1 300.4 316.1 curveto316 316.1 328.8 303.3 328.8 287.7 curveto328.8 272.1 316 259.4 300.4 259.4 curveto284.8 259.4 272.1 272.1 272.1 287.7 curvetoclosepathgsave[0 0 0 1]setcolor  {fill}fp grestorevmrgrestore0 sfnewpath252.4 525.1 moveto253.1 524.9 254 524.5 254.6 523.6 curveto256.5 525.6 257.6 524.7 259.1 525.5 curveto259.4 524.2 261.1 523.5 260.7 521.3 curveto261.6 522 263.4 521.5 264.7 521.5 curveto264.7 520.6 265.8 519.7 265.4 518 curveto266.5 518.4 266.8 517.9 267.4 518 curveto267.4 517.5 268.3 516.1 267.6 513.7 curveto268.8 513.5 269 512.6 270.3 512.3 curveto269 509.9 269.6 506.7 266.3 505.4 curveto267.6 499.6 264.9 497.6 265.8 494.5 curveto264.1 494 263 494.2 261.4 494.2 curveto260.9 490.9 259.6 490.7 259.3 487.7 curveto257.6 487.9 257.4 487.9 256.2 488.4 curveto254 483.9 253.1 483.5 250.2 480.4 curveto249.7 481.3 248 481.7 247.1 483.3 curveto245.3 482.6 245 482.1 242.4 481.9 curveto242.1 483.3 241.5 483.7 240.5 485.5 curveto237 484.1 237.6 485 235.6 484.1 curveto236.3 488.2 234.9 489.7 236.3 496.3 curveto234.7 496.9 234 498.5 232.5 499.2 curveto233.8 500.7 233.4 502.5 234.9 504.5 curveto234.5 505 232.9 505.2 232.1 507 curveto235.6 508.6 236.8 513.7 240.6 514.6 curveto238.1 517 241.4 520 241.9 523.1 curveto242.8 522.6 243.7 522.7 245.2 522.2 curveto246.2 524.2 247 523.6 248 524.7 curveto248.4 524.2 249.3 524.2 250.2 523.5 curveto250.9 524.7 251.7 524.7 252.4 525.1 curvetoclosepathgsave[0 0 0 1]setcolor  {fill}fp grestore0 sfnewpath216.6 525.6 moveto219.1 525.6 219.9 524 220.2 522.6 curveto221.7 522 222 521.3 221.5 520 curveto220.6 517.7 217.9 516.6 220.2 515.5 curveto222.2 514.6 221.8 517 222.4 518.2 curveto222.7 518.8 223.1 519.1 224.4 518.4 curveto224.7 519.3 225.5 519.5 225.3 521.3 curveto227.1 519.5 226.9 518.8 226.2 517.1 curveto226.9 516.6 226.9 515.5 226.4 515 curveto224.4 513.5 222.7 514.1 222.4 512.1 curveto221.5 508.3 229.8 499.2 234.5 496 curveto233.4 488.8 234.7 486.6 233.8 483.7 curveto230.5 484.1 229.3 485.3 228.2 487.5 curveto222.4 486.9 221.8 490.7 220 491.3 curveto221.7 491.6 222 492.4 221.8 493.6 curveto218.8 493.3 217 494.7 214.4 498.2 curveto216.4 498.3 217 499.1 217.5 501 curveto212.8 501.6 214.3 502.5 211.9 504.1 curveto213.7 504.7 213.2 505.9 215.2 506.5 curveto215 507.9 214.4 508.8 213.7 509.2 curveto212.1 509.9 210.1 508.3 209 508.1 curveto207.6 507.6 206.8 508.3 206.8 509.7 curveto205.2 509.9 205 509.5 204 508.6 curveto204.1 510.3 204.3 511.4 206.3 511.7 curveto206.3 511.9 206.1 512.6 206.8 513.2 curveto208.1 514.6 211.5 512.6 211.7 514.4 curveto211.7 517 207.7 517 207.9 518.9 curveto207.9 519.7 208.5 519.8 208.8 520.6 curveto207.9 521.3 207.4 521.7 206.3 521.7 curveto207.7 522.9 208.8 524 210.6 521.8 curveto211.5 521.8 212.6 523.1 214.1 521.1 curveto214.8 519.7 213.2 515 216.2 516.4 curveto217.5 517.1 216.1 519.1 216.1 520.8 curveto216.1 521.7 216.6 522.4 217.7 522.6 curveto217.7 524 217.5 524.4 216.6 525.6 curvetoclosepathgsave[0 0 0 1]setcolor  {fill}fp grestore0 sfnewpath301.9 491.8 moveto305.5 491.5 310.9 489.8 313.7 486.8 curveto310 481.3 315.8 481 314.9 477.4 curveto314.4 475.9 313.1 475.9 312.2 475.9 curveto313.3 472.7 312.4 471.6 310 470.1 curveto309.7 471.8 309.3 472.7 307.9 472.8 curveto307.7 469.6 305.5 469.1 303 468 curveto303 469.4 303.9 471.2 301.7 471.9 curveto301.7 469.1 300.6 467.2 297.4 466.9 curveto298.7 468.9 296.8 469.6 297.4 471.2 curveto296.1 471 294.5 471.2 294.3 470 curveto294.1 468.9 294.3 469.1 294.9 468.1 curveto295.6 466.7 294.3 466.2 293 466 curveto292.9 464.7 294 464.4 294.5 463.4 curveto292.7 463.4 291.4 464.4 290.9 465.6 curveto289.3 465.8 289.4 467.1 289.8 468 curveto290.5 469.6 291.1 470 288.9 470.3 curveto286.7 470.5 286.9 468.3 286 466.9 curveto285.5 465.8 283.8 465.6 282.7 466.9 curveto281.8 466.3 281.7 465.8 281.5 464.4 curveto279.7 466.2 280.6 467.2 281.3 468.5 curveto280.9 470 281.5 470.5 282.6 470.7 curveto283.8 470.9 284.2 470.5 285.1 471.9 curveto285.5 472.5 285.1 473.6 281.3 472.8 curveto279 472.3 278 474.1 278.8 475.4 curveto278.2 475.4 278.6 475.9 276.1 475.6 curveto277 477 277.5 477.5 279.7 477.5 curveto280 478.5 280.9 479.4 282.6 478.1 curveto284.7 476.5 285.3 475 286.5 475.7 curveto288 477.2 286.5 477.5 285.3 478.5 curveto284.9 478.6 283.8 479.4 285.1 481.3 curveto284.4 482.2 283.8 482.4 282.9 482.4 curveto284.2 483.7 286.2 483.9 287.3 482.8 curveto288.5 483.9 290 482.6 290 481.7 curveto290.3 478.1 290.9 477.5 294 477.2 curveto295.2 477 296.8 477 300.6 479.5 curveto301.5 482.1 294.3 484.8 295 487.5 curveto295.8 490.9 300.5 490.9 301.9 491.8 curvetoclosepathgsave[0 0 0 1]setcolor  {fill}fp grestore0 sfnewpath275 492.4 movetogsave2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp grestore0 sfnewpath303 524.7 moveto308.8 525.1 311.8 523.3 318.3 524.4 curveto314.4 522.9 315.6 520.4 312.7 519.3 curveto315.3 518.8 316.9 521.5 321.1 522 curveto323.6 522.2 325.9 521.8 326.7 521.1 curveto322.3 521.7 319.6 515.5 309.9 515.1 curveto304.6 515 305.2 515 299.4 515.7 curveto300.5 515 299.7 514.2 301.2 513.2 curveto295.9 513 295.2 515.5 292.1 517.1 curveto287.6 519.1 283.7 518.9 281.3 516.6 curveto279 513.3 284.2 510.6 289.4 510.6 curveto294.5 510.6 315.6 512.3 327.4 515.5 curveto337.7 518.2 346.9 516.8 349.8 509.4 curveto351.6 510.1 351.6 511.7 354.1 512.3 curveto358.5 513.2 359 511.2 363.9 515.5 curveto361.9 509.4 359.4 510.8 355.6 507.6 curveto353.6 505.9 351.4 500.7 346.7 498.7 curveto344.2 497.8 334.8 500.1 326.7 498.7 curveto330.1 496 333.3 491.3 338.6 491.3 curveto342.7 491.5 342.4 495.8 344.2 496.9 curveto346.7 497.3 347.3 494.9 347.6 494 curveto350.2 495.1 353 496 356.7 493.3 curveto355.8 493.1 355.2 493.5 354 491.6 curveto357.9 492 358.1 491.6 360.6 489.1 curveto358.5 489.3 357.7 489.1 356.3 487.1 curveto361.9 487.5 362.1 484.4 364.3 483.2 curveto362.8 483 359.9 483.3 360.1 481.2 curveto360.6 479.9 362.6 480.3 363.5 481.2 curveto365.9 482.8 367 482.2 367 480.4 curveto367.9 480.4 369 480.3 369.7 478.6 curveto368.6 479.4 368 479.2 367.1 478.8 curveto367.1 477 367.1 476.8 365.3 476.8 curveto364.1 476.6 362.3 477.9 361.9 475.9 curveto362.4 473 363.7 473.8 364.3 472.1 curveto364.8 471 364.6 470.5 363 469.6 curveto363.2 468.7 363.3 468.7 364.6 467.8 curveto364.1 467.8 362.4 467.1 361.2 469.1 curveto360.1 469.1 359.2 469.1 358.8 470.1 curveto358.5 471.4 359.9 473.6 358.3 473.8 curveto356.5 474.1 355.9 471.8 355.9 470.3 curveto356.1 468.7 354.5 467.1 352.9 468 curveto351.8 467.2 352 466.9 351.8 465.3 curveto350.2 466.9 350.9 467.6 351.1 468.9 curveto349.6 470 349.6 471.2 351.2 472.3 curveto352.3 472.8 354.1 472.3 354.5 475 curveto352.7 476.1 352 474.1 349.4 473.8 curveto348 473.6 347.3 475 347.1 475.6 curveto345.8 475.4 345.6 475.4 344.7 474.5 curveto344.7 475.6 344.4 477.2 346.9 477.4 curveto346.9 479 347.6 479.5 349.4 479 curveto350.7 478.6 352.5 477.9 353 478.5 curveto354.3 480.8 347.1 483.9 344.6 483.7 curveto338.8 482.8 332.1 475.9 321.1 478.8 curveto314.7 480.4 317.1 488 312.2 490.4 curveto311.7 490.6 304.8 495.8 295.2 492.7 curveto288.5 490.6 280.6 483.3 278 482.1 curveto273.7 479.9 267.4 477 260.7 475.7 curveto259.6 469.1 249.7 469.2 248.6 468.3 curveto248.8 469.1 248.8 469.8 248.6 470.7 curveto245 466.7 240.5 467.6 237 466.7 curveto237.4 467.8 237.9 468.3 237.2 470.7 curveto235.2 467.1 233.2 466.3 228.5 466.3 curveto229.8 467.4 229.8 468.3 228.9 470.7 curveto227.1 467.4 227.3 467.2 219.3 466.3 curveto221.1 467.8 220.6 470.9 219.7 471.6 curveto218.8 472.1 217.7 472.3 216.4 471.8 curveto216.2 471.2 216.1 470.5 216.1 469.6 curveto216.2 467.2 215.2 466.9 213.9 467.1 curveto212.8 464.5 211.5 464.5 209.7 465.1 curveto210.8 465.6 211.4 466 211.5 467.6 curveto209.7 468 210.3 469.6 211.5 470.7 curveto212.1 471.4 212.6 472.3 212.1 473 curveto210.3 473.6 210.6 473.4 207.4 472.1 curveto206.1 471.8 204.7 472.7 204.7 473.6 curveto203.2 473.4 203.2 473.2 202.5 472.1 curveto201.6 474.7 203.2 475 204.5 476.1 curveto203.8 479 207 478.6 207.9 477.9 curveto209.7 477 211.2 476.3 212.1 478.3 curveto211.5 480.3 210.8 479.7 207.4 481 curveto205.9 481.7 206.1 482.8 206.7 483.9 curveto205.9 484.4 205.2 484.1 204.3 484.1 curveto204.9 485.3 205.8 486.2 208.5 485.9 curveto210.6 488.2 212.1 485.1 212.3 484.2 curveto212.4 482.8 212.4 481.9 215 481.7 curveto216.2 482.8 214.6 483.7 214.6 485.1 curveto214.6 487.1 215.9 486.8 216.8 486.8 curveto217.3 487.7 216.8 488.8 215.3 489.5 curveto217 489.7 218.6 489.5 219.3 486.6 curveto221.8 486.4 221.7 484.1 220.6 483.7 curveto219.9 483 217.7 480.8 218.8 479.9 curveto219.7 478.6 241.7 478.8 246.8 481.3 curveto247.5 479.7 249.1 479.7 249.9 477.7 curveto252.9 480.3 255.5 483.3 257.3 486.4 curveto258.7 486 259.1 485.7 260.9 486 curveto260.9 489.8 263 491.3 263 492.6 curveto264.7 492.6 265.6 492.6 267.2 493.3 curveto267.4 495.4 267 496.2 268.1 500.1 curveto277 499.2 294 503.4 303.5 504.7 curveto305.9 504.8 321.4 505.6 325.8 504.7 curveto328.5 504.1 341.7 501.8 344.2 504.1 curveto346.2 505.7 346.7 508.6 344.7 510.3 curveto342.4 512.3 339.7 513 335.2 512.8 curveto331.9 512.6 325.7 512.5 321.6 510.4 curveto321.6 510.4 320.5 507.4 315.1 507 curveto315.6 507.7 315.8 508.8 315.5 509.7 curveto314.6 507.9 313.8 507.4 310.2 507 curveto310 507.7 310.6 508.8 309.3 509.5 curveto308.6 507.6 307.1 506.8 304.8 506.3 curveto305 507.2 305.2 507.6 304.6 508.6 curveto303 506.7 301.9 506.3 300.5 506.1 curveto300.6 506.7 300.5 508.1 299.7 508.3 curveto298.3 505.6 294.1 505.2 292.1 505 curveto292.9 506.5 292.9 506.8 292.3 507.6 curveto284.9 507.6 275.9 509.2 278 516.4 curveto279.9 522 288.5 522.4 291.1 522 curveto297.2 521.5 299.7 524.5 303 524.7 curvetoclosepathgsave[0 0 0 1]setcolor  {fill}fp grestore0 sfnewpath323.8 496.9 movetogsave2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 1]setcolor  {stroke}fp grestore0 sfnewpath245.5 518.2 moveto246.2 517 250.6 515 251.7 514.4 curveto252.6 512.6 249.7 511.7 249.5 510.4 curveto249.5 510.1 249.7 509.2 250.4 509 curveto250.2 508.3 249.9 507.7 250.9 506.7 curveto252.6 506.7 253.5 507.2 253.7 507.7 curveto254.4 507.6 255.3 507.9 255.5 508.6 curveto255.6 509.5 254.9 511.9 256.2 512.4 curveto256.7 512.8 260.5 510.6 263.6 510.8 curveto262 508.6 261.1 508.1 259.3 508.6 curveto258.2 509 257.8 511.4 257.1 511.2 curveto256.4 510.8 257.1 508.6 256.2 507.6 curveto255.8 507 254.9 506.5 254 506.7 curveto253.8 505.9 253.1 505.7 251.3 505.6 curveto252.2 504.1 252 504.1 254.6 503.8 curveto254.9 503.6 255.6 502 255.5 501.6 curveto253.1 498.9 252.6 498 252 494.7 curveto251.5 494.2 251.3 494.2 250.6 494.2 curveto247.7 495.8 245.9 496.5 242.8 497.1 curveto242.4 497.3 242.1 497.6 242.3 498 curveto243.7 500.5 244.4 502.9 244.4 506.1 curveto245 506.7 245.3 506.7 245.9 506.7 curveto248 505.7 248.4 505.9 249.9 506.1 curveto249.1 506.8 249 508.1 249.1 508.8 curveto248.6 509 248.2 510.3 248.4 510.6 curveto248.8 511.5 250.9 513.2 250.4 513.7 curveto250 514.1 248.4 512.8 247.1 513.3 curveto245.5 514.1 244.8 515.1 245.5 518.2 curvetoclosepathgsave[0 0 0 0]setcolor  {fill}fp grestoregsave0.2 setlinewidth 0 setlinecap 0 setlinejoin 3.863693 setmiterlimit [0 0 0 0]setcolor  {stroke}fp grestore0 sfnewpath245.7 505 moveto246.1 505.4 246.2 505.2 246.8 505.4 curveto247.7 504.8 249 504.5 250.2 504.8 curveto251.7 502.9 252.9 503 253.5 502.9 curveto254 502.3 254 501.8 254 501.6 curveto252 499.2 251.5 498.5 251.1 496.2 curveto250.9 495.6 250.6 495.6 250.2 495.6 curveto249.3 496 249 496.2 248 496.5 curveto250.2 497.4 250.4 499.2 251.3 502.5 curveto250.2 503 249.5 503.6 248.2 503.8 curveto247 501.2 244.6 499.4 246.4 497.3 curveto245.3 497.8 244.8 497.8 244.1 498 curveto243.9 498 243.5 498.2 243.9 498.9 curveto245 500.9 245.7 502.9 245.7 505 curvetoclosepathgsave[0 0 0 1]setcolor  {fill}fp grestorevmrgrestorevmrgrestorevmrend  % FreeHandDict%%EndDocument: _%MSEPS Trailerpp_save restore0 0 0 fC
/fm 256 def
2 2 302 261 B
1 F
n
2 2 302 261 B
1 F
n
860 2 305 261 B
1 F
n
2 2 1166 261 B
1 F
n
857 2 1169 261 B
1 F
n
2 2 2027 261 B
1 F
n
2 2 2027 261 B
1 F
n
2 561 302 264 B
1 F
n
2 2 302 826 B
1 F
n
2 2 302 826 B
1 F
n
860 2 305 826 B
1 F
n
2 2 1166 826 B
1 F
n
857 2 1169 826 B
1 F
n
2 561 2027 264 B
1 F
n
2 2 2027 826 B
1 F
n
2 2 2027 826 B
1 F
n
gs 1225 650 552 927 CB
/bytestr 21 string def
/pp 1 string def/s 1 string def/rn{currentfile s readhexstring{0 get}{pop
exit}ifelse}def/unpack{/DC 0 def/BC 0 def{DC bytestr length ge{exit}if
rn/BC exch def BC 127 le{/BC BC 1 add def DC 1 DC BC add 1 sub{bytestr
exch rn put}for}{/BC BC 255 xor 2 add def rn/pp exch def DC 1 DC BC
add 1 sub{bytestr exch pp put}for}ifelse/DC DC BC add def}loop bytestr}bd
0 0 0 sc
save 552 927 translate 1225 650 scale
%%BeginData: 186 ASCII Lines
168 185 false [392 0 0 208 -152 -23] {unpack} bind imagemask
f8ff01fe0ff7ff
f8ff01f807f7ff
f8ff01f003f7ff
f8ff01e0c3f7ff
f8ff01c7f3f7ff
f8ff0187f3f7ff
f8ff011ff3f7ff
f9ff02fe3fe3f7ff
f9ff02fc3be3f7ff
f9ff02fcf3e3f7ff
f9ff02f8f1c7f7ff
f9ff02f9f807f7ff
f9ff02f1f00ff7ff
f9ff02e3f27ff7ff
f9ff01e5f3f6ff
f9ff01e3f7f6ff
f9ff01e3f7f6ff
f9ff01c3f7f6ff
f9ff01c7f7f6ff
f9ff01c7f7f6ff
f9ff018fe7f6ff
f9ff01c7eff6ff
f9ff0187eff6ff
f9ff00a7f5ff
f9ff0107dff6ff
f9ff01a7dff6ff
f9ff012fdff6ff
f9ff0107bff6ff
f9ff012fbff6ff
f9ff0127bff6ff
f9ff010fbff6ff
f9ff012fbff6ff
f9ff010fbff6ff
f9ff010fbff6ff
f9ff012f7ff6ff
f9ff014f7ff6ff
f9ff012f7ff6ff
f9ff01677ff6ff
f9ff000ff5ff
f9ff0026f5ff
f9ff002ef5ff
f9ff0065f5ff
f9ff0025f5ff
f9ff0027f5ff
f9ff0025f5ff
f9ff0025f5ff
f9ff0027f5ff
f9ff0005f5ff
f9ff0023f5ff
f9ff0087f5ff
f9ff0087f5ff
f9ff0083f5ff
f9ff00c5f5ff
f9ff0085f5ff
f9ff00c5f5ff
f9ff00c5f5ff
f9ff00cdf5ff
f9ff00e8f5ff
f9ff00c8f5ff
f9ff00e8f5ff
f9ff00c4f5ff
f9ff01d07ff6ff
f9ff01a07ff6ff
f9ff01b03ff6ff
f9ff01b03ff6ff
f9ff0170bff6ff
f9ff01789ff6ff
f9ff017d1ff6ff
f9ff01fd9ff6ff
f9ff017c07f6ff
f9ff017cb7f6ff
faff02fefda7f6ff
faff02fcfe17f6ff
faff02feff07f6ff
faff02fdff93f6ff
faff02f9ff81f6ff
faff02fbffa1f6ff
faff02fbff81f6ff
faff02fbffc0feff01f80ffeff008fffff
faff02fbffc4feff01e00ffeff009fffff
faff02fbffe0feff01e027feff009fffff
faff03f3ffe03fffff01c007feff009fffff
faff03f7fff1bfffff018203feff009fffff
faff03f7fff0bfffff010c03feff003fffff
faff07e7fff09ffffe00e3ffff01fc3fffff
faff07effff89ffffe23e7ffff01fc3fffff
faff07effff89ffffe4be3ffff01f87fffff
faff07cffffc8ffff880e7ffff01e03fffff
faff07dffffe47fff810e7ffff010c7fffff
faff0bdffffe07fff130e7fffe087fffff
faff0adffffe03fff03067fffe60feff
faff0adffffe43fff2f063fffc7cfeff
faff0adffffe43ffe2e067fffc7dfeff
faff009fffff0701ffc2c067fff870feff
faff00bfffff0713ffc7e0e7fff039feff
faff00bfffff0781ff87c0cffffc29feff
faff003fffff0281ff87ffc003000e047fffff
faff007fffff08c1ff87c00ea007007fffff
faff007fffff08c0ff8fc0701741607fffff
fbff01fe7fffff04c17f0f80e0ff000010feff
fbff00fefeff07c23f1f87cc02807dfeff
fbff00fefeff07c23f1f9d9000301fffff00ef
fbff00fefeff02e01e3eff000230c805ffff00cf
fbff00fefeff07e33e3c401ff0ff00ffff00df
fbff00fcfeff07f20e38806fe0fcc0ffff009f
fbff00fcfeff04f80c700001ffc00300fcfe3f
fdff02dffffdfeff0af91cf2036d8fc009fcf87f
fdff02dffffdfeff0af91cf403ed9f800cfc707f
fdff02cffff9feff0af81cc007000fc00030407f
fdff02af7ffbfeff0af839a01f0003c00030c07f
fdff028a3ffbfeff04f979b00678ff0003e03000ff
fdff02203f33feff04f879a000f0ff00037800017f
fdff02213e37feff0af87180fdfe00f07800017f
fdff02473c77feff0af971807de181f13c00027f
feff03fe403077feff0afc73a000c000c1080001ff
feff03fe2524c7feff0afe79f8011001cbcc0003ff
feff03fc2c08c7feff0afe401e020400dfc80083ff
feff07f9040187effffdeeff0007e00102efc8000fff
feff07f84845c787fff20cff00071fc07e1ff8041fff
feff07fa6449860bfff638ff00074fe80f1fe0051fff
feff07f8100180027c0450ff000701c0209e08001fff
feff11f60843025af820d000200380f5d606037fff
feff0ff0106b8099f022e001b687023fe240f3ffff
feff07e004020013e022c0ff0005440003e00007ffff
feff0aeb7446a013e022c3e58018ff00027e0017ffff
feff0fda642c8693e022c10a001810001f007bffff
feff08ca240c800600200008ff0004200001c001ffff
feff0af2884d0c4c01340800bfe3ff0002207807ffff
feff0ff0682c028881100823bfc10021103c07ffff
feff04f868180281ff000318027fc0fe0001018fffff
feff0fbde138228300801a0dffc01ffefff01fffff
feff0f9be0300e0b80043b4bff807fffde081fffff
ffff10fe03e02800094000412ff800ff7858003fffff
feff0e01e068044a6001d5cff883ff391800feff
ffff0ffe00616826cb001fd2d7f183df3cc000feff
ffff0f87000440104024ffeac3f0031f1e0001feff
ffff12818004e015633bf2336bf1d31f8f8201fff9ff
ffffff80100584b36b8708136bf3da1f8ec301fff1ff
ffff0080fe000e339050000161e6003f870003ffc1ff
ffff12f0060001f7d870040371f4103f878007ff81ff
ffff12fc038001f7df08028271f4143fe7000c7f03ff
ffff05ce0060006fe0ff000a42b1c6707fc1000c7e03ff
ffff0901c01c001ff801004339ffe706ffe0801c78070b
07fffe01f00f000ff8ff000a435df1cfffe0801cf00e03
07fffc02f8008007c0fe000959800fffe00038c00807
07fffc24ffc07803c0ff000a50dc867ffff0107880130f
07fffd30ffe01c0380ff000210ec23ffff05f0007190001f
06fff8207e100382fd00012c10ffff02e000e0ff00003f
0cfff930bc0080f007c000186c04ffff05c001e000707f
14fff818b900c03ed17000186c227fff8223e000407f
07fff800380920120fff0007081c203ffc0073c0ff00007f
14fffc00e3090e06d07e00060e241ffc0cf7800001ff
10fffc0020880f07ff0f80020c101ff001e7ff000103ff
05ffe00040001ffe0007c00106038fe001cfff000103ff
10ffe380c40f861fd16038030a1f87e185deff000103ff
10ffc1ffc01c043c0a0c3c010a1fc7c100dcff000107ff
10ff203fe0040002ff400e00021fc3c00018ff000107ff
10ffa19ffc04807ffe000300631fe3818638ff00010fff
10ffa0c7f80440fff8000100220ff3c01ff8ff00011fff
07ff8010fa0010ffe0fd00040ff9803fe0ff00011fff
08ffc0063f200dfff07fff0005210ffc03ffe0ff00017fff
10ff9001dfc013ff2187e000210ffe07ffe8ff00ffff
12ff9b8003c007fe403fe0000807ff87ffc80003ffff
0cffb07c0cdf6ffcc8fffcc00407feff02c8000fffff
0cffb81f41614ff9f1fffe400c07feff02c8003fffff
07ff3003e00f3ff3e1ffff02100007feff02d0003fffff
06ff60007f13ffe7feff02c80407feff01d000feff
0cff60001f0bffeffffd3fe40107feff01c001feff
0cff600003e3ffcfffe003f30107feff018001feff
01ff60ff00087fffdfffe003f90087feff018007feff
01ff60ff00081fffbfffc009fdc103feff018007feff
01fe40ff000807ffbfff001cfe4003feff010007feff
01fe80ff00081fffbfff07e07f60a3ffff02fe19e7feff
0cfe8000087fffbfff0f801f3013ffff02fe271ffeff
0cfc8000087fff3ffe0e00079801ffff02fe0043feff
00fdff0009107ffe7ffc3c8203ec01ffff02fe2003feff
00fdfe0008fffefffc7c4003ec20ffff02fe0003feff
00f9ff000901fffefff8782041e200ffff02fc5003feff
00fbff000901fffcfff8788381f990ffff02fc8047feff
00faff000903fffdfff87827d8fd80ffff02f88047feff
00f8ff000943fffdfff8781ec0fc40ffff02f0004ffeff
00f8ff00098bfffdfff8fc1ff87e74ffff02f00a2ffeff
00f4ff000997fbfdfffc7c3ff07f24ffff02f08a27feff
00f0ff000e07f9fdf0fc7c3fc07f807fffe0920ffeff
11e820001ff9fdf07e7c27f07f803fffe0906ffeff
%%EndData
restore
gr
gs 1225 650 552 1577 CB
/bytestr 31 string def
0 0 0 sc
save 552 1577 translate 1225 650 scale
%%BeginData: 199 ASCII Lines
248 198 false [392 0 0 208 -64 0] {unpack} bind imagemask
f6ff03e860003ffffd0bf03e7c1fe87f807fffc3124fffff
f6ff11c870005ffcfde00e1c02407f163fffc3804fffff
f6ff11d06800bffe7ce00f0c03887f507fff93044fffff
f6ff11d060047fe67ee2030e02547e157fffb7844fffff
f6ff0cc0c200fff31e20018380007eb6ffff02a7040fffff
f7ff12fe21c600fff9cfb080e1c440fda67fff270c0fffff
f7ff12fe29cf00fffdefb08060f000fdae3fff070c0fffff
f7ff12fc030e11fffc21c000101c01f98c1ffe470c0fffff
f7ff12fc038f33ffbf8c30180c07fff35d5ffcc71c0fffff
f7ff08fc03ee37ff1fe39008ff0707ffe75ae7fd971c0fffff
f7ff06ee007e27ffcffcff000001ffff06ee1a83f9861c0fffff
f7ff05c1c00c07fff3ffff018200ffff06ccb683fbaf1c0fffff
f7ff05c0f8064ffff8ffff0ae1007fff9db680f3a61c1fffff
f7ff12c01e000ffffc000478001fff3d300067a00c0fffff
f7ff03c007c01ffeff0bfa00200ffe796a28afe8800fffff
f7ff03f083e03fffff0cfe85c57007fefae660cfa3101fffff
f7ff12f000303fffc009f0000801f9f4d4580f00481fffff
f7ff03f0080cbfffff0ae680dd2b80f3eda02e0780ff1fffff
f7ff00f0ff020f3fffe7c1779c40c067e9a1193780031fffff
f7ff00f0ff00057fff03011478ff00011fc3ff02030810003fffff
f7ff12f058383ffe7b1800fc00181fc705221681e03fffff
f7ff12f0c00efffdf67800f1000407ae050408c01c3fffff
f7ff06f0c101fff9ed40fd0007036c02881030003fffff
f7ff08fcc363fffbddc16018ff0002c07d00ff100208033fffff
f6ff07e317fff3db87f80cff0007e07800112004007fffff
f7ff07f9e307ffe7b30d0cff00018010fe000030ff00003fffff
f6ff07f30fffefb71fae02ff00041e0400c26cff00007fffff
f6ff04e78ffff7b7ff1f0a0308001f0001856e00807fffff
f7ff0ff3ef0fffe03718c6020400030002016fff00007fffff
f7ff12f0ff3fffdf31000e7a002043e0101acf80007fffff
f7ff12f83f1fffdf92000e8a002002b03016dfe0007fffff
f7ff05f003bffe01c8fd000820020800093fe6007fffff
f7ff05f8c0fffe0ee0ff000062ff000642cf02db7fff80feff
f7ff05f8307ffd1e68ff000044ff0006830b84bb7fffc0feff
f7ff05f800fff91f60ff000040ff0006020800067ffff0feff
f7ff07fc01fffd9f600020ff0004020888300dffff00fdfeff
f7ff06fe07fff99ee040ff0005048410881c03fbff
f7ff07fe03fffcc4000710fe00ff08011e00fbff
f6ff06e7fffed0607e14ff000510188c1cc07ffcff
f6ff0ec7bffec0e0fc10c38020580c1d603ffcff
f6ff070f41ff0061f8207cff000439080d780ffcff
f7ff0ffe1f3c7f8065f8c0780080710c0d7e07fcff
f7ff0ffe6ecfbf0065f880700100f3041d7f03fcff
f7ff08f0dc11c71861fc0040ff0004ea080d1f80fcff
f7ff10e19d0e7b1e707e00010001d2240c0fe03ffdff
f7ff12c37fc3bc1e727f80030003d22c0e8fec1fff00ffff
f7ff07063fe0c71f790f80ff000a03c8080c03f803fe001fff
f8ff0cfc103ffc398ff080a018003798ff080603fe61fc0007ff
f8ff15fc207bfe1ec7e0600020000f54480003ff90fc0007ff
f8ff15e000700f878000100080001e50080003ffc01c0001ff
f8ff15c100f003f1e0010ffa0001feb8040003ffc1880001ff
f8ff080224f001f8f0038000ff010afc700c007ffe00780001ff
f9ff07fc0400c8001c180ffe000603f8680005ffe0fd0000ff
f9ff07f81005b2e0079f7efe00060ff6f80805ffc0fd0000ff
f9ff07f0212416e783c7ccfe00051ff4e80c07fffc0000ff
f9ff00c0ff0004486f0061e0fe00051fc3d00007f8fc0000ff
f9ff07810496c77cd61cfcfe00057f97f00407e0fc0000ff
faff08fe0308b6c9b9b60c7cff000620ffb7c00405c0fc0000ff
faff00f8ff0005344701b6011eff000541fe0fc00004fb00007f
faff08f018206eff6882f84fff000307fe9f80ff04fb0000ff
faff08c000446f38ee03f80fff000407fdbf8084fa0000ff
fbff09fe0040008203e0414003ff00030ff93f80ff04fe000001ff0000ff
fbff0ffc008211a03ff0b85ce184001ff6ff00ff04fe000004ff0000ff
fbff11e0010021000ff1a2edf1c0001fe4ff400406fe000018ff0000ff
fbff0300020842ff000b781e115864001fcdfe40010ffb0000ff
fcff04fc0008190eff000f09fee20630403f9bfe80042ac0008040ff0000ff
fcff14f00030000c20c001f260332d003f73fe800128c001ff80ff0000ff
fcff00c0ff000c410c3f400007007c80003f67feff00012240fc0000ff
fcff0fc00180823803ff0007b1f761887eeffcff000352600006fe0000ff
fdff02fe0003ff000b38007fc003e1c160a43ccff4ff00039e700004fe0000ff
fdff00c0ff0cff000060ff000370000901ff0005799fe4000182fe000008ff0000ff
fdff05e000200818e0ff00120f80081c0c107b3f80000113200810200001ff
fdff05f000401001e0ff001203e0003e480cfb7f0a0001a3100020402000ff
fdff01f018ff000103c0fe000b14011e090677fc0200010310fd000101ff
fdff05f80900800380fe000a01c80f4942f7f0140001a1ff000482020001ff
fdff01fc08ff00010780fd0006c01f2830ffe014ff010723002106080001ff
fdff00fefe00010f80fc00050e4800ff0034ff0002220020fe000101ff
fdff01fe02ff00001ffb0005034091ff0034fe0006804030c00c03ff
fcff030200021fff00134a400010004013f80020010800804420006001ff
fcff0001ff00043d002fd32cff0009010083c8002000080080fd000103ff
fcff0080ff00057c0ffa06b5b0fe000d83ca0080000900c000800e0007ff
fcff06c02010f87e05d0fd000e21204840c0010500c00108180001ff
fcff0ac00020f80010122ffff800ff0106100110000100c0fd000101ff
fcff00e0ff4012fee5e4080002fffc5101140090000400c12442ff000103ff
fcff05f04001f01d13ffff0dfe03fc05031002b0000480416c06ff000103ff
fcff12f80805e021fe820010080f0501000120000480ff40fe000107ff
fcff05f80407e8fff4feff05e10165028905ff00040480621040ff000107ff
fcff0ffc0403dbfe1ed000809e082942890c40ff000380622480ff00013fff
fcff06fc0007dbe1e01fffff0548000c069208fd00012040fe000107ff
fbff040017dbcf9ffdff060717074ab08001ff000130c4ff0002031fff
fbff040037b7bc7ffdff060c0d8647648002ff00013398ff00020c67ff
fbff030037a781ffff090004003f218608640002ff00011320fe00011cff
fbff06802f6f3ffff07fffff0600f18780090002ff00011360ff0002447cff
fbff05856fde7fff0ffeff06f97a8703090002ff00061b40000109fcff
fbff04005e51ff80fdff02400047fe000002ff00001afe00022700ff
fbff0400bc57fc3ffeff07f07fcdff97020002ff000018ff0003199c01ff
fcff04fe02bc4ff1fdff070fffed5fca240006ff000009ff0003127007ff
fcff04f801b81f0ffeff0880ffefa8bfd0440002ff000004fd00011fff
fcff02f805b8ff7fffff09fc7fffefea4fe0440002ff000006ff0003070b3fff
fcff03f801b87ffeff00e1ffff06ef4427d8080006ff00060600010c3fbfff
fcff03e00d707fffff0afe0fff1f07052210200004ff000002ff0003181e3fff
fcff03c00b707fffff0df9fff09fdfac4201700006400002ff000373063fff
fcff03c02b707fffff13c7ff839fdf680001d0000e400003000ae7843fff
fcff030012f07fffff13dffc023f7d602401c0000c4000030010c3e03fff
fdff04fe0056f07ffeff12f8627f7d602601a0000e400003002300743fff
fdff03fe0035f0fdff12e1967f7d40a78320000cc00001001600623fff
fdff04f00025e07efeff120030f87a8007c020001e400001000400207fff
fdff04f000ade0fcfeff1211e0fc3da4a7f040001e600080819002227fff
fdff04e0006de065ffff07fc2740fd9524a7f0ff00071c60008001138320ffff
fdff04800169e070ffff07f80c01fced48a7f8ff00021e6000ff400206c320ffff
fdff0e80036bc0787fbff23d33ffea0907feff00071e6000406546fe40ffff
fdff0400035bc03bff3f07f60e23fffa0907ffff00071c600040689dff45ffff
feff13fc000257c00ffc7ff90207fbc40107e080001c70ff000373041e05ffff
feff19f80006b78037fc7ffe6007f7ac0007de60003e700001f72e0e49ffff
feff09f00005bfc03bfe1fff0cff870d6d00078f60003e700023367c0e89ffff
feff13e0000d6f80043cc7cfc08fc0400007b230003c70ff00037c400801ffff
feff19c0001b6f8013cfffcffdffcfb02007819c003e78001bfc811821ffff
feff1980001b6f801ce3ff1ffe7fdea04007b85c007c780003fd80d8c1ffff
ffff00feff00171a5f80001d3fc3e7fffd600407830e003c380013f8041001ffff
ffff00faff00179adf80000fefdfeff7fb440407cbef807e7c0087f001a1e3ffff
ffff00fcff000299df80ff000af3df8ff7fe880c07e78fc0ff7c05020ff0100203ffff
ffff00f8ff000239bf80ff0002069fc1fff00d000807f83fe23c7c001ff0004007ffff
ffff00e0ff0002733f84ff000707f7eff3ed100087ffff00f8ff7c05003ff0228f07ffff
ffff00e0ff000173bffd0003f9fff1ebff000b07fffc00fc7c067fe0271fcfffff
ffff00c0ff0001e37ffd00110327fcd8200007fe00fa3c7e007fe006302fffff
ffff04800002e37ffc0010f9ff94400007f87fc33c7eb1ffe006602fffff
ffffff000206ef7ffc00103f1fe8002007c3fe3edc7e33ffe004c06fffff
01fffeff000406c77e0080fd000f80400020069fc1c0cc7e03ff8004800fffff
01fffeff000405c77f00c0fe001001f0d0044003ff3fbff07f8fff0008040fffff
01fff8ff00040dcffe00c0fd000f3ec0004007f8fc7ff83f8fff0008001fffff
01fff0ff000419df7e00c0fd000101c0ff000b0703c1ff583ffffc0088000fffff
01fff0ff00051bdf7e0060e0fd000040ff000b06ff3f000c3ffff88088001fffff
01ffe0ff00053b9f7e08e070fc0009200001fcf017ff7ffff9ff8001003fffff
01ff80ff0005331e7e00601cfc0004400003c807ffff061fffe10080003fffff
01ff80ff0006371e7c00f00fa0fb000107d3feff06cfffc10098207fffff
01ff80ff0006773f7e00700fb8fb0001030ffeff06e6ff892088087fffff
00fefe0006773e7c00f807b9fa00003ffeff06e03e014080007fffff
00fcfe0007e63f7e00f801bbd8fc000003fdff06803e21c140007fffff
00fcff000801ee3e7c00f800bbdffc000003feff076e003c41c144007fffff
00f8ff000901ee7f7c00f8003b9b60fd000203ff80fe00051003c080007fffff
0cf8004001ee7e7c00fc003bdbeefe000b0403f827ffc00f0007c0fc00feff
0df0008001de7f7c10fe0003db7cc0fe000103c3ffff068018020fc33280feff
00e0ff000901de7f7c00ff00039b6efc00011f69fe0004021f8184c0feff
00e0ff000501de7f7c10ffff00039b7ded80ff000701e007300200013fff810071feff
0ee0020001de7f7c10ff80003b6efc20fe00031bfff00cff0003ff818001feff
0ec0060001dd7f3c10fbe0000b6ced80ff000001ffff00c0fe0003ffc03003feff
08e0060001bd7f9c10f0ff0006036ffdadc00001ffff0780c00ffe7fc187c3feff
08e0040001bd7f9c10f0ff000603ecedadb00001ffff07810061ff3fc08003feff
09e0040001bc7fcc10e020ff00032cedadb1ff0001fffeff00050fff8f000e83feff
19f80c00019dbfcc10e8fff0000cc5edb47001fffc0811ff0fe700ff03feff
18fc1c0001fdbfec30c0fffe0001cdbdb58c00fffc1037fc2ff7ff000003feff
08fe1c00019c9fec10c1ffff0da00008a595e000fff0000fc1fff9ff000007feff
08ffbc0001bedfe410d3ffff10e20007e5d4ff1dffe0827f1ffffc3e0007feff
08fff80001bedff430c3ffff10c27801fcd7ffa7ffe186fe7ffffe0f8007feff
08fffc00019ccff010c3ffff0ac00f80fdc4fff79f8005f8feffff000007feff
08fffc00039eeff81089ffff05c00600bff0fdff0008043fffed003fc3a1cffeff
0dfffc0001dee7f810987fffc0019afe400401a0047fc0ff00030fe03c0ffeff
14fffc0001cef7f810d43fffc005850fe008807c00a0fd000220000ffeff
1bfffc0001defbfc10c81fffc0047403000da078010002ffdff0082c1ffeff
0dfffc0001eefbfc10e81fffc004fcff00050da07e60001fff00030f4c02dffeff
0dfffc0001e679fc10c00fffc00930ff000505a07f002230fe000224001ffeff
1bfffe0001f77cfe10da0fffc00bd607e0fdb003800003c1fff802000ffeff
12fffe0001f7beff10cb07ffc00be35f007da2dafe00057c3fff01000ffeff
01fffeff000f739f7f80c103ffc0080731fc0da00fa0fe000401ffe1800ffeff
01fffeff001779df7fc0c241fdc009ffefff6de003fe7ffd00381fff8007feff
01fffeff00173ddf3ff0c2e9f0c009e6efc725a203ffbfff800607ffc007feff
ffffff00173cef9fff8101e0004a16df0181a001ff8fffe000c07fe003feff
ffffff00171e73dfff8150dc005996df0de9a0e3ff27fff300139ff003feff
ffff1980000f7bcfff00e83000059eff0debc2c1e073fff98019eff003feff
ffff19c0000799effe00a803fb000edf0c61008205e0fffcf00231f003ffff00cf
ffff08c00007ce67fe1cd407ffff0e0fdf0e6340025816fffe7e011df819ffff00cf
ffff08e00003e773fe83600fffff07c7ff0e69e003fffeffff043e008c7c21ffff00c7
ffff00c0ff0005f138fe01602fffff11f80fbd594007fffe7fffbf8043be027fffc7
ffff00f0ff0005fdce7e19fc4ffeff10c3fd5ec01c0fff3fff9ff021fc39bfffc3
ffff00f8ff00053e67fc0c749ffeff10f87b5ac01be7ff9fffcff801ff424fffc3
ffff00f8ff00051f71fa013c3ffeff0cfe04b084eff8ffdfffc7fe007eff4101ff83
ffff00feff0005079c7e0a1d3ffdff0ff06cc4f87cffdfffe7ff043e82447f43
ffff00fcff000503cef6181e3ffdff0ffe2c82e71e7fdffff7ff803e9c41bf43
fefffe0004e7f4001c7ffcff0ec180dfce7fcffff3ffc01e41001603
feff0080ff000371f4c01dfaff0d04df8f7feffff1ffe00f40000107
feff00c0ff00037cf4dc39faff09f2df3f30e7fff9fff80eff0001020f
feff00e0ff00031c28c079faff09fe0fbe36e7fff8fff80ffe00000f
feff00f0ff00030f885073f9ff0cc1ccbf77fffcfffc071d42039f
feff00f8ff000307884073f9ff05f0619f67fffcffff010f20ff00007f
feff00fcff000301d800f3f9ff08fe01e0e3fffc7fff0ffe0000ff
feff00feff000401d001fbf3f9ff08f03ff7fffc7fff8e7ffeff
fdfffe0003b001e3c1f9ff07fc07f7fffe7fff8efdff
fdff0080ff00031873e009f8ff068027fffe3ffff8fdff
fdff00c0ff00031cfff0f3f8ff06fe87fffe3ffff7fdff
fdff00c0ff00003cffff00f7f7ff05c1fffe3fffe7fdff
fdff00e0ff00031c3fffc7f7ff05e88ffe3ffc9ffdff
fdff00f0ff00030f1fff87f7ff05fe78bf002b7ffdff
fdff00f0ff00030783fc1ff5ff0085faff
fdff00fcff000303c0001fedff
fdff00fcfe0001c001ecff
fdff00fefe00017a2becff
fdff00fefe00003febff
fcff01e83fe9ff
%%EndData
restore
gr
gs 1225 53 552 2227 CB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
gs 1722 121 305 2327 CB
500 2333 206 (The ) 206 SB
gr
32 0 0 100 100 0 0 0 92 /Helvetica-BoldOblique /font14 ANSIFont font
gs 1722 121 305 2327 CB
706 2334 317 (Arjuna) 317 SB
gr
32 0 0 100 100 0 0 0 93 /Helvetica-Bold /font13 ANSIFont font
gs 1722 121 305 2327 CB
1023 2333 807 ( Stub Generation) 807 SB
gr
gs 1722 121 305 2445 CB
832 2451 666 (System Guide) 666 SB
gr
32 0 0 58 58 0 0 0 53 /Helvetica-Bold /font13 ANSIFont font
gs 1722 72 305 2609 CB
1008 2614 314 (Release 1.0) 314 SB
gr
2 2 302 874 B
1 F
n
2 2 302 874 B
1 F
n
1721 2 305 874 B
1 F
n
2 2 2027 874 B
1 F
n
2 2 2027 874 B
1 F
n
2 1872 302 877 B
1 F
n
2 2 302 2750 B
1 F
n
2 2 302 2750 B
1 F
n
1721 2 305 2750 B
1 F
n
2 1872 2027 877 B
1 F
n
2 2 2027 2750 B
1 F
n
2 2 2027 2750 B
1 F
n
32 0 0 58 58 0 0 0 53 /Helvetica /font12 ANSIFont font
gs 1722 78 305 2842 CB
717 2854 900 (Department of Computing Science,) 900 SB
gr
gs 1722 78 305 2917 CB
503 2929 1328 (The University Of Newcastle, Newcastle upon Tyne,) 1328 SB
gr
gs 1722 78 305 2992 CB
980 3004 374 (NE1 7RU, UK.) 374 SB
gr
2 2 302 2798 B
1 F
n
2 2 302 2798 B
1 F
n
1721 2 305 2798 B
1 F
n
2 2 2027 2798 B
1 F
n
2 2 2027 2798 B
1 F
n
2 336 302 2801 B
1 F
n
2 2 302 3138 B
1 F
n
2 2 302 3138 B
1 F
n
1721 2 305 3138 B
1 F
n
2 336 2027 2801 B
1 F
n
2 2 2027 3138 B
1 F
n
2 2 2027 3138 B
1 F
n
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
0 0 0 fC
321 305 443 (Copyright Notice:) 443 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
321 429 690 (Copyright 1990, 1991, 1992, 1993, 1994) 690 SB
321 492 1288 (Department of Computing Science, University of Newcastle upon Tyne, UK.) 1288 SB
321 597 199 (Permission ) 200 SB
521 597 44 (to ) 45 SB
566 597 78 (use, ) 79 SB
645 597 102 (copy, ) 103 SB
748 597 126 (modify ) 127 SB
875 597 74 (and ) 76 SB
951 597 173 (distribute ) 175 SB
1126 597 72 (this ) 74 SB
1200 597 154 (software ) 156 SB
1356 597 60 (for ) 62 SB
1418 597 201 (evaluation, ) 203 SB
1621 597 157 (teaching ) 159 SB
1780 597 123 (and/or ) 125 SB
1905 597 147 (research) 147 SB
321 660 162 (purposes ) 163 SB
484 660 84 (only ) 85 SB
569 660 74 (and ) 76 SB
645 660 136 (without ) 138 SB
783 660 61 (fee ) 63 SB
846 660 39 (is ) 41 SB
887 660 126 (hereby ) 128 SB
1015 660 153 (granted, ) 155 SB
1170 660 175 (providing ) 177 SB
1347 660 77 (that ) 79 SB
1426 660 72 (this ) 74 SB
1500 660 173 (copyright ) 175 SB
1675 660 74 (and ) 76 SB
1751 660 195 (permission ) 197 SB
1948 660 104 (notice) 104 SB
321 723 130 (appear ) 132 SB
453 723 53 (on ) 55 SB
508 723 56 (all ) 58 SB
566 723 119 (copies ) 121 SB
687 723 74 (and ) 76 SB
763 723 193 (supporting ) 195 SB
958 723 273 (documentation, ) 275 SB
1233 723 74 (and ) 76 SB
1309 723 77 (that ) 79 SB
1388 723 130 (similar ) 133 SB
1521 723 187 (conditions ) 190 SB
1711 723 67 (are ) 70 SB
1781 723 151 (imposed ) 154 SB
1935 723 53 (on ) 56 SB
1991 723 61 (any) 61 SB
321 786 1063 (individual or organisation to whom the program is distributed.) 1063 SB
321 891 74 (The ) 75 SB
396 891 187 (University ) 188 SB
584 891 44 (of ) 45 SB
629 891 183 (Newcastle ) 184 SB
813 891 95 (upon ) 96 SB
909 891 93 (Tyne ) 94 SB
1003 891 116 (makes ) 117 SB
1120 891 53 (no ) 54 SB
1174 891 257 (representation ) 258 SB
1432 891 107 (about ) 109 SB
1541 891 63 (the ) 65 SB
1606 891 181 (suitability ) 183 SB
1789 891 44 (of ) 46 SB
1835 891 72 (this ) 74 SB
1909 891 143 (software) 143 SB
321 954 1269 (for any purpose. It is provided "as is" without express or implied warranty.) 1269 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 75 75 0 0 0 69 /Times-Bold /font29 ANSIFont font
0 0 0 fC
321 306 567 (Table of Contents) 567 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 418 44 (1.) 44 SB
396 418 310 (Introduction) 310 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
720 418 480 (................................) 480 SB
1200 418 480 (................................) 480 SB
1680 418 330 (......................) 330 SB
2017 418 29 (1) 29 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 520 64 (1.1.) 64 SB
471 520 509 (Principles Of Stub Generation) 509 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
990 520 352 (................................) 352 SB
1342 520 352 (................................) 352 SB
1694 520 330 (..............................) 330 SB
2025 520 21 (2) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 586 64 (1.2.) 64 SB
471 586 333 (The Stub Generator) 333 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
814 586 352 (................................) 352 SB
1166 586 352 (................................) 352 SB
1518 586 352 (................................) 352 SB
1870 586 154 (..............) 154 SB
2025 586 21 (3) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 652 64 (1.3.) 64 SB
471 652 540 (Basic Use of the Stub Generator) 540 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1012 652 352 (................................) 352 SB
1364 652 352 (................................) 352 SB
1716 652 308 (............................) 308 SB
2025 652 21 (4) 21 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 735 44 (2.) 44 SB
396 735 638 (Stub Generation Specifics) 638 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
1035 735 480 (................................) 480 SB
1515 735 480 (................................) 480 SB
1995 735 15 (.) 15 SB
2017 735 29 (7) 29 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 837 64 (2.1.) 64 SB
471 837 209 (Introduction) 209 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
682 837 352 (................................) 352 SB
1034 837 352 (................................) 352 SB
1386 837 352 (................................) 352 SB
1738 837 286 (..........................) 286 SB
2025 837 21 (7) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 903 64 (2.2.) 64 SB
471 903 219 (Assumptions) 219 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
693 903 352 (................................) 352 SB
1045 903 352 (................................) 352 SB
1397 903 352 (................................) 352 SB
1749 903 275 (.........................) 275 SB
2025 903 21 (7) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 969 64 (2.3.) 64 SB
471 969 316 (Primary Operation) 316 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
792 969 352 (................................) 352 SB
1144 969 352 (................................) 352 SB
1496 969 352 (................................) 352 SB
1848 969 176 (................) 176 SB
2025 969 21 (7) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 1035 64 (2.4.) 64 SB
471 1035 491 (Files, Directives and Options) 491 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
968 1035 352 (................................) 352 SB
1320 1035 352 (................................) 352 SB
1672 1035 352 (................................) 352 SB
2025 1035 21 (8) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
396 1097 96 (2.4.1.) 96 SB
546 1097 209 (Output Files) 209 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
759 1097 352 (................................) 352 SB
1111 1097 352 (................................) 352 SB
1463 1097 352 (................................) 352 SB
1815 1097 209 (...................) 209 SB
2025 1097 21 (8) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
396 1155 96 (2.4.2.) 96 SB
546 1155 171 (Directives) 171 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
726 1155 352 (................................) 352 SB
1078 1155 352 (................................) 352 SB
1430 1155 352 (................................) 352 SB
1782 1155 242 (......................) 242 SB
2025 1155 21 (8) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
396 1213 96 (2.4.3.) 96 SB
546 1213 408 (Command Line Options) 408 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
957 1213 352 (................................) 352 SB
1309 1213 352 (................................) 352 SB
1661 1213 341 (...............................) 341 SB
2004 1213 42 (10) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 1275 64 (2.5.) 64 SB
471 1275 324 (Processing Caveats) 324 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
803 1275 352 (................................) 352 SB
1155 1275 352 (................................) 352 SB
1507 1275 352 (................................) 352 SB
1859 1275 143 (.............) 143 SB
2004 1275 42 (10) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 1341 64 (2.6.) 64 SB
471 1341 390 (Parameter Marshalling) 390 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
869 1341 352 (................................) 352 SB
1221 1341 352 (................................) 352 SB
1573 1341 352 (................................) 352 SB
1925 1341 77 (.......) 77 SB
2004 1341 42 (10) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
396 1403 96 (2.6.1.) 96 SB
546 1403 477 (Marshalling Class Instances) 477 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1023 1403 352 (................................) 352 SB
1375 1403 352 (................................) 352 SB
1727 1403 275 (.........................) 275 SB
2004 1403 42 (11) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
396 1461 96 (2.6.2.) 96 SB
546 1461 623 (Marshalling Pointers and References) 623 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1177 1461 352 (................................) 352 SB
1529 1461 352 (................................) 352 SB
1881 1461 121 (...........) 121 SB
2004 1461 42 (11) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
396 1519 96 (2.6.3.) 96 SB
546 1519 538 (Writing User Marshalling Code) 538 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1089 1519 352 (................................) 352 SB
1441 1519 352 (................................) 352 SB
1793 1519 209 (...................) 209 SB
2004 1519 42 (11) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 1581 64 (2.7.) 64 SB
471 1581 541 (Controlling Remote Invocations) 541 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1012 1581 352 (................................) 352 SB
1364 1581 352 (................................) 352 SB
1716 1581 286 (..........................) 286 SB
2004 1581 42 (12) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
396 1643 96 (2.7.1.) 96 SB
546 1643 455 (Changing RPC Parameters) 455 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1001 1643 352 (................................) 352 SB
1353 1643 352 (................................) 352 SB
1705 1643 297 (...........................) 297 SB
2004 1643 42 (12) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
396 1701 96 (2.7.2.) 96 SB
546 1701 150 (Example) 150 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
704 1701 352 (................................) 352 SB
1056 1701 352 (................................) 352 SB
1408 1701 352 (................................) 352 SB
1760 1701 242 (......................) 242 SB
2004 1701 42 (13) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 1763 64 (2.8.) 64 SB
471 1763 195 (Limitations) 195 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
671 1763 352 (................................) 352 SB
1023 1763 352 (................................) 352 SB
1375 1763 352 (................................) 352 SB
1727 1763 275 (.........................) 275 SB
2004 1763 42 (13) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 1829 64 (2.9.) 64 SB
471 1829 150 (Example) 150 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
627 1829 352 (................................) 352 SB
979 1829 352 (................................) 352 SB
1331 1829 352 (................................) 352 SB
1683 1829 319 (.............................) 319 SB
2004 1829 42 (14) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 1895 85 (2.10.) 85 SB
471 1895 295 (Template Classes) 295 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
770 1895 352 (................................) 352 SB
1122 1895 352 (................................) 352 SB
1474 1895 352 (................................) 352 SB
1826 1895 176 (................) 176 SB
2004 1895 42 (19) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 1961 85 (2.11.) 85 SB
471 1961 339 (Exception Handling) 339 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
814 1961 352 (................................) 352 SB
1166 1961 352 (................................) 352 SB
1518 1961 352 (................................) 352 SB
1870 1961 132 (............) 132 SB
2004 1961 42 (20) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 2027 85 (2.12.) 85 SB
471 2027 474 (Local and Remote Instances) 474 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
946 2027 352 (................................) 352 SB
1298 2027 352 (................................) 352 SB
1650 2027 352 (................................) 352 SB
2004 2027 42 (23) 42 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 2110 610 (Appendix A: Installation) 610 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
945 2110 480 (................................) 480 SB
1425 2110 480 (................................) 480 SB
1905 2110 75 (.....) 75 SB
1988 2110 58 (24) 58 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 2212 73 (A.1.) 73 SB
509 2212 345 (Loading the Sources) 345 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
858 2212 352 (................................) 352 SB
1210 2212 352 (................................) 352 SB
1562 2212 352 (................................) 352 SB
1914 2212 88 (........) 88 SB
2004 2212 42 (24) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 2278 73 (A.2.) 73 SB
509 2278 369 (System Configuration) 369 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
880 2278 352 (................................) 352 SB
1232 2278 352 (................................) 352 SB
1584 2278 352 (................................) 352 SB
1936 2278 66 (......) 66 SB
2004 2278 42 (25) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 2344 73 (A.3.) 73 SB
509 2344 382 (The Run-Time System) 382 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
891 2344 352 (................................) 352 SB
1243 2344 352 (................................) 352 SB
1595 2344 352 (................................) 352 SB
1947 2344 55 (.....) 55 SB
2004 2344 42 (25) 42 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 2427 905 (Appendix B: Implementation Details) 905 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
1230 2427 480 (................................) 480 SB
1710 2427 270 (..................) 270 SB
1988 2427 58 (26) 58 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 2529 59 (B.1) 59 SB
434 2529 611 (Interfacing To The Underlying RPC) 611 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1045 2529 352 (................................) 352 SB
1397 2529 352 (................................) 352 SB
1749 2529 253 (.......................) 253 SB
2004 2529 42 (26) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 2595 59 (B.2) 59 SB
434 2595 520 (Parameter Marshalling Details) 520 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
957 2595 352 (................................) 352 SB
1309 2595 352 (................................) 352 SB
1661 2595 341 (...............................) 341 SB
2004 2595 42 (27) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 2661 59 (B.3) 59 SB
434 2661 529 (Client and Server Class Details) 529 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
968 2661 352 (................................) 352 SB
1320 2661 352 (................................) 352 SB
1672 2661 330 (..............................) 330 SB
2004 2661 42 (29) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
396 2723 91 (B.3.1) 91 SB
546 2723 264 (Client Interface) 264 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
814 2723 352 (................................) 352 SB
1166 2723 352 (................................) 352 SB
1518 2723 352 (................................) 352 SB
1870 2723 132 (............) 132 SB
2004 2723 42 (30) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
396 2781 91 (B.3.2) 91 SB
546 2781 287 (Client Side Code) 287 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
836 2781 352 (................................) 352 SB
1188 2781 352 (................................) 352 SB
1540 2781 352 (................................) 352 SB
1892 2781 110 (..........) 110 SB
2004 2781 42 (31) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
396 2839 91 (B.3.3) 91 SB
546 2839 354 (Server Side Interface) 354 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
902 2839 352 (................................) 352 SB
1254 2839 352 (................................) 352 SB
1606 2839 352 (................................) 352 SB
1958 2839 44 (....) 44 SB
2004 2839 42 (31) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
396 2897 91 (B.3.4) 91 SB
546 2897 292 (Server Side Code) 292 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
847 2897 352 (................................) 352 SB
1199 2897 352 (................................) 352 SB
1551 2897 352 (................................) 352 SB
1903 2897 99 (.........) 99 SB
2004 2897 42 (32) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
359 2959 59 (B.4) 59 SB
434 2959 423 (Coping With Inheritance) 423 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
858 2959 352 (................................) 352 SB
1210 2959 352 (................................) 352 SB
1562 2959 352 (................................) 352 SB
1914 2959 88 (........) 88 SB
2004 2959 42 (32) 42 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
396 3021 91 (B.4.1) 91 SB
546 3021 604 (Multiple Inheritance Complications) 604 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1155 3021 352 (................................) 352 SB
1507 3021 352 (................................) 352 SB
1859 3021 143 (.............) 143 SB
2004 3021 42 (33) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 75 75 0 0 0 69 /Times-Bold /font29 ANSIFont font
0 0 0 fC
1066 306 240 (Preface) 240 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
321 448 87 (This ) 96 SB
417 448 137 (manual ) 147 SB
564 448 165 (describes ) 175 SB
739 448 63 (the ) 73 SB
812 448 159 (structure ) 169 SB
981 448 73 (and ) 83 SB
1064 448 66 (use ) 76 SB
1140 448 44 (of ) 54 SB
1194 448 63 (the ) 73 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1267 448 117 (Arjuna) 117 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1384 448 11 ( ) 21 SB
1405 448 80 (stub ) 90 SB
1495 448 190 (generation ) 200 SB
1695 448 136 (system. ) 146 SB
1841 448 87 (This ) 97 SB
1938 448 114 (system) 114 SB
321 511 174 (facilitates ) 176 SB
497 511 63 (the ) 65 SB
562 511 226 (development ) 228 SB
790 511 44 (of ) 46 SB
836 511 191 (distributed ) 193 SB
1029 511 87 (C++ ) 89 SB
1118 511 171 (programs ) 173 SB
1291 511 138 (directly ) 140 SB
1431 511 92 (from ) 94 SB
1525 511 145 (existing ) 148 SB
1673 511 87 (C++ ) 90 SB
1763 511 124 (header ) 127 SB
1890 511 93 (files. ) 96 SB
1986 511 66 (The) 66 SB
321 574 632 (structure of this manual is as follows:) 632 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
321 678 453 (Chapter 1. Introduction: ) 453 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
774 679 1173 (An introduction to, and brief overview of, the stub generation system.) 1173 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
321 783 160 (Chapter ) 167 SB
488 783 43 (2. ) 50 SB
538 783 93 (Stub ) 100 SB
638 783 214 (Generation ) 221 SB
859 783 182 (Specifics: ) 189 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1048 784 130 (Details ) 137 SB
1185 784 44 (of ) 51 SB
1236 784 63 (the ) 70 SB
1306 784 80 (stub ) 87 SB
1393 784 187 (generators ) 194 SB
1587 784 99 (input ) 106 SB
1693 784 73 (and ) 80 SB
1773 784 118 (output ) 126 SB
1899 784 93 (files, ) 101 SB
2000 784 52 (the) 52 SB
321 847 134 (options ) 143 SB
464 847 35 (it ) 44 SB
508 847 164 (supports, ) 173 SB
681 847 73 (and ) 82 SB
763 847 51 (its ) 60 SB
823 847 181 (parameter ) 191 SB
1014 847 214 (marshalling ) 224 SB
1238 847 215 (mechanism. ) 225 SB
1463 847 77 (The ) 87 SB
1550 847 149 (system's ) 159 SB
1709 847 193 (limitations ) 203 SB
1912 847 63 (are ) 73 SB
1985 847 67 (also) 67 SB
321 910 288 (documented here) 288 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
321 1014 465 (Appendix A. Installation: ) 465 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
786 1015 1152 (A description of how to build and install the stub generation system.) 1152 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
321 1119 184 (Appendix ) 190 SB
511 1119 51 (B. ) 57 SB
568 1119 295 (Implementation ) 301 SB
869 1119 149 (Details: ) 155 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1024 1120 223 (Descriptions ) 230 SB
1254 1120 44 (of ) 51 SB
1305 1120 63 (the ) 70 SB
1375 1120 89 (RPC ) 96 SB
1471 1120 158 (interface ) 165 SB
1636 1120 63 (the ) 70 SB
1706 1120 175 (generated ) 182 SB
1888 1120 80 (stub ) 87 SB
1975 1120 77 (code) 77 SB
321 1183 576 (uses, together with sample output.) 576 SB
321 1288 1245 (The system has been ported to various platforms, including the following:) 1245 SB
426 1393 40 (\(i\)) 40 SB
621 1393 545 (HP workstations running HPUX) 545 SB
426 1456 52 (\(ii\)) 52 SB
621 1456 694 (Suns, running SunOS 4 and 5 \(Solaris 2\)) 694 SB
426 1519 64 (\(iii\)) 64 SB
621 1519 536 (RS6000 machines running AIX) 536 SB
426 1582 60 (\(iv\)) 60 SB
621 1582 488 (Intel 486 PCs running Linux) 488 SB
321 1687 77 (The ) 78 SB
399 1687 80 (stub ) 81 SB
480 1687 190 (generation ) 191 SB
671 1687 125 (system ) 126 SB
797 1687 68 (has ) 69 SB
866 1687 89 (been ) 90 SB
956 1687 108 (tested ) 109 SB
1065 1687 86 (with ) 87 SB
1152 1687 134 (various ) 135 SB
1287 1687 87 (C++ ) 88 SB
1375 1687 176 (compilers ) 177 SB
1552 1687 184 (including: ) 185 SB
1737 1687 125 (AT&T ) 126 SB
1863 1687 121 (Cfront ) 122 SB
1985 1687 67 (\(2.1) 67 SB
321 1750 43 (to ) 75 SB
396 1750 121 (3.0.1\), ) 154 SB
550 1750 80 (g++ ) 113 SB
663 1750 78 (\(2.1 ) 111 SB
774 1750 43 (to ) 76 SB
850 1750 89 (2.5\), ) 122 SB
972 1750 83 (xlC, ) 116 SB
1088 1750 87 (HP's ) 120 SB
1208 1750 87 (C++ ) 120 SB
1328 1750 171 (compiler, ) 204 SB
1532 1750 73 (and ) 106 SB
1638 1750 101 (Sun's ) 134 SB
1772 1750 87 (C++ ) 120 SB
1892 1750 160 (compiler.) 160 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 75 75 0 0 0 69 /Times-Bold /font29 ANSIFont font
0 0 0 fC
321 411 57 (1.) 57 SB
426 411 404 (Introduction) 404 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 553 144 (Modern ) 149 SB
620 553 191 (computing ) 197 SB
817 553 73 (and ) 79 SB
896 553 203 (networking ) 209 SB
1105 553 169 (hardware ) 175 SB
1280 553 118 (makes ) 124 SB
1404 553 63 (the ) 69 SB
1473 553 150 (physical ) 156 SB
1629 553 274 (interconnection ) 280 SB
1909 553 44 (of ) 50 SB
1959 553 93 (many) 93 SB
321 616 185 (computers ) 190 SB
511 616 168 (relatively ) 173 SB
684 616 123 (simple ) 128 SB
812 616 43 (to ) 48 SB
860 616 149 (achieve. ) 154 SB
1014 616 171 (However, ) 176 SB
1190 616 243 (programming ) 248 SB
1438 616 52 (an ) 58 SB
1496 616 199 (application ) 205 SB
1701 616 43 (to ) 49 SB
1750 616 81 (take ) 87 SB
1837 616 89 (even ) 95 SB
1932 616 120 (limited) 120 SB
321 679 182 (advantage ) 192 SB
513 679 44 (of ) 54 SB
567 679 63 (the ) 73 SB
640 679 274 (interconnection ) 285 SB
925 679 39 (is ) 50 SB
975 679 75 (still ) 86 SB
1061 679 192 (considered ) 203 SB
1264 679 145 (difficult ) 156 SB
1420 679 89 (even ) 100 SB
1520 679 59 (for ) 70 SB
1590 679 63 (the ) 74 SB
1664 679 92 (most ) 103 SB
1767 679 241 (accomplished ) 252 SB
2019 679 33 (of) 33 SB
321 742 237 (programmers ) 243 SB
564 742 71 (due ) 77 SB
641 742 45 (in ) 51 SB
692 742 78 (part ) 84 SB
776 742 43 (to ) 49 SB
825 742 63 (the ) 69 SB
894 742 104 (many ) 110 SB
1004 742 181 (additional ) 187 SB
1191 742 94 (ways ) 100 SB
1291 742 45 (in ) 52 SB
1343 742 114 (which ) 121 SB
1464 742 191 (distributed ) 198 SB
1662 742 141 (systems ) 148 SB
1810 742 70 (can ) 77 SB
1887 742 67 (fail ) 74 SB
1961 742 91 (when) 91 SB
321 805 176 (compared ) 177 SB
498 805 43 (to ) 44 SB
542 805 90 (their ) 91 SB
633 805 97 (more ) 98 SB
731 805 187 (traditional ) 188 SB
919 805 194 (centralised ) 195 SB
1114 805 164 (brethren, ) 165 SB
1279 805 73 (and ) 75 SB
1354 805 43 (to ) 45 SB
1399 805 63 (the ) 65 SB
1464 805 197 (complexity ) 199 SB
1663 805 44 (of ) 46 SB
1709 805 63 (the ) 65 SB
1774 805 278 (communications) 278 SB
321 868 1074 (protocols that may be required to make use of remote resources.) 1074 SB
471 973 109 (Much ) 121 SB
592 973 134 (notable ) 146 SB
738 973 152 (research ) 164 SB
902 973 102 (effort ) 114 SB
1016 973 68 (has ) 80 SB
1096 973 226 (concentrated ) 238 SB
1334 973 95 (upon ) 107 SB
1441 973 153 (methods ) 165 SB
1606 973 50 (by ) 62 SB
1668 973 114 (which ) 126 SB
1794 973 63 (the ) 75 SB
1869 973 183 (underlying) 183 SB
321 1036 206 (distribution ) 218 SB
539 1036 44 (of ) 56 SB
595 1036 63 (the ) 75 SB
670 1036 125 (system ) 137 SB
807 1036 70 (can ) 82 SB
889 1036 49 (be ) 61 SB
950 1036 138 (hidden. ) 150 SB
1100 1036 87 (This ) 99 SB
1199 1036 138 (attempt ) 150 SB
1349 1036 43 (to ) 56 SB
1405 1036 138 (achieve ) 151 SB
1556 1036 93 (what ) 106 SB
1662 1036 39 (is ) 52 SB
1714 1036 128 (termed ) 141 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1855 1036 197 (distribution) 197 SB
321 1099 222 (transparency) 222 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
543 1099 11 ( ) 16 SB
559 1099 184 (effectively ) 189 SB
748 1099 138 (reduces ) 143 SB
891 1099 63 (the ) 68 SB
959 1099 128 (burden ) 133 SB
1092 1099 53 (on ) 58 SB
1150 1099 63 (the ) 68 SB
1218 1099 221 (programmer ) 226 SB
1444 1099 43 (to ) 48 SB
1492 1099 76 (that ) 81 SB
1573 1099 156 (involved ) 161 SB
1734 1099 45 (in ) 50 SB
1784 1099 243 (programming ) 249 SB
2033 1099 19 (a) 19 SB
321 1162 97 (more ) 99 SB
420 1162 187 (traditional ) 189 SB
609 1162 194 (centralised ) 196 SB
805 1162 210 (application. ) 212 SB
1017 1162 65 (All ) 68 SB
1085 1162 44 (of ) 47 SB
1132 1162 63 (the ) 66 SB
1198 1162 181 (additional ) 184 SB
1382 1162 197 (complexity ) 200 SB
1582 1162 111 (added ) 114 SB
1696 1162 50 (by ) 53 SB
1749 1162 63 (the ) 66 SB
1815 1162 206 (distribution ) 209 SB
2024 1162 28 (is) 28 SB
321 1225 146 (handled ) 147 SB
468 1225 50 (by ) 51 SB
519 1225 52 (an ) 53 SB
572 1225 194 (underlying ) 196 SB
768 1225 137 (support ) 139 SB
907 1225 136 (system. ) 138 SB
1045 1225 171 (However, ) 173 SB
1218 1225 73 (this ) 75 SB
1293 1225 227 (transparency ) 229 SB
1522 1225 68 (has ) 70 SB
1592 1225 167 (generally ) 169 SB
1761 1225 89 (been ) 91 SB
1852 1225 159 (achieved ) 161 SB
2013 1225 39 (by) 39 SB
321 1288 63 (the ) 67 SB
388 1288 147 (creation ) 151 SB
539 1288 44 (of ) 48 SB
587 1288 139 (entirely ) 143 SB
730 1288 80 (new ) 84 SB
814 1288 243 (programming ) 247 SB
1061 1288 180 (languages ) 184 SB
1245 1288 46 (or ) 50 SB
1295 1288 152 (systems. ) 156 SB
1451 1288 256 (Unfortunately, ) 260 SB
1711 1288 75 (real ) 79 SB
1790 1288 108 (world ) 112 SB
1902 1288 150 (demands) 150 SB
321 1351 1619 (insist that all applications \(distributed or not\) need to be programmed in an existing, preferably ) 1620 SB
1941 1351 111 (widely) 111 SB
321 1414 1258 (available, language \(alternatively, the language must permit existing code ) 1259 SB
1580 1414 43 (to ) 44 SB
1624 1414 49 (be ) 50 SB
1674 1414 181 (integrated ) 182 SB
1856 1414 120 (within ) 121 SB
1977 1414 35 (it ) 36 SB
2013 1414 39 (by) 39 SB
321 1477 842 (some means, for example as external procedures\).) 842 SB
471 1582 215 (Regrettably, ) 222 SB
693 1582 92 (most ) 99 SB
792 1582 122 (widely ) 129 SB
921 1582 162 (available ) 169 SB
1090 1582 180 (languages ) 187 SB
1277 1582 90 (\(that ) 98 SB
1375 1582 50 (is, ) 58 SB
1433 1582 162 (available ) 170 SB
1603 1582 45 (in ) 53 SB
1656 1582 63 (the ) 71 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1727 1582 199 (commercial) 199 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1926 1582 11 ( ) 19 SB
1945 1582 107 (arena\)) 107 SB
321 1645 278 (have little or no ) 279 SB
600 1645 107 (direct ) 108 SB
708 1645 137 (support ) 138 SB
846 1645 59 (for ) 60 SB
906 1645 243 (programming ) 244 SB
1150 1645 30 (a ) 31 SB
1181 1645 191 (distributed ) 192 SB
1373 1645 210 (application. ) 211 SB
1584 1645 77 (The ) 78 SB
1662 1645 145 (primary ) 146 SB
1808 1645 121 (reason ) 122 SB
1930 1645 59 (for ) 60 SB
1990 1645 62 (this) 62 SB
321 1708 138 (focus is ) 139 SB
460 1708 76 (that ) 77 SB
537 1708 145 (existing ) 146 SB
683 1708 180 (languages ) 181 SB
864 1708 90 (have ) 91 SB
955 1708 89 (been ) 90 SB
1045 1708 180 (developed ) 181 SB
1226 1708 139 (without ) 140 SB
1366 1708 63 (the ) 64 SB
1430 1708 161 (demands ) 162 SB
1592 1708 44 (of ) 45 SB
1637 1708 206 (distribution ) 207 SB
1844 1708 45 (in ) 46 SB
1890 1708 99 (mind ) 100 SB
1990 1708 62 (and) 62 SB
321 1771 82 (thus ) 86 SB
407 1771 134 (possess ) 138 SB
545 1771 71 (one ) 75 SB
620 1771 46 (or ) 50 SB
670 1771 97 (more ) 101 SB
771 1771 143 (features ) 147 SB
918 1771 76 (that ) 80 SB
998 1771 63 (are ) 67 SB
1065 1771 108 (either ) 112 SB
1177 1771 202 (impossible, ) 207 SB
1384 1771 46 (or ) 51 SB
1435 1771 42 (at ) 47 SB
1482 1771 88 (least ) 93 SB
1575 1771 213 (impractical, ) 218 SB
1793 1771 43 (to ) 48 SB
1841 1771 137 (support ) 142 SB
1983 1771 45 (in ) 50 SB
2033 1771 19 (a) 19 SB
321 1834 191 (distributed ) 193 SB
514 1834 173 (execution ) 175 SB
689 1834 236 (environment. ) 238 SB
927 1834 41 (A ) 43 SB
970 1834 122 (classic ) 124 SB
1094 1834 153 (example ) 155 SB
1249 1834 44 (of ) 46 SB
1295 1834 88 (such ) 90 SB
1385 1834 30 (a ) 32 SB
1417 1834 127 (feature ) 129 SB
1546 1834 104 (being ) 106 SB
1652 1834 63 (the ) 65 SB
1717 1834 203 (assumption ) 205 SB
1922 1834 76 (that ) 78 SB
2000 1834 52 (the) 52 SB
321 1897 914 (application will execute within a single address space.) 914 SB
471 2002 107 (Thus, ) 113 SB
584 2002 160 (although ) 166 SB
750 2002 69 (full ) 75 SB
825 2002 206 (distribution ) 212 SB
1037 2002 227 (transparency ) 233 SB
1270 2002 39 (is ) 45 SB
1315 2002 155 (typically ) 161 SB
1476 2002 191 (impossible ) 197 SB
1673 2002 43 (to ) 49 SB
1722 2002 138 (achieve ) 144 SB
1866 2002 45 (in ) 52 SB
1918 2002 134 (existing) 134 SB
321 2065 191 (languages, ) 204 SB
525 2065 30 (a ) 43 SB
568 2065 121 (partial ) 134 SB
702 2065 92 (form ) 105 SB
807 2065 44 (of ) 57 SB
864 2065 227 (transparency ) 240 SB
1104 2065 39 (is ) 52 SB
1156 2065 85 (both ) 98 SB
1254 2065 189 (achievable ) 202 SB
1456 2065 73 (and ) 86 SB
1542 2065 119 (highly ) 133 SB
1675 2065 173 (desirable. ) 187 SB
1862 2065 190 (Computing) 190 SB
321 2128 172 (platforms ) 182 SB
503 2128 73 (and ) 83 SB
586 2128 227 (architectures ) 237 SB
823 2128 76 (that ) 86 SB
909 2128 137 (support ) 147 SB
1056 2128 73 (this ) 83 SB
1139 2128 196 (philosophy ) 206 SB
1345 2128 63 (are ) 74 SB
1419 2128 171 (emerging ) 182 SB
1601 2128 92 (from ) 103 SB
1704 2128 129 (several ) 140 SB
1844 2128 135 (sources ) 146 SB
1990 2128 62 (\(for) 62 SB
321 2191 165 (example: ) 165 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
486 2191 652 (Integrated Systems Architecture \(ISA\),) 652 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1138 2191 11 ( ) 11 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1149 2191 452 (Open Network Computing ) 453 SB
1602 2191 112 (\(ONC\)) 112 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1714 2191 22 (, ) 23 SB
1737 2191 63 (the ) 64 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1801 2191 102 (Open ) 103 SB
1904 2191 148 (Software) 148 SB
321 2254 207 (Foundation ) 215 SB
536 2254 203 (Distributed ) 211 SB
747 2254 198 (Computing ) 206 SB
953 2254 229 (Environment ) 237 SB
1190 2254 198 (\(OSF/DCE\)) 198 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1388 2254 22 (, ) 30 SB
1418 2254 73 (and ) 81 SB
1499 2254 63 (the ) 71 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1570 2254 124 (Object ) 133 SB
1703 2254 231 (Management ) 240 SB
1943 2254 109 (Group) 109 SB
321 2317 944 (Common Object Request Broker Architecture \(CORBA\)) 944 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1265 2317 25 (\).) 25 SB
471 2422 114 (While ) 116 SB
587 2422 167 (generally ) 169 SB
756 2422 180 (welcomed ) 182 SB
938 2422 50 (by ) 52 SB
990 2422 108 (users, ) 110 SB
1100 2422 97 (these ) 100 SB
1200 2422 141 (systems ) 144 SB
1344 2422 63 (are ) 66 SB
1410 2422 65 (not ) 68 SB
1478 2422 139 (without ) 142 SB
1620 2422 90 (their ) 93 SB
1713 2422 111 (flaws. ) 114 SB
1827 2422 47 (In ) 50 SB
1877 2422 175 (particular,) 175 SB
321 2485 1091 (while they provide high degrees of transparency to the end user, ) 1092 SB
1413 2485 63 (the ) 64 SB
1477 2485 91 (level ) 92 SB
1569 2485 44 (of ) 45 SB
1614 2485 227 (transparency ) 228 SB
1842 2485 82 (they ) 83 SB
1925 2485 127 (provide) 127 SB
321 2548 43 (to ) 45 SB
366 2548 63 (the ) 65 SB
431 2548 221 (programmer ) 223 SB
654 2548 39 (is ) 41 SB
695 2548 155 (typically ) 157 SB
852 2548 95 (quite ) 97 SB
949 2548 142 (limited, ) 144 SB
1093 2548 96 (often ) 98 SB
1191 2548 168 (requiring ) 170 SB
1361 2548 223 (substantially ) 225 SB
1586 2548 155 (different ) 157 SB
1743 2548 88 (code ) 91 SB
1834 2548 43 (to ) 46 SB
1880 2548 49 (be ) 52 SB
1932 2548 120 (written) 120 SB
321 2611 583 (to that which might be written for ) 584 SB
905 2611 30 (a ) 31 SB
936 2611 269 (non-distributed ) 270 SB
1206 2611 210 (application. ) 211 SB
1417 2611 77 (The ) 78 SB
1495 2611 80 (stub ) 81 SB
1576 2611 190 (generation ) 191 SB
1767 2611 125 (system ) 126 SB
1893 2611 159 (described) 159 SB
321 2674 1685 (here attempts to overcome some of the transparency problems faced by the application programmer.) 1685 SB
471 2779 77 (The ) 81 SB
552 2779 125 (system ) 129 SB
681 2779 170 (described ) 175 SB
856 2779 84 (here ) 89 SB
945 2779 39 (is ) 44 SB
989 2779 147 (targeted ) 152 SB
1141 2779 108 (solely ) 113 SB
1254 2779 42 (at ) 47 SB
1301 2779 63 (the ) 68 SB
1369 2779 164 (language ) 169 SB
1538 2779 98 (C++. ) 103 SB
1641 2779 77 (The ) 82 SB
1723 2779 119 (choice ) 124 SB
1847 2779 44 (of ) 49 SB
1896 2779 87 (C++ ) 92 SB
1988 2779 64 (was) 64 SB
321 2842 178 (motivated ) 182 SB
503 2842 50 (by ) 54 SB
557 2842 51 (its ) 55 SB
612 2842 66 (use ) 70 SB
682 2842 45 (in ) 49 SB
731 2842 63 (the ) 67 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
798 2842 117 (Arjuna) 117 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
915 2842 11 ( ) 15 SB
930 2842 136 (system, ) 140 SB
1070 2842 164 (however, ) 168 SB
1238 2842 63 (the ) 67 SB
1305 2842 80 (stub ) 84 SB
1389 2842 171 (generator ) 175 SB
1564 2842 75 (was ) 79 SB
1643 2842 207 (deliberately ) 212 SB
1855 2842 160 (designed ) 165 SB
2020 2842 32 (to) 32 SB
321 2905 134 (operate ) 136 SB
457 2905 45 (in ) 47 SB
504 2905 30 (a ) 32 SB
536 2905 192 (standalone ) 194 SB
730 2905 135 (fashion ) 137 SB
867 2905 73 (and ) 75 SB
942 2905 43 (to ) 45 SB
987 2905 170 (distribute ) 172 SB
1159 2905 233 (transparently ) 235 SB
1394 2905 46 (as ) 48 SB
1442 2905 105 (much ) 108 SB
1550 2905 44 (of ) 47 SB
1597 2905 87 (C++ ) 90 SB
1687 2905 46 (as ) 49 SB
1736 2905 75 (was ) 78 SB
1814 2905 146 (possible ) 149 SB
1963 2905 89 (\(with) 89 SB
321 2968 98 (some ) 106 SB
427 2968 199 (restrictions ) 207 SB
634 2968 76 (that ) 84 SB
718 2968 76 (will ) 84 SB
802 2968 49 (be ) 57 SB
859 2968 170 (described ) 179 SB
1038 2968 45 (in ) 54 SB
1092 2968 30 (a ) 39 SB
1131 2968 87 (later ) 96 SB
1227 2968 154 (section\). ) 163 SB
1390 2968 107 (Thus, ) 116 SB
1506 2968 63 (the ) 72 SB
1578 2968 99 (input ) 108 SB
1686 2968 164 (language ) 173 SB
1859 2968 43 (to ) 52 SB
1911 2968 63 (the ) 72 SB
1983 2968 69 (stub) 69 SB
321 3031 171 (generator ) 176 SB
497 3031 39 (is ) 44 SB
541 3031 87 (C++ ) 92 SB
633 3031 73 (and ) 79 SB
712 3031 35 (it ) 41 SB
753 3031 161 (produces ) 167 SB
920 3031 87 (C++ ) 93 SB
1013 3031 46 (as ) 52 SB
1065 3031 51 (its ) 57 SB
1122 3031 118 (output ) 124 SB
1246 3031 87 (This ) 93 SB
1339 3031 68 (has ) 74 SB
1413 3031 98 (some ) 104 SB
1517 3031 198 (advantages ) 204 SB
1721 3031 73 (and ) 79 SB
1800 3031 119 (allows ) 125 SB
1925 3031 63 (the ) 69 SB
1994 3031 58 (full) 58 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2031 3270 21 (1) 21 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
321 276 114 (power ) 126 SB
447 276 44 (of ) 56 SB
503 276 63 (the ) 75 SB
578 276 164 (language ) 177 SB
755 276 43 (to ) 56 SB
811 276 49 (be ) 62 SB
873 276 87 (used ) 100 SB
973 276 45 (in ) 58 SB
1031 276 63 (the ) 76 SB
1107 276 175 (generated ) 188 SB
1295 276 80 (stub ) 93 SB
1388 276 88 (code ) 101 SB
1489 276 136 (leading ) 149 SB
1638 276 43 (to ) 56 SB
1694 276 133 (elegant ) 146 SB
1840 276 73 (and ) 86 SB
1926 276 126 (flexible) 126 SB
321 339 514 (marshalling code for example.) 514 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 472 88 (1.1.) 88 SB
426 472 749 (Principles Of Stub Generation) 749 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 596 802 (Within a distributed environment, applications ) 803 SB
1274 596 82 (may ) 83 SB
1357 596 116 (access ) 117 SB
1474 596 144 (services ) 145 SB
1619 596 76 (that ) 77 SB
1696 596 63 (are ) 64 SB
1760 596 108 (either ) 109 SB
1869 596 92 (local ) 93 SB
1962 596 54 (to, ) 55 SB
2017 596 35 (or) 35 SB
321 659 127 (remote ) 130 SB
451 659 103 (from, ) 106 SB
557 659 63 (the ) 66 SB
623 659 92 (node ) 95 SB
718 659 95 (upon ) 98 SB
816 659 114 (which ) 117 SB
933 659 63 (the ) 66 SB
999 659 199 (application ) 202 SB
1201 659 39 (is ) 42 SB
1243 659 163 (currently ) 166 SB
1409 659 185 (executing. ) 188 SB
1597 659 113 (Given ) 117 SB
1714 659 76 (that ) 80 SB
1794 659 63 (the ) 67 SB
1861 659 128 (service ) 132 SB
1993 659 59 (can) 59 SB
321 722 84 (only ) 94 SB
415 722 49 (be ) 59 SB
474 722 155 (accessed ) 166 SB
640 722 50 (by ) 61 SB
701 722 161 (invoking ) 172 SB
873 722 71 (one ) 82 SB
955 722 44 (of ) 55 SB
1010 722 51 (its ) 62 SB
1072 722 197 (operations, ) 208 SB
1280 722 85 (then ) 96 SB
1376 722 116 (access ) 127 SB
1503 722 43 (to ) 54 SB
1557 722 30 (a ) 41 SB
1598 722 127 (remote ) 138 SB
1736 722 128 (service ) 139 SB
1875 722 147 (requires ) 158 SB
2033 722 19 (a) 19 SB
321 785 204 (mechanism ) 219 SB
540 785 76 (that ) 91 SB
631 785 153 (supports ) 168 SB
799 785 63 (the ) 78 SB
877 785 127 (remote ) 143 SB
1020 785 173 (execution ) 189 SB
1209 785 44 (of ) 60 SB
1269 785 52 (an ) 68 SB
1337 785 181 (operation. ) 197 SB
1534 785 87 (This ) 103 SB
1637 785 184 (effectively ) 200 SB
1837 785 147 (requires ) 163 SB
2000 785 52 (the) 52 SB
321 848 277 (implementation ) 280 SB
601 848 44 (of ) 47 SB
648 848 30 (a ) 33 SB
681 848 289 (communications ) 292 SB
973 848 149 (protocol ) 152 SB
1125 848 201 (responsible ) 204 SB
1329 848 59 (for ) 62 SB
1391 848 63 (the ) 66 SB
1457 848 131 (orderly ) 134 SB
1591 848 141 (transfer ) 144 SB
1735 848 44 (of ) 47 SB
1782 848 130 (control ) 133 SB
1915 848 137 (between) 137 SB
321 911 707 (the invoker of the operation \(the caller or ) 707 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1028 911 95 (client) 95 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1123 911 323 (\) and some remote ) 324 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1447 911 105 (server) 105 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1552 911 11 ( ) 12 SB
1564 911 76 (that ) 77 SB
1641 911 76 (will ) 77 SB
1718 911 143 (actually ) 144 SB
1862 911 137 (execute ) 138 SB
2000 911 52 (the) 52 SB
321 974 181 (operation. ) 189 SB
510 974 139 (Besides ) 147 SB
657 974 63 (the ) 71 SB
728 974 141 (transfer ) 149 SB
877 974 44 (of ) 52 SB
929 974 130 (control ) 138 SB
1067 974 30 (a ) 39 SB
1106 974 119 (means ) 128 SB
1234 974 93 (must ) 102 SB
1336 974 78 (also ) 87 SB
1423 974 49 (be ) 58 SB
1481 974 159 (provided ) 168 SB
1649 974 59 (for ) 68 SB
1717 974 63 (the ) 72 SB
1789 974 141 (transfer ) 150 SB
1939 974 44 (of ) 53 SB
1992 974 60 (any) 60 SB
321 1037 870 (arguments required by the called operation and the ) 871 SB
1192 1037 114 (return ) 115 SB
1307 1037 43 (to ) 44 SB
1351 1037 63 (the ) 64 SB
1415 1037 105 (client ) 106 SB
1521 1037 44 (of ) 45 SB
1566 1037 71 (any ) 72 SB
1638 1037 132 (results. ) 133 SB
1771 1037 87 (This ) 88 SB
1859 1037 193 (mechanism) 193 SB
321 1100 39 (is ) 40 SB
361 1100 128 (termed ) 129 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
490 1100 128 (remote ) 129 SB
619 1100 184 (procedure ) 185 SB
804 1100 75 (call ) 77 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
881 1100 117 (\(RPC\) ) 119 SB
1000 1100 73 (and ) 75 SB
1075 1100 182 (represents ) 184 SB
1259 1100 30 (a ) 32 SB
1291 1100 131 (natural ) 133 SB
1424 1100 172 (extension ) 174 SB
1598 1100 44 (of ) 46 SB
1644 1100 63 (the ) 65 SB
1709 1100 187 (traditional ) 189 SB
1898 1100 119 (notion ) 121 SB
2019 1100 33 (of) 33 SB
321 1163 772 (procedure call to the distributed environment.) 772 SB
471 1268 1528 (Conceptually, a distributed application consists of several distinct fragments split between ) 1529 SB
2000 1268 52 (the) 52 SB
321 1331 144 (original ) 148 SB
469 1331 127 (calling ) 131 SB
600 1331 135 (process ) 139 SB
739 1331 133 (\(client\) ) 137 SB
876 1331 73 (and ) 77 SB
953 1331 30 (a ) 34 SB
987 1331 127 (remote ) 131 SB
1118 1331 113 (server ) 117 SB
1235 1331 135 (process ) 140 SB
1375 1331 201 (responsible ) 206 SB
1581 1331 59 (for ) 64 SB
1645 1331 174 (executing ) 179 SB
1824 1331 63 (the ) 68 SB
1892 1331 160 (requested) 160 SB
321 1394 186 (operations ) 193 SB
514 1394 134 (locally. ) 141 SB
655 1394 111 (These ) 118 SB
773 1394 180 (fragments ) 187 SB
960 1394 63 (are ) 70 SB
1030 1394 125 (known ) 132 SB
1162 1394 58 (as: ) 65 SB
1227 1394 63 (the ) 71 SB
1298 1394 116 (client, ) 124 SB
1422 1394 63 (the ) 71 SB
1493 1394 105 (client ) 113 SB
1606 1394 107 (stubs, ) 115 SB
1721 1394 89 (RPC ) 97 SB
1818 1394 174 (transport, ) 182 SB
2000 1394 52 (the) 52 SB
321 1457 113 (server ) 116 SB
437 1457 107 (stubs, ) 110 SB
547 1457 73 (and ) 76 SB
623 1457 63 (the ) 66 SB
689 1457 124 (server. ) 127 SB
816 1457 92 (Both ) 95 SB
911 1457 63 (the ) 66 SB
977 1457 105 (client ) 108 SB
1085 1457 73 (and ) 76 SB
1161 1457 113 (server ) 116 SB
1277 1457 63 (are ) 66 SB
1343 1457 155 (typically ) 158 SB
1501 1457 160 (designed ) 164 SB
1665 1457 73 (and ) 77 SB
1742 1457 231 (implemented ) 235 SB
1977 1457 46 (as ) 50 SB
2027 1457 25 (if) 25 SB
321 1520 63 (the ) 64 SB
385 1520 199 (application ) 201 SB
586 1520 75 (was ) 77 SB
663 1520 43 (to ) 45 SB
708 1520 137 (execute ) 139 SB
847 1520 45 (in ) 47 SB
894 1520 30 (a ) 32 SB
926 1520 187 (traditional ) 189 SB
1115 1520 194 (centralised ) 196 SB
1311 1520 236 (environment. ) 238 SB
1549 1520 37 (It ) 39 SB
1588 1520 39 (is ) 41 SB
1629 1520 63 (the ) 65 SB
1694 1520 151 (function ) 153 SB
1847 1520 44 (of ) 46 SB
1893 1520 63 (the ) 65 SB
1958 1520 94 (client) 94 SB
321 1583 73 (and ) 75 SB
396 1583 113 (server ) 115 SB
511 1583 96 (stubs ) 98 SB
609 1583 43 (to ) 45 SB
654 1583 84 (hide ) 86 SB
740 1583 63 (the ) 65 SB
805 1583 194 (underlying ) 196 SB
1001 1583 206 (distribution ) 208 SB
1209 1583 43 (to ) 45 SB
1254 1583 46 (as ) 48 SB
1302 1583 96 (great ) 98 SB
1400 1583 30 (a ) 32 SB
1432 1583 122 (degree ) 124 SB
1556 1583 46 (as ) 48 SB
1604 1583 157 (possible. ) 159 SB
1763 1583 104 (Since ) 107 SB
1870 1583 182 (production) 182 SB
321 1646 44 (of ) 50 SB
371 1646 97 (these ) 104 SB
475 1646 96 (stubs ) 103 SB
578 1646 70 (can ) 77 SB
655 1646 49 (be ) 56 SB
711 1646 131 (tedious ) 138 SB
849 1646 73 (and ) 80 SB
929 1646 215 (complicated ) 222 SB
1151 1646 63 (the ) 70 SB
1221 1646 135 (process ) 142 SB
1363 1646 70 (can ) 77 SB
1440 1646 49 (be ) 56 SB
1496 1646 186 (automated ) 193 SB
1689 1646 50 (by ) 57 SB
1746 1646 63 (the ) 70 SB
1816 1646 66 (use ) 73 SB
1889 1646 44 (of ) 51 SB
1940 1646 30 (a ) 37 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1977 1646 75 (Stub) 75 SB
321 1709 175 (Generator) 175 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
496 1709 22 (. ) 28 SB
524 1709 87 (This ) 93 SB
617 1709 116 (parses ) 122 SB
739 1709 30 (a ) 36 SB
775 1709 198 (description ) 204 SB
979 1709 44 (of ) 50 SB
1029 1709 63 (the ) 69 SB
1098 1709 158 (interface ) 164 SB
1262 1709 148 (between ) 155 SB
1417 1709 63 (the ) 70 SB
1487 1709 105 (client ) 112 SB
1599 1709 73 (and ) 80 SB
1679 1709 63 (the ) 70 SB
1749 1709 124 (server, ) 131 SB
1880 1709 131 (written ) 138 SB
2018 1709 34 (in) 34 SB
321 1772 98 (some ) 102 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
423 1772 164 (Interface ) 168 SB
591 1772 183 (Definition ) 187 SB
778 1772 168 (Language) 168 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
946 1772 22 (, ) 26 SB
972 1772 73 (and ) 77 SB
1049 1772 161 (produces ) 165 SB
1214 1772 63 (the ) 67 SB
1281 1772 152 (required ) 156 SB
1437 1772 80 (stub ) 84 SB
1521 1772 88 (code ) 92 SB
1613 1772 45 (in ) 50 SB
1663 1772 30 (a ) 35 SB
1698 1772 164 (language ) 169 SB
1867 1772 185 (compatible) 185 SB
321 1835 705 (with both. In many systems this interface ) 706 SB
1027 1835 198 (description ) 199 SB
1226 1835 164 (language ) 165 SB
1391 1835 68 (has ) 69 SB
1460 1835 30 (a ) 31 SB
1491 1835 155 (different ) 156 SB
1647 1835 120 (syntax ) 121 SB
1768 1835 73 (and ) 74 SB
1842 1835 177 (semantics ) 178 SB
2020 1835 32 (to) 32 SB
321 1898 63 (the ) 68 SB
389 1898 164 (language ) 169 SB
558 1898 45 (in ) 50 SB
608 1898 114 (which ) 119 SB
727 1898 63 (the ) 68 SB
795 1898 199 (application ) 204 SB
999 1898 39 (is ) 44 SB
1043 1898 238 (programmed. ) 243 SB
1286 1898 87 (This ) 93 SB
1379 1898 147 (requires ) 153 SB
1532 1898 76 (that ) 82 SB
1614 1898 63 (the ) 69 SB
1683 1898 221 (programmer ) 227 SB
1910 1898 84 (map ) 90 SB
2000 1898 52 (the) 52 SB
321 1961 592 (original interface description from ) 593 SB
914 1961 63 (the ) 64 SB
978 1961 81 (host ) 82 SB
1060 1961 164 (language ) 165 SB
1225 1961 43 (to ) 44 SB
1269 1961 63 (the ) 64 SB
1333 1961 80 (IDL ) 81 SB
1414 1961 115 (before ) 116 SB
1530 1961 63 (the ) 64 SB
1594 1961 80 (stub ) 81 SB
1675 1961 171 (generator ) 172 SB
1847 1961 70 (can ) 71 SB
1918 1961 134 (operate.) 134 SB
321 2024 171 (However, ) 172 SB
493 2024 63 (the ) 64 SB
557 2024 80 (IDL ) 81 SB
638 2024 39 (is ) 40 SB
678 2024 85 (then ) 86 SB
764 2024 243 (programming ) 244 SB
1008 2024 164 (language ) 166 SB
1174 2024 218 (independent ) 220 SB
1394 2024 114 (which ) 116 SB
1510 2024 70 (can ) 72 SB
1582 2024 49 (be ) 51 SB
1633 2024 119 (highly ) 121 SB
1754 2024 250 (advantageous. ) 252 SB
2006 2024 46 (By) 46 SB
321 2087 78 (way ) 87 SB
408 2087 44 (of ) 53 SB
461 2087 207 (comparison ) 216 SB
677 2087 63 (the ) 72 SB
749 2087 80 (stub ) 89 SB
838 2087 190 (generation ) 199 SB
1037 2087 125 (system ) 134 SB
1171 2087 170 (described ) 179 SB
1350 2087 84 (here ) 93 SB
1443 2087 39 (is ) 48 SB
1491 2087 160 (designed ) 169 SB
1660 2087 43 (to ) 52 SB
1712 2087 96 (work ) 105 SB
1817 2087 86 (with ) 95 SB
1912 2087 30 (a ) 39 SB
1951 2087 101 (single) 101 SB
321 2150 164 (language ) 168 SB
489 2150 73 (and ) 77 SB
566 2150 82 (thus ) 86 SB
652 2150 147 (requires ) 151 SB
803 2150 53 (no ) 57 SB
860 2150 149 (separate ) 154 SB
1014 2150 91 (IDL. ) 96 SB
1110 2150 133 (Instead ) 138 SB
1248 2150 35 (it ) 40 SB
1288 2150 169 (processes ) 174 SB
1462 2150 63 (the ) 68 SB
1530 2150 144 (original ) 149 SB
1679 2150 87 (C++ ) 92 SB
1771 2150 124 (header ) 129 SB
1900 2150 82 (files ) 87 SB
1987 2150 65 (that) 65 SB
321 2213 839 (would normally be read by the standard compiler.) 839 SB
471 2318 98 ( Stub ) 101 SB
572 2318 190 (generation ) 193 SB
765 2318 39 (is ) 42 SB
807 2318 65 (not ) 68 SB
875 2318 139 (without ) 142 SB
1017 2318 51 (its ) 54 SB
1071 2318 166 (problems ) 169 SB
1240 2318 76 (that ) 79 SB
1319 2318 194 (principally ) 198 SB
1517 2318 90 (stem ) 94 SB
1611 2318 92 (from ) 96 SB
1707 2318 63 (the ) 67 SB
1774 2318 81 (lack ) 85 SB
1859 2318 44 (of ) 48 SB
1907 2318 30 (a ) 34 SB
1941 2318 111 (shared) 111 SB
321 2381 240 (address space ) 241 SB
562 2381 148 (between ) 149 SB
711 2381 63 (the ) 64 SB
775 2381 105 (caller ) 106 SB
881 2381 73 (and ) 74 SB
955 2381 63 (the ) 64 SB
1019 2381 112 (actual ) 113 SB
1132 2381 128 (service ) 129 SB
1261 2381 104 (being ) 105 SB
1366 2381 232 (manipulated. ) 233 SB
1599 2381 161 (Potential ) 162 SB
1761 2381 166 (problems ) 167 SB
1928 2381 124 (include) 124 SB
321 2444 144 (those of:) 144 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
471 2549 159 (Machine ) 167 SB
638 2549 240 (Heterogeneity) 240 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
878 2549 22 (. ) 31 SB
909 2549 164 (Different ) 173 SB
1082 2549 171 (machines ) 180 SB
1262 2549 82 (may ) 91 SB
1353 2549 90 (have ) 99 SB
1452 2549 155 (different ) 164 SB
1616 2549 118 (binary ) 127 SB
1743 2549 267 (representations ) 276 SB
2019 2549 33 (of) 33 SB
471 2612 382 (various primitive data ) 383 SB
854 2612 108 (types. ) 109 SB
963 2612 69 (For ) 70 SB
1033 2612 164 (example, ) 165 SB
1198 2612 155 (different ) 156 SB
1354 2612 80 (byte ) 81 SB
1435 2612 171 (orderings ) 172 SB
1607 2612 73 (and ) 74 SB
1681 2612 142 (floating ) 143 SB
1824 2612 98 (point ) 99 SB
1923 2612 129 (number) 129 SB
471 2675 279 (representations; ) 280 SB
751 2675 155 (different ) 156 SB
907 2675 184 (arithmetic ) 185 SB
1092 2675 165 (precision ) 166 SB
1258 2675 67 (\(16 ) 68 SB
1326 2675 58 (vs. ) 59 SB
1385 2675 53 (32 ) 54 SB
1439 2675 81 (bit\); ) 83 SB
1522 2675 143 (unusual ) 145 SB
1667 2675 131 (pointer ) 133 SB
1800 2675 252 (representation;) 252 SB
471 2738 70 (etc. ) 73 SB
544 2738 77 (The ) 80 SB
624 2738 203 (commonest ) 207 SB
831 2738 146 (solution ) 150 SB
981 2738 43 (to ) 47 SB
1028 2738 73 (this ) 77 SB
1105 2738 150 (problem ) 154 SB
1259 2738 147 (requires ) 151 SB
1410 2738 63 (the ) 67 SB
1477 2738 105 (client ) 109 SB
1586 2738 73 (and ) 77 SB
1663 2738 113 (server ) 117 SB
1780 2738 96 (stubs ) 100 SB
1880 2738 43 (to ) 47 SB
1927 2738 125 (convert) 125 SB
471 2801 63 (the ) 79 SB
550 2801 114 (native ) 130 SB
680 2801 123 (format ) 139 SB
819 2801 43 (to ) 59 SB
878 2801 98 (some ) 114 SB
992 2801 157 (common ) 173 SB
1165 2801 123 (format ) 139 SB
1304 2801 73 (\(for ) 89 SB
1393 2801 164 (example, ) 181 SB
1574 2801 126 (ASN.1 ) 143 SB
1717 2801 46 (or ) 63 SB
1780 2801 112 (XDR\) ) 129 SB
1909 2801 94 (prior ) 111 SB
2020 2801 32 (to) 32 SB
471 2864 237 (transmission. ) 238 SB
709 2864 95 (Such ) 96 SB
805 2864 194 (conversion ) 195 SB
1000 2864 39 (is ) 40 SB
1040 2864 190 (potentially ) 191 SB
1231 2864 108 (costly ) 109 SB
1340 2864 73 (and ) 74 SB
1414 2864 215 (unnecessary ) 217 SB
1631 2864 148 (between ) 150 SB
1781 2864 171 (machines ) 173 SB
1954 2864 44 (of ) 46 SB
2000 2864 52 (the) 52 SB
471 2927 97 (same ) 101 SB
572 2927 92 (type. ) 96 SB
668 2927 171 (However, ) 175 SB
843 2927 63 (the ) 67 SB
910 2927 178 (simplicity ) 182 SB
1092 2927 44 (of ) 49 SB
1141 2927 63 (the ) 68 SB
1209 2927 166 (approach ) 171 SB
1380 2927 96 (often ) 101 SB
1481 2927 182 (outweighs ) 187 SB
1668 2927 73 (this ) 78 SB
1746 2927 150 (problem ) 155 SB
1901 2927 45 (in ) 50 SB
1951 2927 30 (a ) 35 SB
1986 2927 66 (true) 66 SB
471 2990 477 (heterogeneous environment.) 477 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2031 3270 21 (2) 21 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
0 0 0 fC
471 318 190 (Parameter ) 203 SB
674 318 143 (Passing ) 156 SB
830 318 182 (Semantics ) 195 SB
1025 318 74 (and ) 87 SB
1112 318 98 (Types) 98 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1210 318 22 (. ) 35 SB
1245 318 164 (Different ) 177 SB
1422 318 180 (languages ) 193 SB
1615 318 90 (have ) 103 SB
1718 318 155 (different ) 168 SB
1886 318 166 (semantics) 166 SB
471 381 182 (governing ) 186 SB
657 381 181 (parameter ) 185 SB
842 381 149 (passing, ) 153 SB
995 381 88 (such ) 92 SB
1087 381 46 (as ) 50 SB
1137 381 72 (call ) 76 SB
1213 381 50 (by ) 55 SB
1268 381 101 (value ) 106 SB
1374 381 73 (and ) 78 SB
1452 381 72 (call ) 77 SB
1529 381 50 (by ) 55 SB
1584 381 166 (reference ) 171 SB
1755 381 43 (to ) 48 SB
1803 381 103 (name ) 108 SB
1911 381 64 (but ) 69 SB
1980 381 72 (two.) 72 SB
471 444 139 (Remote ) 140 SB
611 444 178 (procedure ) 179 SB
790 444 72 (call ) 74 SB
864 444 131 (usually ) 133 SB
997 444 151 (enforces ) 153 SB
1150 444 30 (a ) 32 SB
1182 444 148 (copy-in, ) 150 SB
1332 444 156 (copy-out ) 158 SB
1490 444 88 (style ) 90 SB
1580 444 44 (of ) 46 SB
1626 444 181 (parameter ) 183 SB
1809 444 138 (passing ) 140 SB
1949 444 103 (which) 103 SB
471 507 86 (does ) 100 SB
571 507 65 (not ) 79 SB
650 507 196 (necessarily ) 210 SB
860 507 115 (match ) 129 SB
989 507 63 (the ) 77 SB
1066 507 177 (semantics ) 191 SB
1257 507 44 (of ) 58 SB
1315 507 63 (the ) 77 SB
1392 507 92 (local ) 107 SB
1499 507 181 (parameter ) 196 SB
1695 507 138 (passing ) 153 SB
1848 507 204 (mechanism.) 204 SB
471 570 234 (Furthermore, ) 240 SB
711 570 127 (certain ) 133 SB
844 570 97 (types ) 103 SB
947 570 44 (of ) 50 SB
997 570 188 (arguments ) 194 SB
1191 570 82 (may ) 88 SB
1279 570 90 (have ) 96 SB
1375 570 43 (to ) 49 SB
1424 570 49 (be ) 55 SB
1479 570 191 (disallowed ) 197 SB
1676 570 150 (entirely, ) 157 SB
1833 570 59 (for ) 66 SB
1899 570 153 (example,) 153 SB
471 633 194 (procedures.) 194 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
471 738 278 (Self-Referential ) 289 SB
760 738 184 (Structures.) 184 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
944 738 11 ( ) 22 SB
966 738 96 (Most ) 107 SB
1073 738 140 (modern ) 151 SB
1224 738 243 (programming ) 254 SB
1478 738 180 (languages ) 192 SB
1670 738 103 (allow ) 115 SB
1785 738 63 (the ) 75 SB
1860 738 147 (creation ) 159 SB
2019 738 33 (of) 33 SB
471 801 117 (linked ) 131 SB
602 801 82 (data ) 96 SB
698 801 175 (structures ) 189 SB
887 801 152 (whereby ) 166 SB
1053 801 30 (a ) 44 SB
1097 801 104 (given ) 118 SB
1215 801 82 (data ) 96 SB
1311 801 159 (structure ) 173 SB
1484 801 152 (contains ) 166 SB
1650 801 147 (pointers ) 161 SB
1811 801 43 (to ) 57 SB
1868 801 98 (other ) 113 SB
1981 801 71 (data) 71 SB
471 864 186 (structures. ) 191 SB
662 864 87 (This ) 92 SB
754 864 128 (facility ) 133 SB
887 864 154 (provides ) 159 SB
1046 864 63 (the ) 68 SB
1114 864 221 (programmer ) 227 SB
1341 864 86 (with ) 92 SB
1433 864 30 (a ) 36 SB
1469 864 83 (very ) 89 SB
1558 864 137 (flexible ) 143 SB
1701 864 204 (mechanism ) 210 SB
1911 864 64 (but ) 70 SB
1981 864 71 (may) 71 SB
471 927 103 (cause ) 105 SB
576 927 166 (problems ) 168 SB
744 927 59 (for ) 61 SB
805 927 80 (stub ) 82 SB
887 927 190 (generation ) 192 SB
1079 927 141 (systems ) 143 SB
1222 927 76 (that ) 78 SB
1300 927 93 (must ) 95 SB
1395 927 131 (usually ) 133 SB
1528 927 159 (marshall ) 161 SB
1689 927 63 (the ) 65 SB
1754 927 108 (entire ) 111 SB
1865 927 159 (structure ) 162 SB
2027 927 25 (if) 25 SB
471 990 30 (a ) 33 SB
504 990 112 (single ) 115 SB
619 990 144 (element ) 147 SB
766 990 44 (of ) 47 SB
813 990 35 (it ) 38 SB
851 990 39 (is ) 42 SB
893 990 122 (passed ) 125 SB
1018 990 46 (as ) 49 SB
1067 990 30 (a ) 33 SB
1100 990 192 (parameter. ) 195 SB
1295 990 151 (Circular ) 154 SB
1449 990 82 (data ) 85 SB
1534 990 175 (structures ) 179 SB
1713 990 63 (are ) 67 SB
1780 990 190 (potentially ) 194 SB
1974 990 78 (even) 78 SB
471 1053 476 (more problematic to handle.) 476 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
471 1158 142 (Failures) 142 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
613 1158 22 (. ) 31 SB
644 1158 131 (Failure ) 140 SB
784 1158 44 (of ) 53 SB
837 1158 52 (an ) 61 SB
898 1158 89 (RPC ) 98 SB
996 1158 39 (is ) 48 SB
1044 1158 58 (far ) 67 SB
1111 1158 97 (more ) 106 SB
1217 1158 242 (problematical ) 251 SB
1468 1158 43 (to ) 52 SB
1520 1158 125 (handle ) 134 SB
1654 1158 86 (than ) 95 SB
1749 1158 121 (failure ) 130 SB
1879 1158 44 (of ) 53 SB
1932 1158 30 (a ) 39 SB
1971 1158 81 (local) 81 SB
471 1221 509 (procedure call since the latter ) 510 SB
981 1221 155 (typically ) 156 SB
1137 1221 84 (only ) 85 SB
1222 1221 119 (occurs ) 120 SB
1342 1221 102 (when ) 103 SB
1445 1221 63 (the ) 64 SB
1509 1221 108 (entire ) 109 SB
1618 1221 155 (program ) 156 SB
1774 1221 83 (fails ) 84 SB
1858 1221 46 (or ) 47 SB
1905 1221 63 (the ) 64 SB
1969 1221 83 (error) 83 SB
471 1284 208 (is expected. ) 209 SB
680 1284 41 (A ) 42 SB
722 1284 178 (procedure ) 179 SB
901 1284 158 (executed ) 159 SB
1060 1284 158 (remotely ) 159 SB
1219 1284 70 (can ) 71 SB
1290 1284 67 (fail ) 68 SB
1358 1284 194 (completely ) 195 SB
1553 1284 249 (independently ) 250 SB
1803 1284 44 (of ) 45 SB
1848 1284 63 (the ) 64 SB
1912 1284 105 (caller ) 106 SB
2018 1284 34 (in) 34 SB
471 1347 399 (many unexpected ways.) 399 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 1480 88 (1.2.) 88 SB
426 1480 496 (The Stub Generator) 496 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1604 77 (The ) 87 SB
558 1604 80 (stub ) 90 SB
648 1604 171 (generator ) 181 SB
829 1604 169 (processes ) 179 SB
1008 1604 87 (C++ ) 98 SB
1106 1604 92 (class ) 103 SB
1209 1604 191 (definitions ) 202 SB
1411 1604 73 (and ) 84 SB
1495 1604 161 (produces ) 172 SB
1667 1604 80 (stub ) 91 SB
1758 1604 88 (code ) 99 SB
1857 1604 76 (that ) 87 SB
1944 1604 108 (allows) 108 SB
321 1667 166 (instances ) 168 SB
489 1667 44 (of ) 46 SB
535 1667 99 (those ) 101 SB
636 1667 126 (classes ) 128 SB
764 1667 43 (to ) 45 SB
809 1667 49 (be ) 51 SB
860 1667 155 (accessed ) 157 SB
1017 1667 169 (remotely. ) 171 SB
1188 1667 90 (That ) 92 SB
1280 1667 50 (is, ) 52 SB
1332 1667 63 (the ) 65 SB
1397 1667 115 (public ) 117 SB
1514 1667 186 (operations ) 188 SB
1702 1667 44 (of ) 46 SB
1748 1667 63 (the ) 65 SB
1813 1667 126 (objects ) 128 SB
1941 1667 70 (can ) 73 SB
2014 1667 38 (be) 38 SB
321 1730 1346 (invoked from nodes other than the node on which the objects are resident. This ) 1347 SB
1668 1730 39 (is ) 40 SB
1708 1730 159 (achieved ) 160 SB
1868 1730 50 (by ) 51 SB
1919 1730 63 (the ) 64 SB
1983 1730 69 (stub) 69 SB
321 1793 171 (generator ) 175 SB
496 1793 182 (producing ) 186 SB
682 1793 129 (several ) 133 SB
815 1793 80 (new ) 84 SB
899 1793 137 (classes, ) 141 SB
1040 1793 63 (the ) 67 SB
1107 1793 92 (most ) 96 SB
1203 1793 177 (important ) 181 SB
1384 1793 44 (of ) 48 SB
1432 1793 114 (which ) 118 SB
1550 1793 63 (are ) 67 SB
1617 1793 30 (a ) 35 SB
1652 1793 105 (client ) 110 SB
1762 1793 80 (stub ) 85 SB
1847 1793 103 (class, ) 108 SB
1955 1793 73 (and ) 78 SB
2033 1793 19 (a) 19 SB
321 1856 113 (server ) 116 SB
437 1856 80 (stub ) 83 SB
520 1856 103 (class. ) 106 SB
626 1856 111 (These ) 114 SB
740 1856 126 (classes ) 129 SB
869 1856 158 (interface ) 161 SB
1030 1856 43 (to ) 46 SB
1076 1856 63 (the ) 67 SB
1143 1856 166 (low-level ) 170 SB
1313 1856 89 (RPC ) 93 SB
1406 1856 204 (mechanism ) 208 SB
1614 1856 47 (so ) 51 SB
1665 1856 76 (that ) 80 SB
1745 1856 110 (object ) 114 SB
1859 1856 193 (invocations) 193 SB
321 1919 844 (and replies can be transmitted across the network.) 844 SB
471 2024 112 (When ) 114 SB
585 2024 105 (client ) 107 SB
692 2024 88 (code ) 90 SB
782 2024 140 (invokes ) 142 SB
924 2024 52 (an ) 54 SB
978 2024 170 (operation ) 172 SB
1150 2024 53 (on ) 55 SB
1205 2024 30 (a ) 32 SB
1237 2024 127 (remote ) 130 SB
1367 2024 121 (object, ) 124 SB
1491 2024 63 (the ) 66 SB
1557 2024 170 (operation ) 173 SB
1730 2024 39 (is ) 42 SB
1772 2024 143 (actually ) 146 SB
1918 2024 134 (invoked) 134 SB
321 2087 53 (on ) 58 SB
379 2087 63 (the ) 68 SB
447 2087 105 (client ) 111 SB
558 2087 80 (stub ) 86 SB
644 2087 121 (object. ) 127 SB
771 2087 87 (This ) 93 SB
864 2087 80 (stub ) 86 SB
950 2087 110 (object ) 116 SB
1066 2087 106 (packs ) 112 SB
1178 2087 53 (up ) 59 SB
1237 2087 63 (the ) 69 SB
1306 2087 197 (parameters ) 203 SB
1509 2087 43 (to ) 49 SB
1558 2087 63 (the ) 69 SB
1627 2087 170 (operation ) 176 SB
1803 2087 86 (with ) 92 SB
1895 2087 157 (sufficient) 157 SB
321 2150 211 (information ) 216 SB
537 2150 59 (for ) 64 SB
601 2150 63 (the ) 68 SB
669 2150 127 (correct ) 132 SB
801 2150 170 (operation ) 175 SB
976 2150 43 (to ) 48 SB
1024 2150 49 (be ) 54 SB
1078 2150 145 (invoked ) 150 SB
1228 2150 42 (at ) 47 SB
1275 2150 63 (the ) 68 SB
1343 2150 113 (server ) 118 SB
1461 2150 78 (side ) 83 SB
1544 2150 73 (and ) 78 SB
1622 2150 168 (transmits ) 173 SB
1795 2150 63 (the ) 68 SB
1863 2150 132 (request ) 138 SB
2001 2150 51 (via) 51 SB
321 2213 1228 (RPC to the remote server stub object. The server stub object unpacks the ) 1229 SB
1550 2213 82 (data ) 83 SB
1633 2213 151 (received ) 152 SB
1785 2213 73 (and ) 74 SB
1859 2213 140 (invokes ) 141 SB
2000 2213 52 (the) 52 SB
321 2276 160 (specified ) 167 SB
488 2276 110 (object ) 117 SB
605 2276 181 (operation. ) 189 SB
794 2276 112 (When ) 120 SB
914 2276 63 (the ) 71 SB
985 2276 170 (operation ) 178 SB
1163 2276 68 (has ) 76 SB
1239 2276 184 (completed ) 192 SB
1431 2276 63 (the ) 71 SB
1502 2276 80 (stub ) 88 SB
1590 2276 126 (objects ) 134 SB
1724 2276 63 (are ) 71 SB
1795 2276 201 (responsible ) 209 SB
2004 2276 48 (for) 48 SB
321 2339 962 (packing and transmitting the reply to the client program.) 962 SB
471 2444 121 (Figure ) 125 SB
596 2444 64 (1.1 ) 68 SB
664 2444 176 (illustrates ) 180 SB
844 2444 63 (the ) 67 SB
911 2444 105 (client ) 109 SB
1020 2444 80 (stub ) 84 SB
1104 2444 110 (object ) 115 SB
1219 2444 131 (\(CSO\), ) 136 SB
1355 2444 113 (server ) 118 SB
1473 2444 80 (stub ) 85 SB
1558 2444 110 (object ) 115 SB
1673 2444 126 (\(SSO\), ) 131 SB
1804 2444 73 (and ) 78 SB
1882 2444 110 (object ) 115 SB
1997 2444 55 (\(O,) 55 SB
321 2507 340 (depicted as shaded\).) 340 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2031 3270 21 (3) 21 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
0 lc
0 lj
0 0 0 pC
6 4 SP
255 255 255 fC
/fm 256 def
gs 1586 904 393 344 CB
663 899 395 346 B
1 F
S
n
gr
gs 1586 904 393 344 CB
663 899 1313 346 B
1 F
S
n
gr
1 lc
1 lj
189 119 735 793 E
1 F
S
n
189 119 1643 793 E
1 F
S
n
55 32 735 770 E
S
n
255 255 255 fC
/fm 256 def
55 33 1561 779 E
1 F
S
n
0 0 0 hC
/fm 1280 def
<77dd77dd77dd77dd> p
56 33 1730 779 E
1 F
S
n
790 765 M 130 29 1 PP
S
n
1504 777 M -52 17 1 PP
S
n
1617 773 M 60 0 1 PP
S
n
32 0 0 45 45 0 0 0 40 /Times-Roman /font32 ANSIFont font
0 0 0 fC
gs 1586 904 393 344 CB
653 431 141 (Node X) 141 SB
gr
gs 1586 904 393 344 CB
1582 427 141 (Node Y) 141 SB
gr
gs 1586 904 393 344 CB
660 1027 134 (Client  ) 134 SB
gr
gs 1586 904 393 344 CB
660 1077 150 (Process ) 150 SB
gr
gs 1586 904 393 344 CB
699 831 98 (CSO ) 98 SB
gr
gs 1586 904 393 344 CB
1568 1023 140 (Server  ) 140 SB
gr
gs 1586 904 393 344 CB
1568 1073 150 (Process ) 150 SB
gr
gs 1586 904 393 344 CB
1525 827 93 (SSO ) 93 SB
gr
gs 1586 904 393 344 CB
1715 823 43 (O ) 43 SB
gr
/fm 256 def
924 794 M -49 -17 0 17 0 17 49 -17 4 PP
1 F
n
1455 794 M 49 17 0 -17 0 -17 -49 17 4 PP
1 F
n
6 4 SP
973 794 M 433 0 1 PP
S
n
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
873 1305 627 (Figure 1.1: Client and Server stubs) 627 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1410 77 (The ) 85 SB
556 1410 151 (diagram ) 159 SB
715 1410 45 (in ) 53 SB
768 1410 111 (figure ) 120 SB
888 1410 64 (1.2 ) 73 SB
961 1410 114 (shows ) 123 SB
1084 1410 63 (the ) 72 SB
1156 1410 179 (difference ) 188 SB
1344 1410 45 (in ) 54 SB
1398 1410 153 (software ) 162 SB
1560 1410 159 (structure ) 168 SB
1728 1410 148 (between ) 157 SB
1885 1410 81 (user ) 90 SB
1975 1410 77 (code) 77 SB
321 1473 171 (accessing ) 172 SB
493 1473 30 (a ) 31 SB
524 1473 92 (local ) 93 SB
617 1473 128 (service ) 129 SB
746 1473 73 (and ) 75 SB
821 1473 30 (a ) 32 SB
853 1473 81 (user ) 83 SB
936 1473 171 (accessing ) 173 SB
1109 1473 30 (a ) 32 SB
1141 1473 127 (remote ) 129 SB
1270 1473 139 (service. ) 141 SB
1411 1473 77 (The ) 79 SB
1490 1473 139 (service, ) 141 SB
1631 1473 45 (in ) 47 SB
1678 1473 73 (this ) 75 SB
1753 1473 145 (context, ) 147 SB
1900 1473 39 (is ) 41 SB
1941 1473 63 (the ) 65 SB
2006 1473 46 (set) 46 SB
321 1536 612 (of operations provided by the object.) 612 SB
0 lc
0 lj
255 255 255 fC
586 210 910 1672 B
1 F
S
n
1 lc
1 lj
910 1784 M 586 0 1 PP
S
n
32 0 0 40 40 0 0 0 36 /Times-Roman /font32 ANSIFont font
0 0 0 fC
1085 1694 181 (User Code ) 181 SB
1106 1814 130 (Service ) 130 SB
1089 1952 134 (1\) Local) 134 SB
0 lc
0 lj
255 255 255 fC
494 386 406 2002 B
1 F
S
n
1 lc
1 lj
6 8 SP
409 2134 M 487 0 1 PP
S
n
6 4 SP
409 2296 M 490 1 1 PP
S
n
0 0 0 fC
560 2039 181 (User Code ) 181 SB
472 2189 276 (Client Stub Code) 276 SB
493 2327 284 (RPC Mechanism ) 284 SB
0 lc
0 lj
255 255 255 fC
781 248 1185 2138 B
1 F
S
n
1 lc
1 lj
1186 2294 M 424 -2 1 PP
S
n
6 8 SP
1596 2294 M 365 0 1 PP
S
n
6 4 SP
1592 2384 M 1 -92 1 PP
S
n
0 0 0 fC
1360 2177 282 (Server Stub Code) 282 SB
1214 2327 284 (RPC Mechanism ) 284 SB
1693 2319 130 (Service ) 130 SB
913 2350 M -37 -17 0 17 0 16 37 -16 4 PP
1 F
n
1169 2350 M 37 16 0 -16 0 -17 -37 17 4 PP
1 F
n
6 4 SP
950 2350 M 184 0 1 PP
S
n
1076 2494 178 (2\) Remote ) 178 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
633 2596 1107 (Figure 1.2: Software Structure for Local and Remote Services) 1107 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 2729 88 (1.3.) 88 SB
426 2729 793 (Basic Use of the Stub Generator) 793 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2853 57 (As ) 60 SB
531 2853 68 (has ) 72 SB
603 2853 134 (already ) 138 SB
741 2853 89 (been ) 93 SB
834 2853 120 (stated, ) 124 SB
958 2853 63 (the ) 67 SB
1025 2853 80 (stub ) 84 SB
1109 2853 171 (generator ) 175 SB
1284 2853 159 (\(invoked ) 163 SB
1447 2853 84 (here ) 88 SB
1535 2853 50 (by ) 54 SB
1589 2853 63 (the ) 67 SB
1656 2853 177 (command ) 181 SB
1837 2853 11 ( ) 15 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1852 2864 100 (tatsu) 100 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1952 2853 25 (\) ) 29 SB
1981 2853 71 (uses) 71 SB
321 2916 63 (the ) 69 SB
390 2916 211 (information ) 217 SB
607 2916 92 (from ) 98 SB
705 2916 30 (a ) 36 SB
741 2916 156 (standard ) 162 SB
903 2916 87 (C++ ) 93 SB
996 2916 124 (header ) 130 SB
1126 2916 66 (file ) 72 SB
1198 2916 43 (to ) 49 SB
1247 2916 166 (generate: ) 172 SB
1419 2916 217 (replacement ) 223 SB
1642 2916 124 (header ) 130 SB
1772 2916 93 (files, ) 99 SB
1871 2916 105 (client ) 112 SB
1983 2916 69 (stub) 69 SB
321 2979 99 (code, ) 100 SB
421 2979 113 (server ) 114 SB
535 2979 80 (stub ) 81 SB
616 2979 99 (code, ) 100 SB
716 2979 73 (and ) 74 SB
790 2979 71 (any ) 72 SB
862 2979 152 (required ) 153 SB
1015 2979 181 (parameter ) 183 SB
1198 2979 214 (marshalling ) 216 SB
1414 2979 99 (code. ) 101 SB
1515 2979 87 (This ) 89 SB
1604 2979 39 (is ) 41 SB
1645 2979 181 (illustrated ) 183 SB
1828 2979 45 (in ) 47 SB
1875 2979 111 (figure ) 113 SB
1988 2979 64 (1.3,) 64 SB
321 3042 431 (with a header file \(called ) 431 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
752 3053 180 (Example.h) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
932 3042 486 (\) that contains a class called ) 486 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1418 3053 100 (Stack) 100 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1518 3042 11 (.) 11 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2031 3270 21 (4) 21 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
0 lc
0 lj
0 0 0 pC
6 3 SP
255 255 255 fC
/fm 256 def
gs 1358 508 507 344 CB
496 505 868 345 B
1 F
S
n
gr
32 0 0 41 41 0 0 0 38 /Palatino-Roman /font27 ANSIFont font
0 0 0 fC
gs 1358 508 507 344 CB
1074 463 103 (Stub  ) 103 SB
gr
gs 1358 508 507 344 CB
1015 513 193 (Generator ) 193 SB
gr
880 598 M 44 13 0 -13 0 -13 -44 13 4 PP
1 F
n
1 lc
1 lj
6 3 SP
836 598 M -64 0 1 PP
S
n
1474 385 M 46 13 0 -13 0 -12 -46 12 4 PP
1 F
n
6 3 SP
1428 385 M -62 0 1 PP
S
n
1474 469 M 46 12 0 -12 0 -13 -46 13 4 PP
1 F
n
6 3 SP
1428 469 M -62 0 1 PP
S
n
1474 639 M 46 13 0 -13 0 -12 -46 12 4 PP
1 F
n
6 3 SP
1428 639 M -62 0 1 PP
S
n
32 0 0 36 36 0 0 0 33 /Palatino-Roman /font27 ANSIFont font
gs 1358 508 507 344 CB
525 573 179 (Example.h ) 179 SB
gr
gs 1358 508 507 344 CB
1495 363 257 (Example_stub.h) 257 SB
gr
gs 1358 508 507 344 CB
1495 447 285 (Stack_stubclass.h ) 285 SB
gr
gs 1358 508 507 344 CB
1495 532 239 (Stack_client.cc ) 239 SB
gr
1474 554 M 46 12 0 -12 0 -13 -46 13 4 PP
1 F
n
6 3 SP
1428 554 M -62 0 1 PP
S
n
gs 1358 508 507 344 CB
1495 617 250 (Stack_server.cc ) 250 SB
gr
1474 723 M 46 12 0 -12 0 -13 -46 13 4 PP
1 F
n
6 3 SP
1428 723 M -62 0 1 PP
S
n
gs 1358 508 507 344 CB
1495 695 331 (Stack_servermain.cc ) 331 SB
gr
1474 808 M 46 12 0 -12 0 -13 -46 13 4 PP
1 F
n
6 3 SP
1428 808 M -62 0 1 PP
S
n
gs 1358 508 507 344 CB
1495 780 291 (Stack_marshall.cc ) 291 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
943 909 487 (Figure 1.3: Stub Generator) 487 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1014 77 (The ) 82 SB
553 1014 87 (C++ ) 92 SB
645 1014 124 (header ) 129 SB
774 1014 66 (file ) 71 SB
845 1014 14 (\() 14 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
859 1025 200 (Example.h ) 205 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1064 1014 45 (in ) 50 SB
1114 1014 73 (this ) 78 SB
1192 1014 167 (example\) ) 172 SB
1364 1014 152 (contains ) 157 SB
1521 1014 63 (the ) 69 SB
1590 1014 158 (interface ) 164 SB
1754 1014 175 (definition ) 181 SB
1935 1014 59 (for ) 65 SB
2000 1014 52 (the) 52 SB
321 1077 126 (classes ) 129 SB
450 1077 116 (whose ) 119 SB
569 1077 186 (operations ) 189 SB
758 1077 82 (may ) 85 SB
843 1077 49 (be ) 52 SB
895 1077 145 (invoked ) 148 SB
1043 1077 169 (remotely. ) 172 SB
1215 1077 100 (First, ) 103 SB
1318 1077 53 (let ) 56 SB
1374 1077 48 (us ) 51 SB
1425 1077 149 (describe ) 152 SB
1577 1077 63 (the ) 67 SB
1644 1077 78 (way ) 82 SB
1726 1077 73 (this ) 77 SB
1803 1077 92 (class ) 96 SB
1899 1077 111 (might ) 115 SB
2014 1077 38 (be) 38 SB
321 1140 136 (defined ) 139 SB
460 1140 73 (and ) 76 SB
536 1140 87 (used ) 90 SB
626 1140 45 (in ) 48 SB
674 1140 30 (a ) 33 SB
707 1140 269 (non-distributed ) 272 SB
979 1140 210 (application. ) 213 SB
1192 1140 63 (An ) 66 SB
1258 1140 153 (example ) 156 SB
1414 1140 44 (of ) 47 SB
1461 1140 52 (an ) 55 SB
1516 1140 158 (interface ) 161 SB
1677 1140 186 (definition, ) 190 SB
1867 1140 113 (stored ) 117 SB
1984 1140 45 (in ) 49 SB
2033 1140 19 (a) 19 SB
321 1203 177 (file called ) 177 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
498 1214 180 (Example.h) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
678 1203 275 (, is given below.) 275 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1301 540 (#include <Common/Boolean.h>) 540 SB
321 1373 220 (class Stack) 220 SB
321 1409 20 ({) 20 SB
321 1445 140 (public:) 140 SB
413 1481 160 (Stack\(\);) 160 SB
1071 1481 280 (// constructor) 280 SB
413 1517 180 (~Stack\(\);) 180 SB
1071 1517 260 (// destructor) 260 SB
413 1589 460 (Boolean Push\(long val\);) 460 SB
413 1625 460 (Boolean Pop\(long& val\);) 460 SB
321 1697 160 (private:) 160 SB
413 1733 160 (int top;) 160 SB
413 1769 340 (long values[100];) 340 SB
321 1805 40 (};) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1898 605 (Let the implementation of the class ) 605 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1076 1909 100 (Stack) 100 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1176 1898 345 ( be in the file called ) 345 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1521 1909 200 (Example.cc) 200 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1721 1898 295 (, and of the form:) 295 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1996 400 (#include "Example.h") 400 SB
321 2068 460 (Stack::Stack\(\){ . . . }) 460 SB
321 2104 500 (Stack::~Stack\(\) { . . . }) 500 SB
321 2140 760 (Boolean Stack::Pop\(long val\) { . . . }) 760 SB
321 2176 800 (Boolean Stack::Push\(long& val\) { . . . }) 800 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2269 880 (And, let the user application code be in a file called ) 880 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1351 2280 220 (UserAppl.cc) 220 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1571 2269 295 (, and of the form:) 295 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 2367 400 (#include "Example.h") 400 SB
321 2439 640 (int main\(int argc, char* argv[]\)) 640 SB
321 2475 20 ({) 20 SB
413 2511 120 (int v;) 120 SB
413 2547 240 (Boolean err;) 240 SB
413 2583 300 (Stack StackObj;) 300 SB
413 2619 480 (err = StackObj.push\(10\);) 480 SB
413 2655 100 (. . .) 100 SB
413 2691 440 (err = StackObj.pop\(v\);) 440 SB
321 2727 20 (}) 20 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2820 1450 (To compile the above simple application, the following commands would be required:) 1450 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 2918 340 (CC -c UserAppl.cc) 340 SB
1163 2918 40 (--) 40 SB
1259 2918 480 (Compile user application) 480 SB
321 3004 320 (CC -c Example.cc) 320 SB
1163 3004 40 (--) 40 SB
1259 3004 260 (Compile stack) 260 SB
321 3090 700 (CC -o UserAppl UserAppl.o Example.o) 700 SB
1163 3090 40 (--) 40 SB
1259 3090 520 (Link application and stack) 520 SB
1259 3126 520 (to form executable program) 520 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2031 3270 21 (5) 21 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
471 318 57 (To ) 58 SB
529 318 103 (allow ) 104 SB
633 318 63 (the ) 64 SB
697 318 108 (above ) 109 SB
806 318 81 (user ) 82 SB
888 318 199 (application ) 200 SB
1088 318 43 (to ) 44 SB
1132 318 122 (create, ) 123 SB
1255 318 73 (and ) 74 SB
1329 318 124 (invoke ) 126 SB
1455 318 186 (operations ) 188 SB
1643 318 53 (on ) 55 SB
1698 318 127 (remote ) 129 SB
1827 318 97 (stack ) 99 SB
1926 318 126 (objects,) 126 SB
321 381 624 (the following must be done: The file ) 624 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
945 392 180 (Example.h) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1125 381 275 ( must be passed ) 276 SB
1401 381 144 (through ) 145 SB
1546 381 63 (the ) 64 SB
1610 381 80 (stub ) 81 SB
1691 381 183 (generator; ) 184 SB
1875 381 73 (this ) 74 SB
1949 381 103 (would) 103 SB
321 444 145 (produce ) 167 SB
488 444 63 (the ) 85 SB
573 444 94 (files: ) 116 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
689 455 280 (Example_stub.h) 280 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
969 444 22 (, ) 44 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1013 455 340 (Stack_stubclass.h) 340 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1353 444 22 (, ) 44 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1397 455 300 (Stack_client.cc) 300 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1697 444 22 (, ) 44 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1741 455 300 (Stack_server.cc) 300 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
2041 444 11 (,) 11 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 518 380 (Stack_servermain.cc) 380 SB
32 0 0 42 42 0 0 0 39 /Palatino-Roman /font27 ANSIFont font
701 506 11 ( ) 15 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
716 507 73 (and ) 77 SB
793 507 136 (possibly) 136 SB
32 0 0 42 42 0 0 0 39 /Palatino-Roman /font27 ANSIFont font
929 506 11 ( ) 15 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
944 518 340 (Stack_marshall.cc) 340 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1284 507 22 (. ) 26 SB
1310 507 77 (The ) 81 SB
1391 507 124 (header ) 128 SB
1519 507 66 (file ) 71 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1590 518 280 (Example_stub.h) 280 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1870 507 11 ( ) 16 SB
1886 507 123 (should ) 128 SB
2014 507 38 (be) 38 SB
321 570 87 (used ) 90 SB
411 570 11 ( ) 14 SB
425 570 50 (by ) 53 SB
478 570 63 (the ) 66 SB
544 570 81 (user ) 84 SB
628 570 199 (application ) 202 SB
830 570 73 (and ) 76 SB
906 570 63 (the ) 66 SB
972 570 227 (implementor ) 231 SB
1203 570 44 (of ) 48 SB
1251 570 63 (the ) 67 SB
1318 570 97 (stack ) 101 SB
1419 570 110 (object ) 114 SB
1533 570 131 (instead ) 135 SB
1668 570 44 (of ) 48 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1716 581 180 (Example.h) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1896 570 22 (, ) 26 SB
1922 570 130 (because) 130 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 644 280 (Example_stub.h) 280 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
601 633 318 ( contains the class ) 319 SB
920 633 174 (interfaces ) 175 SB
1095 633 59 (for ) 60 SB
1155 633 113 (server ) 114 SB
1269 633 80 (stub ) 81 SB
1350 633 137 (objects, ) 138 SB
1488 633 105 (client ) 106 SB
1594 633 80 (stub ) 81 SB
1675 633 137 (objects, ) 138 SB
1813 633 73 (and ) 74 SB
1887 633 63 (the ) 64 SB
1951 633 101 (actual) 101 SB
321 696 127 (remote ) 131 SB
452 696 137 (objects. ) 141 SB
593 696 57 (To ) 61 SB
654 696 121 (ensure ) 125 SB
779 696 76 (that ) 80 SB
859 696 63 (the ) 67 SB
926 696 127 (correct ) 131 SB
1057 696 92 (class ) 96 SB
1153 696 158 (interface ) 162 SB
1315 696 39 (is ) 43 SB
1358 696 98 (used, ) 102 SB
1460 696 63 (the ) 67 SB
1527 696 127 (correct ) 131 SB
1658 696 238 (pre-processor ) 243 SB
1901 696 151 (variables) 151 SB
321 759 497 (must be set, before including ) 497 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
818 770 280 (Example_stub.h) 280 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1098 759 11 (.) 11 SB
471 864 1265 (For example, the implementor of the user application above would replace:) 1265 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 962 400 (#include "Example.h") 400 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1218 1055 87 (with:) 87 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1153 500 (#include "Example_stub.h") 500 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1246 883 (And, the implementor of stack object would replace:) 883 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1344 400 (#include "Example.h") 400 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1218 1437 87 (with:) 87 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1535 400 (#define STACK_SERVER) 400 SB
321 1571 500 (#include "Example_stub.h") 500 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1664 38 (If ) 40 SB
511 1664 30 (a ) 32 SB
543 1664 97 (stack ) 99 SB
642 1664 113 (server ) 115 SB
757 1664 155 (program ) 158 SB
915 1664 39 (is ) 42 SB
957 1664 43 (to ) 46 SB
1003 1664 49 (be ) 52 SB
1055 1664 143 (created, ) 146 SB
1201 1664 85 (then ) 88 SB
1289 1664 63 (the ) 66 SB
1355 1664 88 (code ) 91 SB
1446 1664 45 (in ) 48 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1494 1675 380 (Stack_servermain.cc) 380 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1874 1664 11 ( ) 14 SB
1888 1664 123 (should ) 126 SB
2014 1664 38 (be) 38 SB
321 1727 620 (compiled, and linked into the server.) 620 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2031 3270 21 (6) 21 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 75 75 0 0 0 69 /Times-Bold /font29 ANSIFont font
0 0 0 fC
321 306 57 (2.) 57 SB
426 306 824 (Stub Generation Specifics) 824 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 476 88 (2.1.) 88 SB
426 476 310 (Introduction) 310 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 600 77 (The ) 78 SB
549 600 75 (aim ) 76 SB
625 600 44 (of ) 45 SB
670 600 63 (the ) 64 SB
734 600 80 (stub ) 81 SB
815 600 171 (generator ) 172 SB
987 600 39 (is ) 40 SB
1027 600 43 (to ) 44 SB
1071 600 81 (take ) 82 SB
1153 600 30 (a ) 31 SB
1184 600 156 (standard ) 157 SB
1341 600 87 (C++ ) 88 SB
1429 600 124 (header ) 125 SB
1554 600 66 (file ) 67 SB
1621 600 152 (defining ) 153 SB
1774 600 30 (a ) 31 SB
1805 600 92 (class ) 93 SB
1898 600 60 (\(or ) 62 SB
1960 600 57 (set ) 59 SB
2019 600 33 (of) 33 SB
321 663 140 (classes\) ) 150 SB
471 663 73 (and ) 83 SB
554 663 145 (produce ) 155 SB
709 663 92 (from ) 102 SB
811 663 35 (it ) 45 SB
856 663 30 (a ) 40 SB
896 663 57 (set ) 67 SB
963 663 44 (of ) 54 SB
1017 663 186 (equivalent ) 196 SB
1213 663 82 (files ) 93 SB
1306 663 191 (containing ) 202 SB
1508 663 141 (suitable ) 152 SB
1660 663 217 (replacement ) 228 SB
1888 663 164 (stub-class) 164 SB
321 726 191 (definitions ) 199 SB
520 726 149 (together ) 157 SB
677 726 86 (with ) 94 SB
771 726 63 (the ) 71 SB
842 726 88 (code ) 96 SB
938 726 76 (that ) 84 SB
1022 726 208 (implements ) 216 SB
1238 726 63 (the ) 71 SB
1309 726 105 (client ) 114 SB
1423 726 73 (and ) 82 SB
1505 726 113 (server ) 122 SB
1627 726 186 (operations ) 195 SB
1822 726 44 (of ) 53 SB
1875 726 99 (those ) 108 SB
1983 726 69 (stub) 69 SB
321 789 707 (classes. However, since the language was ) 708 SB
1029 789 160 (designed ) 161 SB
1190 789 139 (without ) 140 SB
1330 789 206 (distribution ) 207 SB
1537 789 45 (in ) 46 SB
1583 789 99 (mind ) 100 SB
1683 789 127 (certain ) 128 SB
1811 789 143 (features ) 144 SB
1955 789 44 (of ) 45 SB
2000 789 52 (the) 52 SB
321 852 164 (language ) 177 SB
498 852 63 (are ) 76 SB
574 852 191 (impossible ) 204 SB
778 852 60 (\(or ) 74 SB
852 852 226 (prohibitively ) 240 SB
1092 852 191 (expensive\) ) 205 SB
1297 852 43 (to ) 57 SB
1354 852 170 (distribute ) 184 SB
1538 852 244 (transparently. ) 258 SB
1796 852 96 (Thus ) 110 SB
1906 852 63 (the ) 77 SB
1983 852 69 (stub) 69 SB
321 915 171 (generator ) 172 SB
493 915 147 (imposes ) 148 SB
641 915 127 (certain ) 128 SB
769 915 199 (restrictions ) 200 SB
969 915 53 (on ) 54 SB
1023 915 63 (the ) 64 SB
1087 915 159 (structure ) 160 SB
1247 915 73 (and ) 74 SB
1321 915 151 (contents ) 152 SB
1473 915 44 (of ) 45 SB
1518 915 71 (any ) 72 SB
1590 915 124 (header ) 125 SB
1715 915 82 (files ) 83 SB
1798 915 35 (it ) 37 SB
1835 915 180 (processes, ) 182 SB
2017 915 35 (as) 35 SB
321 978 595 (described in the following sections.) 595 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 1111 88 (2.2.) 88 SB
426 1111 316 (Assumptions) 316 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1235 104 (Since ) 109 SB
580 1235 63 (the ) 68 SB
648 1235 80 (stub ) 85 SB
733 1235 171 (generator ) 176 SB
909 1235 39 (is ) 44 SB
953 1235 84 (only ) 89 SB
1042 1235 114 (aimed ) 119 SB
1161 1235 42 (at ) 47 SB
1208 1235 207 (distributing ) 212 SB
1420 1235 87 (C++ ) 92 SB
1512 1235 171 (programs ) 176 SB
1688 1235 35 (it ) 40 SB
1728 1235 84 (tries ) 90 SB
1818 1235 43 (to ) 49 SB
1867 1235 127 (exploit ) 133 SB
2000 1235 52 (the) 52 SB
321 1298 202 (capabilities ) 210 SB
531 1298 44 (of ) 52 SB
583 1298 63 (the ) 72 SB
655 1298 164 (language ) 173 SB
828 1298 43 (to ) 52 SB
880 1298 63 (the ) 72 SB
952 1298 80 (full. ) 89 SB
1041 1298 47 (In ) 56 SB
1097 1298 175 (particular ) 184 SB
1281 1298 63 (the ) 72 SB
1353 1298 87 (C++ ) 96 SB
1449 1298 200 (constructor ) 209 SB
1658 1298 73 (and ) 82 SB
1740 1298 179 (destructor ) 188 SB
1928 1298 124 (notions) 124 SB
321 1361 138 (provide ) 151 SB
472 1361 30 (a ) 43 SB
515 1361 195 (convenient ) 208 SB
723 1361 125 (handle ) 138 SB
861 1361 53 (on ) 66 SB
927 1361 127 (remote ) 140 SB
1067 1361 113 (server ) 126 SB
1193 1361 147 (creation ) 161 SB
1354 1361 73 (and ) 87 SB
1441 1361 209 (destruction. ) 223 SB
1664 1361 234 (Furthermore, ) 248 SB
1912 1361 140 (operator) 140 SB
321 1424 989 (overloading is used in the marshalling and unmarshalling ) 990 SB
1311 1424 44 (of ) 45 SB
1356 1424 208 (parameters. ) 209 SB
1565 1424 77 (The ) 78 SB
1643 1424 99 (input ) 100 SB
1743 1424 39 (is ) 40 SB
1783 1424 155 (assumed ) 156 SB
1939 1424 43 (to ) 44 SB
1983 1424 49 (be ) 50 SB
2033 1424 19 (a) 19 SB
321 1487 348 (syntactically correct ) 349 SB
670 1487 87 (C++ ) 88 SB
758 1487 124 (header ) 125 SB
883 1487 66 (file ) 67 SB
950 1487 90 (\(that ) 91 SB
1041 1487 39 (is ) 40 SB
1081 1487 63 (the ) 64 SB
1145 1487 80 (stub ) 81 SB
1226 1487 171 (generator ) 172 SB
1398 1487 39 (is ) 40 SB
1438 1487 65 (not ) 66 SB
1504 1487 157 (intended ) 158 SB
1662 1487 43 (to ) 44 SB
1706 1487 132 (replace ) 133 SB
1839 1487 63 (the ) 64 SB
1903 1487 149 (compiler) 149 SB
321 1550 1055 (as a method of error detection\) describing one or more classes.) 1055 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 1683 88 (2.3.) 88 SB
426 1683 477 (Primary Operation) 477 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1807 77 (The ) 88 SB
559 1807 80 (stub ) 91 SB
650 1807 171 (generator ) 182 SB
832 1807 100 (reads ) 111 SB
943 1807 30 (a ) 41 SB
984 1807 156 (standard ) 168 SB
1152 1807 87 (C++ ) 99 SB
1251 1807 124 (header ) 136 SB
1387 1807 63 (the ) 75 SB
1462 1807 103 (name ) 115 SB
1577 1807 44 (of ) 56 SB
1633 1807 114 (which ) 126 SB
1759 1807 39 (is ) 51 SB
1810 1807 153 (supplied ) 165 SB
1975 1807 46 (as ) 58 SB
2033 1807 19 (a) 19 SB
321 1870 177 (command ) 183 SB
504 1870 75 (line ) 81 SB
585 1870 183 (argument. ) 189 SB
774 1870 104 (Since ) 110 SB
884 1870 73 (this ) 79 SB
963 1870 66 (file ) 73 SB
1036 1870 155 (typically ) 162 SB
1198 1870 152 (contains ) 159 SB
1357 1870 104 (many ) 111 SB
1468 1870 238 (pre-processor ) 245 SB
1713 1870 173 (directives ) 180 SB
1893 1870 159 (\(#include) 159 SB
321 1933 84 (etc.\) ) 87 SB
408 1933 35 (it ) 38 SB
446 1933 93 (must ) 96 SB
542 1933 79 (first ) 82 SB
624 1933 49 (be ) 52 SB
676 1933 174 (processed ) 177 SB
853 1933 43 (to ) 46 SB
899 1933 135 (remove ) 138 SB
1037 1933 108 (these. ) 111 SB
1148 1933 87 (This ) 90 SB
1238 1933 39 (is ) 42 SB
1280 1933 146 (handled ) 149 SB
1429 1933 50 (by ) 54 SB
1483 1933 136 (feeding ) 140 SB
1623 1933 63 (the ) 67 SB
1690 1933 99 (input ) 103 SB
1793 1933 43 (to ) 47 SB
1840 1933 63 (the ) 67 SB
1907 1933 145 (standard) 145 SB
321 1996 87 (C++ ) 89 SB
410 1996 160 (compiler ) 162 SB
572 1996 77 (\(the ) 79 SB
651 1996 112 (actual ) 114 SB
765 1996 160 (compiler ) 162 SB
927 1996 87 (used ) 89 SB
1016 1996 39 (is ) 41 SB
1057 1996 63 (the ) 65 SB
1122 1996 160 (compiler ) 162 SB
1284 1996 87 (used ) 89 SB
1373 1996 43 (to ) 45 SB
1418 1996 145 (compile ) 147 SB
1565 1996 63 (the ) 66 SB
1631 1996 80 (stub ) 83 SB
1714 1996 171 (generator ) 174 SB
1888 1996 108 (itself\) ) 111 SB
1999 1996 53 (but) 53 SB
321 2059 936 (instructing it to pre-process the file only. The resulting ) 937 SB
1258 2059 118 (output ) 119 SB
1377 2059 39 (is ) 40 SB
1417 2059 85 (then ) 86 SB
1503 2059 95 (read, ) 96 SB
1599 2059 121 (parsed ) 122 SB
1721 2059 73 (and ) 74 SB
1795 2059 63 (the ) 64 SB
1859 2059 193 (appropriate) 193 SB
321 2122 262 (stubs produced.) 262 SB
471 2227 77 (The ) 83 SB
554 2227 156 (standard ) 162 SB
716 2227 160 (compiler ) 166 SB
882 2227 39 (is ) 45 SB
927 2227 87 (used ) 93 SB
1020 2227 43 (to ) 49 SB
1069 2227 121 (ensure ) 128 SB
1197 2227 76 (that ) 83 SB
1280 2227 71 (any ) 78 SB
1358 2227 127 (special ) 134 SB
1492 2227 173 (directives ) 180 SB
1672 2227 163 (normally ) 170 SB
1842 2227 122 (passed ) 129 SB
1971 2227 50 (by ) 57 SB
2028 2227 24 (it) 24 SB
321 2290 145 (\(usually ) 146 SB
467 2290 45 (in ) 46 SB
513 2290 63 (the ) 64 SB
577 2290 92 (form ) 93 SB
670 2290 44 (of ) 45 SB
715 2290 127 (special ) 128 SB
843 2290 191 (definitions ) 192 SB
1035 2290 44 (of ) 45 SB
1080 2290 125 (system ) 126 SB
1206 2290 176 (variables\) ) 177 SB
1383 2290 63 (are ) 65 SB
1448 2290 87 (used ) 89 SB
1537 2290 43 (to ) 45 SB
1582 2290 145 (produce ) 147 SB
1729 2290 63 (the ) 65 SB
1794 2290 80 (stub ) 82 SB
1876 2290 176 (generators) 176 SB
321 2353 110 (input. ) 118 SB
439 2353 38 (If ) 46 SB
485 2353 63 (the ) 71 SB
556 2353 156 (standard ) 164 SB
720 2353 160 (compiler ) 168 SB
888 2353 124 (cannot ) 132 SB
1020 2353 49 (be ) 57 SB
1077 2353 108 (found ) 116 SB
1193 2353 129 (several ) 137 SB
1330 2353 206 (alternatives ) 215 SB
1545 2353 63 (are ) 72 SB
1617 2353 89 (tried ) 98 SB
1715 2353 45 (in ) 54 SB
1769 2353 174 (sequence. ) 183 SB
1952 2353 100 (These) 100 SB
321 2416 206 (alternatives ) 211 SB
532 2416 90 (have ) 95 SB
627 2416 89 (been ) 94 SB
721 2416 201 (ascertained ) 206 SB
927 2416 105 (based ) 110 SB
1037 2416 53 (on ) 58 SB
1095 2416 192 (experience ) 197 SB
1292 2416 134 (porting ) 139 SB
1431 2416 63 (the ) 68 SB
1499 2416 80 (stub ) 85 SB
1584 2416 171 (generator ) 176 SB
1760 2416 43 (to ) 49 SB
1809 2416 134 (various ) 140 SB
1949 2416 103 (UNIX) 103 SB
321 2479 304 (implementations. ) 313 SB
634 2479 171 (However, ) 180 SB
814 2479 45 (in ) 54 SB
868 2479 73 (this ) 82 SB
950 2479 82 (case ) 91 SB
1041 2479 181 (additional ) 190 SB
1231 2479 92 (flags ) 101 SB
1332 2479 76 (will ) 85 SB
1417 2479 123 (almost ) 132 SB
1549 2479 158 (certainly ) 167 SB
1716 2479 49 (be ) 59 SB
1775 2479 152 (required ) 162 SB
1937 2479 53 (on ) 63 SB
2000 2479 52 (the) 52 SB
321 2542 252 (command line.) 252 SB
471 2647 77 (The ) 81 SB
552 2647 78 (unit ) 82 SB
634 2647 44 (of ) 48 SB
682 2647 206 (distribution ) 210 SB
892 2647 39 (is ) 43 SB
935 2647 63 (the ) 67 SB
1002 2647 87 (C++ ) 91 SB
1093 2647 103 (class, ) 107 SB
1200 2647 157 (enabling ) 161 SB
1361 2647 183 (individual ) 187 SB
1548 2647 87 (C++ ) 91 SB
1639 2647 126 (objects ) 131 SB
1770 2647 43 (to ) 48 SB
1818 2647 49 (be ) 54 SB
1872 2647 180 (distributed) 180 SB
321 2710 84 (over ) 86 SB
407 2710 63 (the ) 65 SB
472 2710 136 (system. ) 138 SB
610 2710 77 (The ) 79 SB
689 2710 158 (interface ) 160 SB
849 2710 63 (the ) 65 SB
914 2710 191 (distributed ) 193 SB
1107 2710 126 (objects ) 128 SB
1235 2710 137 (support ) 139 SB
1374 2710 39 (is ) 41 SB
1415 2710 63 (the ) 65 SB
1480 2710 115 (public ) 117 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1597 2710 164 (operation) 164 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1761 2710 11 ( ) 13 SB
1774 2710 57 (set ) 59 SB
1833 2710 44 (of ) 46 SB
1879 2710 63 (the ) 65 SB
1944 2710 92 (class ) 94 SB
2038 2710 14 (-) 14 SB
321 2773 1104 (all other public entities are removed \(with appropriate warnings\).) 1104 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2031 3270 21 (7) 21 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
0 0 0 fC
321 346 88 (2.4.) 88 SB
426 346 712 (Files, Directives and Options) 712 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 470 77 (The ) 78 SB
549 470 80 (stub ) 81 SB
630 470 171 (generator ) 172 SB
802 470 163 (normally ) 164 SB
966 470 170 (generates ) 172 SB
1138 470 30 (a ) 32 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1170 470 47 (set) 47 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1217 470 11 ( ) 13 SB
1230 470 44 (of ) 46 SB
1276 470 82 (files ) 84 SB
1360 470 59 (for ) 61 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1421 470 80 (each) 80 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1501 470 11 ( ) 13 SB
1514 470 92 (class ) 94 SB
1608 470 35 (it ) 37 SB
1645 470 126 (detects ) 128 SB
1773 470 45 (in ) 47 SB
1820 470 63 (the ) 65 SB
1885 470 99 (input ) 101 SB
1986 470 66 (file.) 66 SB
321 533 171 (However, ) 177 SB
498 533 73 (this ) 79 SB
577 533 178 (behaviour ) 184 SB
761 533 70 (can ) 76 SB
837 533 49 (be ) 55 SB
892 533 161 (modified ) 167 SB
1059 533 50 (by ) 56 SB
1115 533 166 (inclusion ) 172 SB
1287 533 44 (of ) 51 SB
1338 533 80 (stub ) 87 SB
1425 533 190 (generation ) 197 SB
1622 533 139 (specific ) 146 SB
1768 533 173 (directives ) 180 SB
1948 533 45 (in ) 52 SB
2000 533 52 (the) 52 SB
321 596 165 (input file.) 165 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 729 132 (2.4.1.) 132 SB
471 729 309 (Output Files) 309 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 853 69 (For ) 70 SB
541 853 30 (a ) 31 SB
572 853 104 (given ) 106 SB
678 853 99 (input ) 101 SB
779 853 66 (file ) 68 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
847 853 121 (Input.h) 121 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
968 853 11 ( ) 13 SB
981 853 76 (that ) 78 SB
1059 853 152 (contains ) 154 SB
1213 853 30 (a ) 32 SB
1245 853 92 (class ) 94 SB
1339 853 111 (called ) 113 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1452 864 180 (TestClass) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1632 853 22 (, ) 24 SB
1656 853 63 (the ) 65 SB
1721 853 80 (stub ) 82 SB
1803 853 171 (generator ) 173 SB
1976 853 76 (will,) 76 SB
321 916 651 (by default, produce the following files:) 651 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 1014 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 1017 239 (Input_stub.h.) 239 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
710 1018 11 ( ) 21 SB
731 1018 229 (Replacement ) 239 SB
970 1018 124 (header ) 134 SB
1104 1018 66 (file ) 76 SB
1180 1018 25 (- ) 35 SB
1215 1018 123 (should ) 133 SB
1348 1018 49 (be ) 59 SB
1407 1018 156 (included ) 166 SB
1573 1018 45 (in ) 55 SB
1628 1018 119 (source ) 129 SB
1757 1018 88 (code ) 98 SB
1855 1018 45 (in ) 55 SB
1910 1018 99 (place ) 109 SB
2019 1018 33 (of) 33 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
471 1084 132 (Input.h.) 132 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
603 1084 11 ( ) 20 SB
623 1084 77 (The ) 86 SB
709 1084 151 (contents ) 160 SB
869 1084 44 (of ) 53 SB
922 1084 73 (this ) 82 SB
1004 1084 66 (file ) 75 SB
1079 1084 63 (are ) 72 SB
1151 1084 130 (similar ) 140 SB
1291 1084 43 (to ) 53 SB
1344 1084 63 (the ) 73 SB
1417 1084 144 (original ) 154 SB
1571 1084 99 (input ) 109 SB
1680 1084 66 (file ) 76 SB
1756 1084 119 (except ) 129 SB
1885 1084 76 (that ) 86 SB
1971 1084 81 (class) 81 SB
471 1147 191 (definitions ) 200 SB
671 1147 82 (may ) 91 SB
762 1147 90 (have ) 99 SB
861 1147 89 (been ) 98 SB
959 1147 156 (removed ) 165 SB
1124 1147 77 (into ) 86 SB
1210 1147 149 (separate ) 158 SB
1368 1147 124 (header ) 133 SB
1501 1147 82 (files ) 92 SB
1593 1147 76 (that ) 86 SB
1679 1147 76 (will ) 86 SB
1765 1147 49 (be ) 59 SB
1824 1147 228 (automatically) 228 SB
471 1210 167 (included. ) 177 SB
648 1210 137 (Certain ) 147 SB
795 1210 98 (other ) 108 SB
903 1210 181 (constructs ) 191 SB
1094 1210 82 (may ) 93 SB
1187 1210 78 (also ) 89 SB
1276 1210 49 (be ) 60 SB
1336 1210 156 (removed ) 167 SB
1503 1210 25 (- ) 36 SB
1539 1210 45 (in ) 56 SB
1595 1210 186 (particular, ) 197 SB
1792 1210 109 (inline ) 120 SB
1912 1210 140 (function) 140 SB
471 1273 202 (definitions. ) 203 SB
674 1273 111 (Inline ) 112 SB
786 1273 191 (definitions ) 192 SB
978 1273 120 (and/or ) 122 SB
1100 1273 117 (extern ) 119 SB
1219 1273 215 (declarations ) 217 SB
1436 1273 59 (for ) 61 SB
1497 1273 214 (marshalling ) 216 SB
1713 1273 186 (operations ) 188 SB
1901 1273 82 (may ) 84 SB
1985 1273 67 (also) 67 SB
471 1336 324 (have been inserted.) 324 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 1434 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 1437 397 (TestClass_stubclass.h.) 397 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
868 1438 11 ( ) 13 SB
881 1438 87 (This ) 89 SB
970 1438 66 (file ) 68 SB
1038 1438 152 (contains ) 154 SB
1192 1438 63 (the ) 65 SB
1257 1438 191 (definitions ) 193 SB
1450 1438 59 (for ) 61 SB
1511 1438 63 (the ) 65 SB
1576 1438 80 (new ) 82 SB
1658 1438 126 (classes ) 128 SB
1786 1438 76 (that ) 79 SB
1865 1438 132 (replace ) 135 SB
2000 1438 52 (the) 52 SB
471 1504 144 (original ) 147 SB
618 1504 92 (class ) 95 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
713 1515 180 (TestClass) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
893 1504 22 (. ) 25 SB
918 1504 111 (These ) 115 SB
1033 1504 126 (classes ) 130 SB
1163 1504 63 (are ) 67 SB
1230 1504 124 (named ) 128 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1358 1515 280 (LocalTestClass) 280 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1638 1504 22 (, ) 26 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1664 1515 300 (RemoteTestClass) 300 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1964 1504 22 (, ) 26 SB
1990 1504 62 (and) 62 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
471 1578 300 (ServerTestClass) 300 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
771 1567 1280 (. C pre-processor directives attempt to hide this name change from the user.) 1280 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 1665 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 1668 352 (TestClass_client.cc.) 352 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
823 1669 11 ( ) 24 SB
847 1669 115 (Client ) 128 SB
975 1669 78 (side ) 91 SB
1066 1669 88 (code ) 101 SB
1167 1669 76 (that ) 89 SB
1256 1669 154 (provides ) 167 SB
1423 1669 80 (new ) 93 SB
1516 1669 293 (implementations ) 306 SB
1822 1669 44 (of ) 58 SB
1880 1669 54 (all ) 68 SB
1948 1669 104 (public) 104 SB
471 1735 971 (operations of the original class as RPC calls to the server.) 971 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 1833 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 1836 365 (TestClass_server.cc.) 365 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
836 1837 11 ( ) 25 SB
861 1837 120 (Server ) 134 SB
995 1837 78 (side ) 92 SB
1087 1837 88 (code ) 102 SB
1189 1837 76 (that ) 90 SB
1279 1837 143 (decodes ) 157 SB
1436 1837 171 (incoming ) 185 SB
1621 1837 89 (RPC ) 103 SB
1724 1837 159 (requests, ) 173 SB
1897 1837 88 (calls ) 103 SB
2000 1837 52 (the) 52 SB
471 1903 1031 (original class operations, and returns the results to the caller.) 1031 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 2001 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 2004 455 (TestClass_servermain.cc.) 455 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
926 2005 11 ( ) 13 SB
939 2005 130 (Simple ) 132 SB
1071 2005 97 (main ) 99 SB
1170 2005 155 (program ) 157 SB
1327 2005 76 (that ) 78 SB
1405 2005 127 (creates ) 129 SB
1534 2005 52 (an ) 55 SB
1589 2005 150 (instance ) 153 SB
1742 2005 44 (of ) 47 SB
1789 2005 63 (the ) 66 SB
1855 2005 113 (server ) 116 SB
1971 2005 81 (class) 81 SB
471 2071 731 (and causes it to wait for incoming requests.) 731 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 2169 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 2172 411 (TestClass_marshall.cc.) 411 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
882 2173 11 ( ) 23 SB
905 2173 188 (Automatic ) 201 SB
1106 2173 472 (marshalling/unmarshalling ) 485 SB
1591 2173 88 (code ) 101 SB
1692 2173 59 (for ) 72 SB
1764 2173 166 (instances ) 179 SB
1943 2173 44 (of ) 57 SB
2000 2173 52 (the) 52 SB
471 2239 92 (class ) 97 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
568 2250 180 (TestClass) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
748 2239 22 (. ) 27 SB
775 2239 218 (Marshalling ) 223 SB
998 2239 88 (code ) 93 SB
1091 2239 59 (for ) 64 SB
1155 2239 147 (pointers ) 152 SB
1307 2239 73 (and ) 78 SB
1385 2239 182 (references ) 188 SB
1573 2239 82 (may ) 88 SB
1661 2239 78 (also ) 84 SB
1745 2239 49 (be ) 55 SB
1800 2239 133 (present ) 139 SB
1939 2239 45 (in ) 51 SB
1990 2239 62 (this) 62 SB
471 2302 66 (file.) 66 SB
471 2407 65 (All ) 66 SB
537 2407 44 (of ) 45 SB
582 2407 63 (the ) 64 SB
646 2407 175 (generated ) 176 SB
822 2407 124 (header ) 125 SB
947 2407 82 (files ) 83 SB
1030 2407 63 (are ) 64 SB
1094 2407 166 (produced ) 167 SB
1261 2407 88 (such ) 89 SB
1350 2407 76 (that ) 77 SB
1427 2407 82 (they ) 83 SB
1510 2407 82 (may ) 83 SB
1593 2407 49 (be ) 50 SB
1643 2407 221 (re-processed ) 223 SB
1866 2407 50 (by ) 52 SB
1918 2407 63 (the ) 65 SB
1983 2407 69 (stub) 69 SB
321 2470 1184 (generator without harm, although this procedure is not recommended.) 1184 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 2603 132 (2.4.2.) 132 SB
471 2603 249 (Directives) 249 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2727 1581 (To ensure that the header file used as input is still acceptable to standard C++ compilers, stub) 1581 SB
321 2790 190 (generation ) 199 SB
520 2790 173 (directives ) 183 SB
703 2790 63 (are ) 73 SB
776 2790 127 (hidden ) 137 SB
913 2790 120 (within ) 130 SB
1043 2790 194 (comments. ) 204 SB
1247 2790 228 (Syntactically ) 238 SB
1485 2790 82 (they ) 92 SB
1577 2790 63 (are ) 73 SB
1650 2790 131 (classed ) 141 SB
1791 2790 63 (are ) 73 SB
1864 2790 188 (declaration) 188 SB
321 2853 170 (specifiers ) 177 SB
498 2853 50 (by ) 57 SB
555 2853 63 (the ) 70 SB
625 2853 166 (grammar ) 173 SB
798 2853 90 (\(that ) 97 SB
895 2853 50 (is, ) 58 SB
953 2853 74 (like ) 82 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1035 2864 120 (static) 120 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1155 2853 11 ( ) 19 SB
1174 2853 46 (or ) 54 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1228 2864 100 (const) 100 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1328 2853 22 (, ) 30 SB
1358 2853 84 (etc.\) ) 92 SB
1450 2853 73 (and ) 81 SB
1531 2853 82 (thus ) 90 SB
1621 2853 123 (should ) 131 SB
1752 2853 140 (precede ) 148 SB
1900 2853 63 (the ) 71 SB
1971 2853 81 (class) 81 SB
321 2916 1202 (declaration to which they apply. More than one directive may be given ) 1203 SB
1524 2916 42 (at ) 43 SB
1567 2916 30 (a ) 31 SB
1598 2916 97 (time, ) 98 SB
1696 2916 129 (though ) 130 SB
1826 2916 98 (some ) 99 SB
1925 2916 127 (conflict) 127 SB
321 2979 589 (with each other. The current set is:) 589 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2031 3270 21 (8) 21 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 42 42 0 0 0 42 /Symbol font
0 0 0 fC
gs 340 3426 0 0 CB
321 311 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 314 186 (@Remote.) 186 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
657 315 11 ( ) 13 SB
670 315 163 (Indicates ) 165 SB
835 315 76 (that ) 78 SB
913 315 63 (the ) 65 SB
978 315 172 (following ) 174 SB
1152 315 92 (class ) 94 SB
1246 315 76 (will ) 78 SB
1324 315 49 (be ) 51 SB
1375 315 155 (accessed ) 157 SB
1532 315 158 (remotely ) 161 SB
1693 315 47 (so ) 50 SB
1743 315 63 (the ) 66 SB
1809 315 80 (stub ) 83 SB
1892 315 160 (generator) 160 SB
471 381 1410 (should attempt to produce client and server code and definitions to accomplish this.) 1410 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 479 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 482 236 (@NoRemote.) 236 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
707 483 11 ( ) 12 SB
719 483 77 (The ) 78 SB
797 483 157 (negation ) 158 SB
955 483 43 (to ) 44 SB
999 483 63 (the ) 64 SB
1063 483 119 (above. ) 120 SB
1183 483 47 (In ) 48 SB
1231 483 73 (this ) 74 SB
1305 483 82 (case ) 83 SB
1388 483 53 (no ) 54 SB
1442 483 89 (RPC ) 91 SB
1533 483 88 (code ) 90 SB
1623 483 76 (will ) 78 SB
1701 483 49 (be ) 51 SB
1752 483 175 (generated ) 177 SB
1929 483 59 (for ) 61 SB
1990 483 62 (this) 62 SB
471 549 103 (class. ) 106 SB
577 549 160 (However ) 163 SB
740 549 51 (its ) 54 SB
794 549 115 (public ) 118 SB
912 549 158 (interface ) 161 SB
1073 549 82 (may ) 85 SB
1158 549 75 (still ) 79 SB
1237 549 49 (be ) 53 SB
1290 549 196 (augmented ) 200 SB
1490 549 86 (with ) 90 SB
1580 549 63 (the ) 67 SB
1647 549 150 (addition ) 154 SB
1801 549 44 (of ) 48 SB
1849 549 203 (marshalling) 203 SB
471 612 970 (code depending upon the setting of the following options.) 970 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 710 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 713 300 (@AutoMarshall.) 300 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
771 714 11 ( ) 18 SB
789 714 149 (Attempt ) 156 SB
945 714 43 (to ) 50 SB
995 714 154 (generate ) 161 SB
1156 714 214 (marshalling ) 221 SB
1377 714 88 (code ) 95 SB
1472 714 59 (for ) 66 SB
1538 714 73 (this ) 80 SB
1618 714 92 (class ) 100 SB
1718 714 250 (automatically. ) 258 SB
1976 714 76 (This) 76 SB
471 780 1171 (enables instances of the class to be passed as arguments in RPC calls.) 1171 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 878 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 881 298 (@UserMarshall.) 298 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
769 882 11 ( ) 17 SB
786 882 168 (Augment ) 174 SB
960 882 63 (the ) 69 SB
1029 882 158 (interface ) 164 SB
1193 882 86 (with ) 92 SB
1285 882 214 (marshalling ) 220 SB
1505 882 170 (operation ) 176 SB
1681 882 183 (signatures ) 189 SB
1870 882 64 (but ) 70 SB
1940 882 52 (do ) 58 SB
1998 882 54 (not) 54 SB
471 948 1225 (generate the code automatically - this code must be provided by the user.) 1225 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 1046 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 1049 264 (@NoMarshall.) 264 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
735 1050 895 ( No marshalling is allowed on instances of this class.) 895 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 1151 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 1154 210 (@NoClient.) 210 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
681 1155 11 ( ) 22 SB
703 1155 194 (Applicable ) 205 SB
908 1155 84 (only ) 95 SB
1003 1155 120 (within ) 131 SB
1134 1155 30 (a ) 41 SB
1175 1155 92 (class ) 103 SB
1278 1155 199 (declaration ) 211 SB
1489 1155 73 (and ) 85 SB
1574 1155 84 (only ) 96 SB
1670 1155 43 (to ) 55 SB
1725 1155 148 (member ) 160 SB
1885 1155 167 (functions.) 167 SB
471 1221 163 (Indicates ) 178 SB
649 1221 76 (that ) 91 SB
740 1221 63 (the ) 78 SB
818 1221 172 (following ) 187 SB
1005 1221 170 (operation ) 185 SB
1190 1221 123 (should ) 138 SB
1328 1221 65 (not ) 80 SB
1408 1221 49 (be ) 64 SB
1472 1221 159 (provided ) 174 SB
1646 1221 45 (in ) 60 SB
1706 1221 63 (the ) 78 SB
1784 1221 105 (client ) 121 SB
1905 1221 147 (interface) 147 SB
471 1284 435 (regardless of its visibility.) 435 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 1382 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 41 /Times-Bold /font29 ANSIFont font
471 1383 277 (@FreeMemory) 277 SB
32 0 0 42 42 0 0 0 39 /Times-Italic /font31 ANSIFont font
748 1385 11 (.) 11 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
759 1386 11 ( ) 15 SB
774 1386 194 (Applicable ) 198 SB
972 1386 84 (only ) 88 SB
1060 1386 120 (within ) 124 SB
1184 1386 30 (a ) 34 SB
1218 1386 92 (class ) 96 SB
1314 1386 199 (declaration ) 203 SB
1517 1386 73 (and ) 78 SB
1595 1386 84 (only ) 89 SB
1684 1386 43 (to ) 48 SB
1732 1386 148 (member ) 153 SB
1885 1386 167 (functions.) 167 SB
471 1452 1528 (This option is provided to allow more explicit control over the de-allocation of memory in ) 1529 SB
2000 1452 52 (the) 52 SB
471 1515 124 (server. ) 130 SB
601 1515 163 (Consider ) 169 SB
770 1515 98 (some ) 104 SB
874 1515 170 (operation ) 176 SB
1050 1515 76 (that ) 82 SB
1132 1515 130 (returns ) 136 SB
1268 1515 30 (a ) 36 SB
1304 1515 131 (pointer ) 137 SB
1441 1515 46 (as ) 52 SB
1493 1515 30 (a ) 36 SB
1529 1515 116 (result. ) 123 SB
1652 1515 87 (This ) 94 SB
1746 1515 131 (pointer ) 138 SB
1884 1515 82 (may ) 89 SB
1973 1515 79 (have) 79 SB
471 1578 1341 (several possible semantics associated with it with regard to memory allocation. ) 1342 SB
1813 1578 131 (Firstly, ) 132 SB
1945 1578 35 (it ) 36 SB
1981 1578 71 (may) 71 SB
471 1641 124 (simply ) 126 SB
597 1641 49 (be ) 51 SB
648 1641 30 (a ) 32 SB
680 1641 89 (copy ) 91 SB
771 1641 44 (of ) 46 SB
817 1641 52 (an ) 55 SB
872 1641 143 (internal ) 146 SB
1018 1641 131 (pointer ) 134 SB
1152 1641 76 (that ) 79 SB
1231 1641 146 (remains ) 149 SB
1380 1641 95 (valid ) 98 SB
1478 1641 84 (only ) 87 SB
1565 1641 104 (while ) 107 SB
1672 1641 63 (the ) 66 SB
1738 1641 110 (object ) 113 SB
1851 1641 95 (upon ) 98 SB
1949 1641 103 (which) 103 SB
471 1704 63 (the ) 65 SB
536 1704 170 (operation ) 172 SB
708 1704 75 (was ) 77 SB
785 1704 185 (performed ) 187 SB
972 1704 117 (exists. ) 119 SB
1091 1704 175 (Secondly, ) 177 SB
1268 1704 35 (it ) 37 SB
1305 1704 82 (may ) 84 SB
1389 1704 49 (be ) 51 SB
1440 1704 30 (a ) 32 SB
1472 1704 89 (copy ) 92 SB
1564 1704 44 (of ) 47 SB
1611 1704 52 (an ) 55 SB
1666 1704 143 (internal ) 146 SB
1812 1704 131 (pointer ) 134 SB
1946 1704 64 (but ) 67 SB
2013 1704 39 (by) 39 SB
471 1767 445 (returning it the object has ) 446 SB
917 1767 122 (passed ) 123 SB
1040 1767 238 (responsibility ) 239 SB
1279 1767 59 (for ) 60 SB
1339 1767 130 (freeing ) 131 SB
1470 1767 63 (the ) 64 SB
1534 1767 110 (object ) 111 SB
1645 1767 35 (it ) 36 SB
1681 1767 114 (points ) 115 SB
1796 1767 42 (at ) 43 SB
1839 1767 43 (to ) 44 SB
1883 1767 63 (the ) 64 SB
1947 1767 105 (caller.) 105 SB
471 1830 141 (Finally, ) 149 SB
620 1830 35 (it ) 43 SB
663 1830 82 (may ) 90 SB
753 1830 98 (point ) 106 SB
859 1830 43 (to ) 51 SB
910 1830 30 (a ) 38 SB
948 1830 126 (freshly ) 134 SB
1082 1830 162 (allocated ) 170 SB
1252 1830 110 (object ) 118 SB
1370 1830 158 (allowing ) 167 SB
1537 1830 218 (independent ) 227 SB
1764 1830 146 (deletion ) 155 SB
1919 1830 50 (by ) 59 SB
1978 1830 74 (both) 74 SB
471 1893 135 (parties. ) 139 SB
610 1893 92 (Both ) 96 SB
706 1893 105 (caller ) 109 SB
815 1893 73 (and ) 77 SB
892 1893 108 (callee ) 112 SB
1004 1893 93 (must ) 97 SB
1101 1893 103 (know ) 107 SB
1208 1893 114 (which ) 118 SB
1326 1893 113 (policy ) 117 SB
1443 1893 39 (is ) 43 SB
1486 1893 45 (in ) 49 SB
1535 1893 103 (effect ) 107 SB
1642 1893 36 (if ) 40 SB
1682 1893 63 (the ) 68 SB
1750 1893 199 (application ) 204 SB
1954 1893 39 (is ) 44 SB
1998 1893 54 (not) 54 SB
471 1956 108 (either ) 121 SB
592 1956 43 (to ) 56 SB
648 1956 67 (fail ) 80 SB
728 1956 77 (\(the ) 90 SB
818 1956 118 (wrong ) 131 SB
949 1956 97 (party ) 110 SB
1059 1956 126 (deletes ) 139 SB
1198 1956 93 (what ) 106 SB
1304 1956 63 (the ) 76 SB
1380 1956 131 (pointer ) 144 SB
1524 1956 114 (points ) 127 SB
1651 1956 56 (at\) ) 69 SB
1720 1956 46 (or ) 59 SB
1779 1956 43 (to ) 56 SB
1835 1956 66 (use ) 79 SB
1914 1956 138 (memory) 138 SB
471 2019 1581 (inefficiently. However, even if both parties follow the same semantics, the separation of client) 1581 SB
471 2082 73 (and ) 74 SB
545 2082 113 (server ) 114 SB
659 2082 77 (into ) 78 SB
737 2082 137 (disjoint ) 138 SB
875 2082 137 (address ) 138 SB
1013 2082 119 (spaces ) 120 SB
1133 2082 70 (can ) 71 SB
1204 2082 103 (cause ) 104 SB
1308 2082 63 (the ) 64 SB
1372 2082 113 (server ) 114 SB
1486 2082 43 (to ) 45 SB
1531 2082 66 (use ) 68 SB
1599 2082 149 (memory ) 151 SB
1750 2082 214 (inefficiently ) 216 SB
1966 2082 86 (since) 86 SB
471 2145 63 (the ) 65 SB
536 2145 239 (automatically ) 241 SB
777 2145 175 (generated ) 177 SB
954 2145 88 (code ) 90 SB
1044 2145 39 (is ) 41 SB
1085 2145 154 (unaware ) 156 SB
1241 2145 44 (of ) 46 SB
1287 2145 114 (which ) 116 SB
1403 2145 177 (semantics ) 179 SB
1582 2145 63 (are ) 65 SB
1647 2145 45 (in ) 47 SB
1694 2145 114 (effect. ) 116 SB
1810 2145 37 (It ) 39 SB
1849 2145 82 (thus ) 84 SB
1933 2145 75 (errs ) 77 SB
2010 2145 42 (on) 42 SB
471 2208 1287 (the side of caution and will not delete memory unless this option is in effect.) 1287 SB
471 2313 77 (The ) 86 SB
557 2313 172 (following ) 181 SB
738 2313 173 (directives ) 182 SB
920 2313 63 (are ) 72 SB
992 2313 84 (only ) 93 SB
1085 2313 183 (applicable ) 192 SB
1277 2313 45 (in ) 54 SB
1331 2313 63 (the ) 72 SB
1403 2313 199 (declaration ) 208 SB
1611 2313 44 (of ) 53 SB
1664 2313 30 (a ) 39 SB
1703 2313 181 (parameter ) 190 SB
1893 2313 63 (list ) 72 SB
1965 2313 59 (for ) 68 SB
2033 2313 19 (a) 19 SB
321 2376 1446 (member function. They modify the default parameter passing behaviour appropriately) 1446 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 2474 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 2477 89 (@In.) 89 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
560 2478 11 ( ) 15 SB
575 2478 103 (Mark ) 107 SB
682 2478 181 (parameter ) 185 SB
867 2478 46 (as ) 50 SB
917 2478 99 (input ) 103 SB
1020 2478 95 (only. ) 100 SB
1120 2478 87 (This ) 92 SB
1212 2478 39 (is ) 44 SB
1256 2478 63 (the ) 68 SB
1324 2478 127 (default ) 132 SB
1456 2478 59 (for ) 64 SB
1520 2478 54 (all ) 59 SB
1579 2478 197 (parameters ) 202 SB
1781 2478 119 (except ) 124 SB
1905 2478 147 (pointers,) 147 SB
471 2544 768 (references and arrays unless they are marked ) 768 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1239 2555 100 (const) 100 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1339 2544 11 (.) 11 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 2642 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 2645 119 (@Out.) 119 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
590 2646 11 ( ) 14 SB
604 2646 103 (Mark ) 106 SB
710 2646 181 (parameter ) 184 SB
894 2646 46 (as ) 49 SB
943 2646 118 (output ) 121 SB
1064 2646 95 (only. ) 98 SB
1162 2646 112 (Never ) 115 SB
1277 2646 30 (a ) 33 SB
1310 2646 138 (default, ) 141 SB
1451 2646 64 (but ) 67 SB
1518 2646 112 (useful ) 115 SB
1633 2646 45 (in ) 48 SB
1681 2646 99 (those ) 102 SB
1783 2646 98 (cases ) 101 SB
1884 2646 113 (where ) 116 SB
2000 2646 52 (the) 52 SB
471 2712 181 (parameter ) 183 SB
654 2712 39 (is ) 41 SB
695 2712 57 (set ) 59 SB
754 2712 50 (by ) 52 SB
806 2712 63 (the ) 65 SB
871 2712 111 (called ) 113 SB
984 2712 170 (operation ) 172 SB
1156 2712 64 (but ) 66 SB
1222 2712 129 (invalid ) 131 SB
1353 2712 115 (before ) 117 SB
1470 2712 63 (the ) 65 SB
1535 2712 72 (call ) 74 SB
1609 2712 61 (\(so ) 63 SB
1672 2712 52 (an ) 54 SB
1726 2712 138 (attempt ) 140 SB
1866 2712 43 (to ) 45 SB
1911 2712 141 (transmit) 141 SB
471 2775 399 (it in the call could fail\).) 399 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 2873 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 2876 158 (@InOut.) 158 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
629 2877 11 ( ) 19 SB
648 2877 77 (The ) 86 SB
734 2877 127 (default ) 136 SB
870 2877 59 (for ) 68 SB
938 2877 158 (pointers, ) 167 SB
1105 2877 182 (references ) 191 SB
1296 2877 73 (and ) 82 SB
1378 2877 114 (arrays ) 123 SB
1501 2877 11 ( ) 20 SB
1521 2877 129 (Causes ) 138 SB
1659 2877 88 (such ) 97 SB
1756 2877 197 (parameters ) 206 SB
1962 2877 43 (to ) 52 SB
2014 2877 38 (be) 38 SB
471 2943 1396 (passed by value result \(copy-in, copy-out\) as an approximation to call be reference.) 1396 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2031 3270 21 (9) 21 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
471 318 77 (The ) 78 SB
549 318 127 (default ) 128 SB
677 318 134 (options ) 135 SB
812 318 59 (for ) 60 SB
872 318 30 (a ) 31 SB
903 318 92 (class ) 93 SB
996 318 63 (are ) 64 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
1060 317 197 (@Remote, ) 198 SB
1258 317 264 (@NoMarshall.) 264 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1522 318 11 ( ) 12 SB
1534 318 91 (Note ) 93 SB
1627 318 76 (that ) 78 SB
1705 318 71 (due ) 73 SB
1778 318 43 (to ) 45 SB
1823 318 193 (limitations ) 195 SB
2018 318 34 (in) 34 SB
321 381 195 (the current ) 196 SB
517 381 288 (implementation, ) 289 SB
806 381 126 (classes ) 127 SB
933 381 76 (that ) 77 SB
1010 381 70 (can ) 71 SB
1081 381 49 (be ) 50 SB
1131 381 155 (accessed ) 156 SB
1287 381 158 (remotely ) 159 SB
1446 381 124 (cannot ) 125 SB
1571 381 49 (be ) 50 SB
1621 381 198 (marshalled ) 199 SB
1820 381 73 (and ) 74 SB
1894 381 122 (passed ) 123 SB
2017 381 35 (as) 35 SB
321 444 197 (parameters.) 197 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 577 132 (2.4.3.) 132 SB
471 577 594 (Command Line Options) 594 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 701 77 (The ) 85 SB
556 701 80 (stub ) 88 SB
644 701 171 (generator ) 179 SB
823 701 153 (supports ) 161 SB
984 701 30 (a ) 38 SB
1022 701 103 (small ) 111 SB
1133 701 57 (set ) 65 SB
1198 701 44 (of ) 52 SB
1250 701 177 (command ) 186 SB
1436 701 75 (line ) 84 SB
1520 701 199 (arguments. ) 208 SB
1728 701 65 (All ) 74 SB
1802 701 177 (command ) 186 SB
1988 701 64 (line) 64 SB
321 764 188 (arguments ) 197 SB
518 764 76 (that ) 85 SB
603 764 85 (start ) 94 SB
697 764 86 (with ) 95 SB
792 764 30 (a ) 39 SB
831 764 115 (minus ) 124 SB
955 764 82 (sign ) 91 SB
1046 764 73 (\(for ) 82 SB
1128 764 153 (example ) 162 SB
1290 764 50 (-I, ) 59 SB
1349 764 55 (-D ) 64 SB
1413 764 84 (etc.\) ) 93 SB
1506 764 63 (are ) 72 SB
1578 764 122 (passed ) 132 SB
1710 764 138 (directly ) 148 SB
1858 764 43 (to ) 53 SB
1911 764 63 (the ) 73 SB
1984 764 68 (pre-) 68 SB
321 827 170 (processor ) 179 SB
500 827 180 (unaltered, ) 190 SB
690 827 104 (while ) 114 SB
804 827 99 (those ) 109 SB
913 827 76 (that ) 86 SB
999 827 85 (start ) 95 SB
1094 827 86 (with ) 96 SB
1190 827 30 (a ) 40 SB
1230 827 81 (plus ) 91 SB
1321 827 82 (sign ) 92 SB
1413 827 63 (\(+\) ) 73 SB
1486 827 104 (affect ) 114 SB
1600 827 63 (the ) 73 SB
1673 827 173 (execution ) 183 SB
1856 827 44 (of ) 54 SB
1910 827 63 (the ) 73 SB
1983 827 69 (stub) 69 SB
321 890 1041 (generation process in some way. The current set of options is:) 1041 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 988 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 991 58 (+S.) 58 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
529 992 11 ( ) 13 SB
542 992 163 (Indicates ) 165 SB
707 992 76 (that ) 78 SB
785 992 63 (the ) 65 SB
850 992 242 (pre-processed ) 244 SB
1094 992 118 (output ) 120 SB
1214 992 123 (should ) 125 SB
1339 992 49 (be ) 51 SB
1390 992 105 (saved ) 107 SB
1497 992 45 (in ) 47 SB
1544 992 30 (a ) 32 SB
1576 992 66 (file ) 68 SB
1644 992 146 (suffixed ) 148 SB
1792 992 50 (by ) 52 SB
1844 992 61 ('.i'. ) 63 SB
1907 992 87 (This ) 90 SB
1997 992 55 (file) 55 SB
471 1058 933 (can later be used as input to the stub generator directly.) 933 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 1156 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 1159 65 (+w.) 65 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
536 1160 1449 ( Enable the printing of warning messages. By default only error messages are printed.) 1449 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 1261 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 1264 51 (+s ) 57 SB
528 1264 220 (servername.) 220 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
748 1265 11 ( ) 17 SB
765 1265 141 (Change ) 147 SB
912 1265 63 (the ) 69 SB
981 1265 103 (name ) 109 SB
1090 1265 44 (of ) 50 SB
1140 1265 63 (the ) 69 SB
1209 1265 113 (server ) 119 SB
1328 1265 59 (for ) 65 SB
1393 1265 30 (a ) 36 SB
1429 1265 104 (given ) 110 SB
1539 1265 158 (interface ) 164 SB
1703 1265 43 (to ) 49 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1752 1265 196 (servername) 196 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1948 1265 22 (. ) 28 SB
1976 1265 76 (This) 76 SB
471 1331 1547 (name is used by the underlying RPC mechanism to start a server process on the home node ) 1548 SB
2019 1331 33 (of) 33 SB
471 1394 173 (the object.) 173 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 1492 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 1495 202 (+[dfv]level.) 202 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
673 1496 11 ( ) 17 SB
690 1496 87 (Stub ) 93 SB
783 1496 190 (generation ) 197 SB
980 1496 199 (debugging. ) 206 SB
1186 1496 94 (Only ) 101 SB
1287 1496 106 (really ) 113 SB
1400 1496 44 (of ) 51 SB
1451 1496 66 (use ) 73 SB
1524 1496 43 (to ) 50 SB
1574 1496 63 (the ) 70 SB
1644 1496 211 (maintainers ) 218 SB
1862 1496 44 (of ) 51 SB
1913 1496 63 (the ) 70 SB
1983 1496 69 (stub) 69 SB
471 1562 315 (generation system.) 315 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 1660 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 1663 56 (+y.) 56 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
527 1664 11 ( ) 14 SB
541 1664 128 (Enable ) 132 SB
673 1664 85 (yacc ) 89 SB
762 1664 91 (level ) 95 SB
857 1664 199 (debugging. ) 203 SB
1060 1664 80 (Sets ) 84 SB
1144 1664 63 (the ) 67 SB
1211 1664 146 (variable ) 150 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1361 1675 140 (yydebug) 140 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1501 1664 11 ( ) 15 SB
1516 1664 43 (to ) 47 SB
1563 1664 32 (1 ) 36 SB
1599 1664 43 (to ) 47 SB
1646 1664 95 (force ) 99 SB
1745 1664 63 (the ) 67 SB
1812 1664 85 (yacc ) 89 SB
1901 1664 115 (parser ) 119 SB
2020 1664 32 (to) 32 SB
471 1730 1174 (print its debugging information. Included here for completeness only.) 1174 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 1863 88 (2.5.) 88 SB
426 1863 476 (Processing Caveats) 476 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1987 156 (Initially, ) 159 SB
630 1987 63 (the ) 66 SB
696 1987 99 (input ) 102 SB
798 1987 66 (file ) 69 SB
867 1987 93 (must ) 96 SB
963 1987 49 (be ) 52 SB
1015 1987 242 (pre-processed ) 246 SB
1261 1987 115 (before ) 119 SB
1380 1987 137 (parsing ) 141 SB
1521 1987 207 (commences ) 211 SB
1732 1987 43 (to ) 47 SB
1779 1987 135 (remove ) 139 SB
1918 1987 54 (all ) 58 SB
1976 1987 76 (C++) 76 SB
321 2050 238 (pre-processor ) 246 SB
567 2050 184 (directives. ) 192 SB
759 2050 57 (By ) 65 SB
824 2050 127 (default ) 135 SB
959 2050 73 (this ) 81 SB
1040 2050 258 (pre-processing ) 266 SB
1306 2050 39 (is ) 47 SB
1353 2050 92 (done ) 101 SB
1454 2050 50 (by ) 59 SB
1513 2050 161 (invoking ) 170 SB
1683 2050 63 (the ) 72 SB
1755 2050 160 (compiler ) 169 SB
1924 2050 87 (used ) 96 SB
2020 2050 32 (to) 32 SB
321 2113 906 (compile the stub generation system itself\(as specified ) 907 SB
1228 2113 42 (at ) 43 SB
1271 2113 238 (configuration ) 239 SB
1510 2113 100 (time\) ) 101 SB
1611 2113 73 (and ) 74 SB
1685 2113 138 (passing ) 139 SB
1824 2113 35 (it ) 36 SB
1860 2113 63 (the ) 64 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1924 2113 14 (-) 14 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1938 2124 20 (E) 20 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1958 2113 11 ( ) 12 SB
1970 2113 82 (\(pre-) 82 SB
321 2176 135 (process ) 139 SB
460 2176 84 (only ) 89 SB
549 2176 101 (flag\). ) 106 SB
655 2176 171 (However, ) 176 SB
831 2176 98 (some ) 103 SB
934 2176 160 (compiler ) 165 SB
1099 2176 112 (driver ) 117 SB
1216 2176 171 (programs ) 176 SB
1392 2176 145 (produce ) 150 SB
1542 2176 53 (no ) 58 SB
1600 2176 118 (output ) 123 SB
1723 2176 102 (when ) 107 SB
1830 2176 104 (given ) 109 SB
1939 2176 113 (header) 113 SB
321 2239 82 (files ) 91 SB
412 2239 58 (\(.h ) 67 SB
479 2239 96 (files\) ) 105 SB
584 2239 46 (as ) 55 SB
639 2239 99 (input ) 108 SB
747 2239 135 (\(Cfront ) 144 SB
891 2239 64 (2.1 ) 73 SB
964 2239 105 (based ) 114 SB
1078 2239 141 (systems ) 150 SB
1228 2239 155 (typically ) 164 SB
1392 2239 107 (suffer ) 116 SB
1508 2239 92 (from ) 101 SB
1609 2239 98 (this\). ) 107 SB
1716 2239 77 (The ) 86 SB
1802 2239 80 (stub ) 90 SB
1892 2239 160 (generator) 160 SB
321 2302 857 (attempts to detect this and compensate by running ) 858 SB
1179 2302 52 (an ) 53 SB
1232 2302 190 (alternative ) 191 SB
1423 2302 238 (pre-processor ) 239 SB
1662 2302 102 (\(such ) 103 SB
1765 2302 46 (as ) 47 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1812 2313 160 (/lib/cpp) 160 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1972 2302 14 (\)) 14 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1986 2302 11 ( ) 12 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1998 2302 11 ( ) 12 SB
2010 2302 42 (on) 42 SB
321 2365 63 (the ) 69 SB
390 2365 99 (input ) 105 SB
495 2365 66 (file ) 72 SB
567 2365 45 (in ) 51 SB
618 2365 73 (this ) 79 SB
697 2365 93 (case. ) 100 SB
797 2365 114 (While ) 121 SB
918 2365 73 (this ) 80 SB
998 2365 123 (should ) 130 SB
1128 2365 145 (produce ) 152 SB
1280 2365 196 (compilable ) 203 SB
1483 2365 118 (output ) 125 SB
1608 2365 35 (it ) 42 SB
1650 2365 82 (may ) 89 SB
1739 2365 65 (not ) 72 SB
1811 2365 196 (necessarily ) 203 SB
2014 2365 38 (be) 38 SB
321 2428 338 (correct if the driver ) 339 SB
660 2428 155 (program ) 156 SB
816 2428 163 (normally ) 164 SB
980 2428 145 (invoked ) 146 SB
1126 2428 63 (the ) 64 SB
1190 2428 39 (C ) 40 SB
1230 2428 238 (pre-processor ) 239 SB
1469 2428 86 (with ) 87 SB
1556 2428 96 (extra ) 97 SB
1653 2428 188 (arguments ) 189 SB
1842 2428 169 (\(typically ) 170 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
2012 2439 40 (-D) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
321 2491 73 (and ) 73 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
394 2502 40 (-U) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
434 2491 117 ( flags\).) 117 SB
471 2596 87 (This ) 90 SB
561 2596 258 (pre-processing ) 261 SB
822 2596 70 (can ) 73 SB
895 2596 78 (also ) 81 SB
976 2596 103 (cause ) 106 SB
1082 2596 166 (problems ) 169 SB
1251 2596 47 (if, ) 50 SB
1301 2596 59 (for ) 62 SB
1363 2596 164 (example, ) 167 SB
1530 2596 98 (array ) 101 SB
1631 2596 92 (sizes ) 95 SB
1726 2596 91 (were ) 94 SB
1820 2596 136 (defined ) 140 SB
1960 2596 92 (using) 92 SB
321 2659 238 (pre-processor ) 242 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
563 2670 160 (#define ) 164 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
727 2659 173 (directives ) 177 SB
904 2659 112 (rather ) 116 SB
1020 2659 86 (than ) 90 SB
1110 2659 87 (C++ ) 91 SB
1201 2659 164 (language ) 168 SB
1369 2659 155 (facilities ) 159 SB
1528 2659 97 (since ) 101 SB
1629 2659 63 (the ) 67 SB
1696 2659 175 (generated ) 179 SB
1875 2659 118 (output ) 122 SB
1997 2659 55 (file) 55 SB
321 2722 683 (would no longer contain such directives.) 683 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 2855 88 (2.6.) 88 SB
426 2855 582 (Parameter Marshalling) 582 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2979 77 (The ) 91 SB
562 2979 80 (stub ) 94 SB
656 2979 171 (generator ) 185 SB
841 2979 154 (attempts ) 169 SB
1010 2979 166 (wherever ) 181 SB
1191 2979 146 (possible ) 161 SB
1352 2979 43 (to ) 58 SB
1410 2979 66 (use ) 81 SB
1491 2979 63 (the ) 78 SB
1569 2979 97 (same ) 112 SB
1681 2979 173 (statement ) 188 SB
1869 2979 120 (syntax ) 135 SB
2004 2979 48 (for) 48 SB
321 3042 285 (\(un\)marshalling ) 295 SB
616 3042 197 (parameters ) 207 SB
823 3042 44 (of ) 54 SB
877 3042 54 (all ) 64 SB
941 3042 108 (types. ) 118 SB
1059 3042 57 (To ) 67 SB
1126 3042 73 (this ) 83 SB
1209 3042 72 (end ) 82 SB
1291 3042 51 (its ) 62 SB
1353 3042 82 (uses ) 93 SB
1446 3042 195 (overloaded ) 206 SB
1652 3042 59 (<< ) 70 SB
1722 3042 187 (\(marshall\) ) 198 SB
1920 3042 73 (and ) 84 SB
2004 3042 48 (>>) 48 SB
321 3105 230 (\(unmarshall\) ) 236 SB
557 3105 186 (operations ) 192 SB
749 3105 135 (applied ) 141 SB
890 3105 43 (to ) 49 SB
939 3105 63 (the ) 69 SB
1008 3105 89 (RPC ) 95 SB
1103 3105 127 (buffers ) 133 SB
1236 3105 60 (\(as ) 66 SB
1302 3105 231 (implemented ) 237 SB
1539 3105 50 (by ) 56 SB
1595 3105 63 (the ) 69 SB
1664 3105 92 (class ) 99 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1763 3116 180 (RpcBuffer) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1943 3105 36 (\). ) 43 SB
1986 3105 66 (The) 66 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (10) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
321 276 156 (standard ) 159 SB
480 276 89 (RPC ) 92 SB
572 276 111 (buffer ) 114 SB
686 276 92 (class ) 95 SB
781 276 152 (contains ) 155 SB
936 276 186 (operations ) 189 SB
1125 276 43 (to ) 46 SB
1171 276 230 (\(un\)marshall ) 233 SB
1404 276 54 (all ) 57 SB
1461 276 44 (of ) 47 SB
1508 276 63 (the ) 66 SB
1574 276 156 (standard ) 159 SB
1733 276 87 (C++ ) 90 SB
1823 276 97 (types ) 100 SB
1923 276 73 (and ) 77 SB
2000 276 52 (the) 52 SB
321 339 80 (stub ) 87 SB
408 339 171 (generator ) 179 SB
587 339 76 (will ) 84 SB
671 339 111 (create ) 119 SB
790 339 80 (new ) 88 SB
878 339 285 (\(un\)marshalling ) 293 SB
1171 339 186 (operations ) 194 SB
1365 339 59 (for ) 67 SB
1432 339 180 (structured ) 188 SB
1620 339 97 (types ) 105 SB
1725 339 173 (whenever ) 181 SB
1906 339 146 (possible.) 146 SB
321 402 499 (Thus a statement of the form:) 499 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1006 500 360 (rpcBuffer1 << var1) 360 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 593 175 (marshalls ) 180 SB
651 593 63 (the ) 68 SB
719 593 146 (variable ) 151 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
870 604 80 (var1) 80 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
950 593 11 ( ) 16 SB
966 593 77 (into ) 83 SB
1049 593 63 (the ) 69 SB
1118 593 89 (RPC ) 95 SB
1213 593 111 (buffer ) 117 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1330 604 220 (rpcBuffer1 ) 226 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1556 593 182 (regardless ) 188 SB
1744 593 44 (of ) 50 SB
1794 593 63 (the ) 69 SB
1863 593 81 (type ) 87 SB
1950 593 44 (of ) 50 SB
2000 593 52 (the) 52 SB
321 656 146 (variable.) 146 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 789 132 (2.6.1.) 132 SB
471 789 696 (Marshalling Class Instances) 696 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 913 678 (To support the above style of parameter ) 679 SB
1150 913 214 (marshalling ) 215 SB
1365 913 63 (the ) 64 SB
1429 913 80 (stub ) 81 SB
1510 913 171 (generator ) 172 SB
1682 913 170 (generates ) 171 SB
1853 913 129 (several ) 130 SB
1983 913 69 (new) 69 SB
321 976 484 (operations for any class that ) 485 SB
806 976 39 (is ) 40 SB
846 976 138 (marked ) 139 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
985 987 260 (@AutoMarshall) 260 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1245 976 22 (. ) 23 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1268 976 131 (Firstly, ) 132 SB
1400 976 35 (it ) 36 SB
1436 976 170 (generates ) 171 SB
1607 976 204 (appropriate ) 205 SB
1812 976 191 (definitions ) 192 SB
2004 976 48 (for) 48 SB
321 1039 63 (the ) 73 SB
394 1039 186 (operations ) 196 SB
590 1039 59 (>> ) 69 SB
659 1039 73 (and ) 83 SB
742 1039 59 (<< ) 69 SB
811 1039 76 (that ) 86 SB
897 1039 103 (allow ) 113 SB
1010 1039 63 (the ) 73 SB
1083 1039 214 (marshalling ) 224 SB
1307 1039 44 (of ) 54 SB
1361 1039 166 (instances ) 176 SB
1537 1039 44 (of ) 54 SB
1591 1039 63 (the ) 73 SB
1664 1039 103 (class, ) 114 SB
1778 1039 147 (pointers ) 158 SB
1936 1039 43 (to ) 54 SB
1990 1039 62 (and) 62 SB
321 1102 182 (references ) 187 SB
508 1102 43 (to ) 48 SB
556 1102 166 (instances ) 171 SB
727 1102 44 (of ) 49 SB
776 1102 63 (the ) 68 SB
844 1102 103 (class. ) 108 SB
952 1102 175 (Secondly, ) 180 SB
1132 1102 35 (it ) 40 SB
1172 1102 173 (augments ) 178 SB
1350 1102 63 (the ) 68 SB
1418 1102 92 (class ) 97 SB
1515 1102 175 (definition ) 180 SB
1695 1102 86 (with ) 91 SB
1786 1102 72 (two ) 77 SB
1863 1102 80 (new ) 85 SB
1948 1102 104 (public) 104 SB
321 1165 186 (operations ) 198 SB
519 1165 76 (that ) 88 SB
607 1165 63 (are ) 75 SB
682 1165 201 (responsible ) 213 SB
895 1165 59 (for ) 71 SB
966 1165 107 (doing ) 120 SB
1086 1165 63 (the ) 76 SB
1162 1165 112 (actual ) 125 SB
1287 1165 214 (marshalling ) 227 SB
1514 1165 50 (by ) 63 SB
1577 1165 214 (marshalling ) 227 SB
1804 1165 63 (the ) 76 SB
1880 1165 172 (individual) 172 SB
321 1228 1597 (components of the class one at a time. Typically these operations have the following signature:) 1597 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
836 1326 700 (virtual void marshall \(RpcBuffer&\);) 700 SB
816 1362 740 (virtual void unmarshall \(RpcBuffer&\);) 740 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1455 111 (These ) 115 SB
586 1455 147 (routines ) 151 SB
737 1455 63 (are ) 67 SB
804 1455 84 (only ) 88 SB
892 1455 153 (declared ) 157 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1049 1455 113 (virtual) 113 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1162 1455 11 ( ) 15 SB
1177 1455 36 (if ) 40 SB
1217 1455 63 (the ) 67 SB
1284 1455 92 (class ) 96 SB
1380 1455 43 (to ) 47 SB
1427 1455 49 (be ) 53 SB
1480 1455 198 (marshalled ) 203 SB
1683 1455 39 (is ) 44 SB
1727 1455 136 (derived ) 141 SB
1868 1455 92 (from ) 97 SB
1965 1455 87 (some) 87 SB
321 1518 963 (other class\(es\). Otherwise the virtual keyword is omitted.) 963 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 1651 132 (2.6.2.) 132 SB
471 1651 916 (Marshalling Pointers and References) 916 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1775 54 (So ) 70 SB
541 1775 76 (that ) 92 SB
633 1775 215 (complicated ) 231 SB
864 1775 82 (data ) 98 SB
962 1775 175 (structures ) 191 SB
1153 1775 102 (\(such ) 118 SB
1271 1775 46 (as ) 63 SB
1334 1775 79 (lists ) 96 SB
1430 1775 73 (and ) 90 SB
1520 1775 104 (trees\) ) 121 SB
1641 1775 70 (can ) 87 SB
1728 1775 49 (be ) 66 SB
1794 1775 258 (\(un\)marshalled) 258 SB
321 1838 239 (automatically ) 240 SB
561 1838 63 (the ) 64 SB
625 1838 147 (routines ) 148 SB
773 1838 59 (\(in ) 60 SB
833 1838 63 (the ) 64 SB
897 1838 92 (class ) 93 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
990 1849 180 (RpcBuffer) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1170 1838 25 (\) ) 26 SB
1196 1838 76 (that ) 77 SB
1273 1838 52 (do ) 53 SB
1326 1838 63 (the ) 64 SB
1390 1838 75 (real ) 76 SB
1466 1838 96 (work ) 97 SB
1563 1838 44 (of ) 46 SB
1609 1838 165 (encoding ) 167 SB
1776 1838 63 (the ) 65 SB
1841 1838 82 (data ) 84 SB
1925 1838 127 (attempt) 127 SB
321 1901 43 (to ) 45 SB
366 1901 89 (keep ) 91 SB
457 1901 96 (track ) 98 SB
555 1901 44 (of ) 46 SB
601 1901 147 (whether ) 149 SB
750 1901 30 (a ) 32 SB
782 1901 181 (parameter ) 183 SB
965 1901 68 (has ) 71 SB
1036 1901 89 (been ) 92 SB
1128 1901 129 (packed ) 132 SB
1260 1901 77 (into ) 80 SB
1340 1901 63 (the ) 66 SB
1406 1901 111 (buffer ) 114 SB
1520 1901 145 (already, ) 148 SB
1668 1901 45 (in ) 48 SB
1716 1901 114 (which ) 117 SB
1833 1901 82 (case ) 85 SB
1918 1901 35 (it ) 38 SB
1956 1901 39 (is ) 42 SB
1998 1901 54 (not) 54 SB
321 1964 870 (packed again. Instead a special flag is inserted that ) 871 SB
1192 1964 63 (the ) 64 SB
1256 1964 188 (unpacking ) 189 SB
1445 1964 147 (routines ) 148 SB
1593 1964 70 (can ) 71 SB
1664 1964 171 (recognise ) 172 SB
1836 1964 73 (and ) 74 SB
1910 1964 70 (can ) 71 SB
1981 1964 71 (thus) 71 SB
321 2027 684 (compensate appropriately. This helps to ) 685 SB
1006 2027 121 (ensure ) 122 SB
1128 2027 76 (that ) 77 SB
1205 2027 188 (arguments ) 189 SB
1394 2027 84 (only ) 85 SB
1479 2027 62 (get ) 63 SB
1542 2027 149 (encoded ) 150 SB
1692 2027 73 (and ) 74 SB
1766 2027 148 (decoded ) 149 SB
1915 2027 100 (once. ) 101 SB
2016 2027 36 (In) 36 SB
321 2090 161 (addition, ) 168 SB
489 2090 63 (the ) 70 SB
559 2090 221 (programmer ) 228 SB
787 2090 70 (can ) 77 SB
864 2090 155 (suppress ) 162 SB
1026 2090 63 (the ) 70 SB
1096 2090 177 (automatic ) 184 SB
1280 2090 190 (generation ) 197 SB
1477 2090 44 (of ) 51 SB
1528 2090 214 (marshalling ) 221 SB
1749 2090 88 (code ) 95 SB
1844 2090 73 (and ) 81 SB
1925 2090 127 (provide) 127 SB
321 2153 671 (alternative implementations if required ) 672 SB
993 2153 144 (through ) 145 SB
1138 2153 30 (a ) 31 SB
1169 2153 177 (command ) 178 SB
1347 2153 14 (\() 14 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1361 2164 260 (@UserMarshall) 260 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1621 2153 25 (\) ) 26 SB
1647 2153 181 (embedded ) 182 SB
1829 2153 45 (in ) 46 SB
1875 2153 63 (the ) 64 SB
1939 2153 113 (header) 113 SB
321 2216 407 (file describing the class.) 407 SB
471 2321 57 (To ) 63 SB
534 2321 121 (ensure ) 127 SB
661 2321 76 (that ) 82 SB
743 2321 87 (C++ ) 93 SB
836 2321 166 (reference ) 172 SB
1008 2321 177 (semantics ) 183 SB
1191 2321 63 (are ) 70 SB
1261 2321 127 (obeyed ) 134 SB
1395 2321 63 (the ) 70 SB
1465 2321 80 (stub ) 87 SB
1552 2321 171 (generator ) 178 SB
1730 2321 174 (implicitly ) 181 SB
1911 2321 141 (converts) 141 SB
321 2384 182 (references ) 183 SB
504 2384 77 (into ) 79 SB
583 2384 147 (pointers ) 149 SB
732 2384 42 (at ) 44 SB
776 2384 63 (the ) 65 SB
841 2384 105 (client ) 107 SB
948 2384 73 (and ) 75 SB
1023 2384 175 (marshalls ) 177 SB
1200 2384 63 (the ) 65 SB
1265 2384 160 (resulting ) 162 SB
1427 2384 142 (pointer. ) 144 SB
1571 2384 120 (Server ) 122 SB
1693 2384 88 (code ) 90 SB
1783 2384 137 (ensures ) 139 SB
1922 2384 76 (that ) 78 SB
2000 2384 52 (the) 52 SB
321 2447 81 (user ) 88 SB
409 2447 39 (is ) 46 SB
455 2447 75 (still ) 82 SB
537 2447 122 (passed ) 129 SB
666 2447 30 (a ) 37 SB
703 2447 166 (reference ) 173 SB
876 2447 46 (as ) 53 SB
929 2447 35 (it ) 42 SB
971 2447 146 (expects. ) 153 SB
1124 2447 91 (Note ) 98 SB
1222 2447 76 (that ) 83 SB
1305 2447 73 (this ) 80 SB
1385 2447 143 (implicit ) 150 SB
1535 2447 194 (conversion ) 202 SB
1737 2447 84 (only ) 92 SB
1829 2447 119 (occurs ) 127 SB
1956 2447 36 (if ) 44 SB
2000 2447 52 (the) 52 SB
321 2510 166 (reference ) 172 SB
493 2510 39 (is ) 45 SB
538 2510 43 (to ) 49 SB
587 2510 30 (a ) 36 SB
623 2510 223 (fundamental ) 229 SB
852 2510 81 (type ) 87 SB
939 2510 14 (\() 14 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
953 2521 60 (int) 60 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1013 2510 22 (, ) 28 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1041 2521 80 (char) 80 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1121 2510 22 (, ) 28 SB
1149 2510 92 (class ) 98 SB
1247 2510 161 (instance, ) 167 SB
1414 2510 95 (etc.\). ) 101 SB
1515 2510 108 (Other ) 115 SB
1630 2510 182 (references ) 189 SB
1819 2510 73 (\(for ) 80 SB
1899 2510 153 (example,) 153 SB
321 2573 743 (reference to pointer\) are passed unmodified.) 743 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 2706 132 (2.6.3.) 132 SB
471 2706 787 (Writing User Marshalling Code) 787 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2830 69 (For ) 76 SB
547 2830 126 (classes ) 134 SB
681 2830 138 (marked ) 146 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
827 2841 260 (@UserMarshall) 260 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1087 2830 11 ( ) 19 SB
1106 2830 63 (the ) 71 SB
1177 2830 92 (class ) 100 SB
1277 2830 93 (must ) 101 SB
1378 2830 135 (include ) 143 SB
1521 2830 186 (operations ) 194 SB
1715 2830 86 (with ) 94 SB
1809 2830 63 (the ) 71 SB
1880 2830 172 (signatures) 172 SB
321 2893 120 (shown ) 126 SB
447 2893 108 (above ) 114 SB
561 2893 90 (\(that ) 96 SB
657 2893 50 (is, ) 56 SB
713 2893 82 (they ) 88 SB
801 2893 76 (will ) 82 SB
883 2893 65 (not ) 71 SB
954 2893 49 (be ) 55 SB
1009 2893 239 (automatically ) 245 SB
1254 2893 170 (inserted\). ) 177 SB
1431 2893 234 (Furthermore, ) 241 SB
1672 2893 63 (the ) 70 SB
1742 2893 221 (programmer ) 228 SB
1970 2893 82 (must) 82 SB
321 2956 121 (supply ) 127 SB
448 2956 204 (appropriate ) 210 SB
658 2956 191 (definitions ) 197 SB
855 2956 44 (of ) 50 SB
905 2956 97 (these ) 103 SB
1008 2956 197 (operations. ) 203 SB
1211 2956 77 (The ) 83 SB
1294 2956 80 (stub ) 87 SB
1381 2956 171 (generator ) 178 SB
1559 2956 87 (will, ) 94 SB
1653 2956 164 (however, ) 171 SB
1824 2956 228 (automatically) 228 SB
321 3019 145 (produce ) 149 SB
470 3019 54 (all ) 58 SB
528 3019 98 (other ) 102 SB
630 3019 214 (marshalling ) 219 SB
849 3019 88 (code ) 93 SB
942 3019 209 (\(overloaded ) 214 SB
1156 3019 178 (operators, ) 183 SB
1339 3019 84 (etc.\) ) 89 SB
1428 3019 43 (to ) 48 SB
1476 3019 121 (ensure ) 126 SB
1602 3019 76 (that ) 81 SB
1683 3019 131 (pointer ) 136 SB
1819 3019 73 (and ) 78 SB
1897 3019 155 (reference) 155 SB
321 3082 1013 (semantics are maintained. A trivial example is given below:) 1013 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (11) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
0 0 0 fC
321 311 380 (class AnAppointment) 380 SB
321 347 20 ({) 20 SB
321 383 140 (public:) 140 SB
413 419 740 (// Ignore operations here for clarity) 740 SB
413 455 60 (...) 60 SB
413 527 960 (// These are the required marshalling operations) 960 SB
413 563 660 (void marshall \(RpcBuffer&\) const;) 660 SB
413 599 580 (void unmarshall \(RpcBuffer&\);) 580 SB
321 671 160 (private:) 160 SB
413 707 260 (time_t start;) 260 SB
413 743 220 (time_t end;) 220 SB
413 779 380 (String description;) 380 SB
413 815 360 (Boolean confirmed;) 360 SB
321 851 40 (};) 40 SB
321 923 660 (// Marshall each variable in turn) 660 SB
321 959 1160 (void AnAppointment::marshall \( RpcBuffer& rpc_buff \) const) 1160 SB
321 995 20 ({) 20 SB
413 1031 360 (rpc_buff << start;) 360 SB
413 1067 320 (rpc_buff << end;) 320 SB
413 1103 480 (rpc_buff << description;) 480 SB
413 1139 440 (rpc_buff << confirmed;) 440 SB
321 1175 20 (}) 20 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 1296 88 (2.7.) 88 SB
426 1296 784 (Controlling Remote Invocations) 784 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1420 77 (The ) 84 SB
555 1420 175 (generated ) 182 SB
737 1420 80 (stub ) 87 SB
824 1420 88 (code ) 95 SB
919 1420 155 (interacts ) 162 SB
1081 1420 86 (with ) 93 SB
1174 1420 63 (the ) 70 SB
1244 1420 194 (underlying ) 201 SB
1445 1420 89 (RPC ) 96 SB
1541 1420 204 (mechanism ) 211 SB
1752 1420 62 (via ) 69 SB
1821 1420 96 (three ) 104 SB
1925 1420 127 (classes:) 127 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1494 320 (ClientRpcManager) 320 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
641 1483 22 (, ) 38 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
679 1494 180 (ClientRpc) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
859 1483 11 ( ) 27 SB
886 1483 73 (and ) 89 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
975 1494 180 (ServerRpc) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1155 1483 22 (. ) 38 SB
1193 1483 77 (The ) 93 SB
1286 1483 158 (interface ) 174 SB
1460 1483 43 (to ) 59 SB
1519 1483 97 (these ) 113 SB
1632 1483 126 (classes ) 143 SB
1775 1483 39 (is ) 56 SB
1831 1483 170 (described ) 187 SB
2018 1483 34 (in) 34 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
321 1545 184 (Appendix ) 187 SB
508 1545 29 (B) 29 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
537 1546 22 (. ) 25 SB
562 1546 77 (The ) 80 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
642 1557 180 (ClientRpc) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
822 1546 11 ( ) 15 SB
837 1546 92 (class ) 96 SB
933 1546 39 (is ) 43 SB
976 1546 63 (the ) 67 SB
1043 1546 129 (client's ) 133 SB
1176 1546 158 (interface ) 162 SB
1338 1546 43 (to ) 47 SB
1385 1546 63 (the ) 67 SB
1452 1546 89 (RPC ) 93 SB
1545 1546 215 (mechanism, ) 219 SB
1764 1546 104 (while ) 108 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1872 1557 180 (ServerRpc) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
321 1609 182 (represents ) 183 SB
504 1609 63 (the ) 64 SB
568 1609 252 (corresponding ) 253 SB
821 1609 113 (server ) 114 SB
935 1609 89 (side. ) 90 SB
1025 1609 11 ( ) 12 SB
1037 1609 140 (Control ) 141 SB
1178 1609 84 (over ) 85 SB
1263 1609 63 (the ) 65 SB
1328 1609 89 (RPC ) 91 SB
1419 1609 204 (mechanism ) 206 SB
1625 1609 102 (\(such ) 104 SB
1729 1609 46 (as ) 48 SB
1777 1609 124 (setting ) 126 SB
1903 1609 149 (protocol,) 149 SB
321 1672 1173 (or timeout and retry values\) is assumed to be the responsibility of the ) 1173 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1494 1683 180 (ClientRpc) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1674 1672 103 ( class.) 103 SB
471 1777 96 (Each ) 101 SB
572 1777 127 (remote ) 132 SB
704 1777 110 (object ) 115 SB
819 1777 45 (in ) 50 SB
869 1777 63 (the ) 68 SB
937 1777 105 (client ) 110 SB
1047 1777 68 (has ) 73 SB
1120 1777 30 (a ) 35 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1155 1788 180 (ClientRpc) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1335 1777 11 ( ) 16 SB
1351 1777 92 (class ) 97 SB
1448 1777 150 (instance ) 155 SB
1603 1777 76 (that ) 81 SB
1684 1777 253 (communicates ) 258 SB
1942 1777 86 (with ) 91 SB
2033 1777 19 (a) 19 SB
321 1840 170 (matching ) 170 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
491 1851 180 (ServerRpc) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
671 1840 1115 ( class instance in the server. To ensure that only a single instance ) 1116 SB
1787 1840 44 (of ) 45 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1832 1851 180 (ClientRpc) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
2012 1840 11 ( ) 12 SB
2024 1840 28 (is) 28 SB
321 1903 132 (created ) 133 SB
454 1903 65 (per ) 66 SB
520 1903 121 (object, ) 122 SB
642 1903 63 (the ) 64 SB
706 1903 105 (client ) 106 SB
812 1903 78 (side ) 79 SB
891 1903 80 (stub ) 82 SB
973 1903 88 (code ) 90 SB
1063 1903 143 (actually ) 145 SB
1208 1903 155 (interacts ) 157 SB
1365 1903 86 (with ) 88 SB
1453 1903 166 (instances ) 168 SB
1621 1903 44 (of ) 46 SB
1667 1903 63 (the ) 65 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1732 1914 320 (ClientRpcManager) 320 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
321 1966 92 (class ) 95 SB
416 1966 114 (which ) 117 SB
533 1966 178 (maintains ) 181 SB
714 1966 166 (reference ) 170 SB
884 1966 120 (counts ) 124 SB
1008 1966 73 (and ) 77 SB
1085 1966 162 (performs ) 166 SB
1251 1966 63 (the ) 67 SB
1318 1966 112 (actual ) 116 SB
1434 1966 113 (server ) 117 SB
1551 1966 166 (initiation ) 170 SB
1721 1966 73 (and ) 77 SB
1798 1966 254 (termination.By) 254 SB
321 2029 127 (default ) 132 SB
453 2029 54 (all ) 59 SB
512 2029 127 (remote ) 132 SB
644 2029 126 (objects ) 131 SB
775 2029 90 (have ) 95 SB
870 2029 52 (an ) 58 SB
928 2029 96 (extra ) 102 SB
1030 2029 172 (argument ) 178 SB
1208 2029 45 (in ) 51 SB
1259 2029 63 (the ) 69 SB
1328 2029 181 (parameter ) 187 SB
1515 2029 63 (list ) 69 SB
1584 2029 59 (for ) 65 SB
1649 2029 88 (each ) 94 SB
1743 2029 200 (constructor ) 206 SB
1949 2029 103 (which) 103 SB
321 2092 97 (takes ) 99 SB
420 2092 52 (an ) 54 SB
474 2092 150 (instance ) 152 SB
626 2092 44 (of ) 46 SB
672 2092 63 (the ) 65 SB
737 2092 92 (class ) 94 SB
831 2092 11 ( ) 13 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
844 2103 320 (ClientRpcManager) 320 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1164 2092 22 (. ) 25 SB
1189 2092 41 (A ) 44 SB
1233 2092 127 (default ) 130 SB
1363 2092 150 (instance ) 153 SB
1516 2092 44 (of ) 47 SB
1563 2092 73 (this ) 76 SB
1639 2092 92 (class ) 95 SB
1734 2092 39 (is ) 42 SB
1776 2092 132 (created ) 135 SB
1911 2092 36 (if ) 39 SB
1950 2092 71 (one ) 74 SB
2024 2092 28 (is) 28 SB
321 2155 65 (not ) 77 SB
398 2155 168 (explicitly ) 180 SB
578 2155 104 (given ) 116 SB
694 2155 42 (at ) 54 SB
748 2155 110 (object ) 122 SB
870 2155 219 (construction ) 231 SB
1101 2155 97 (time. ) 109 SB
1210 2155 87 (This ) 99 SB
1309 2155 76 (will ) 88 SB
1397 2155 45 (in ) 58 SB
1455 2155 81 (turn ) 94 SB
1549 2155 111 (create ) 124 SB
1673 2155 30 (a ) 43 SB
1716 2155 127 (default ) 140 SB
1856 2155 150 (instance ) 163 SB
2019 2155 33 (of) 33 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 2229 180 (ClientRpc) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
501 2218 22 (. ) 26 SB
527 2218 38 (If ) 42 SB
569 2218 137 (explicit ) 141 SB
710 2218 130 (control ) 134 SB
844 2218 39 (is ) 43 SB
887 2218 152 (required ) 156 SB
1043 2218 35 (it ) 39 SB
1082 2218 39 (is ) 43 SB
1125 2218 63 (the ) 67 SB
1192 2218 245 (programmer's ) 249 SB
1441 2218 238 (responsibility ) 243 SB
1684 2218 43 (to ) 48 SB
1732 2218 111 (create ) 116 SB
1848 2218 166 (instances ) 171 SB
2019 2218 33 (of) 33 SB
321 2281 473 (these classes as appropriate.) 473 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
471 2386 80 (Note) 80 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
551 2386 59 (: if ) 60 SB
611 2386 63 (the ) 64 SB
675 2386 127 (default ) 128 SB
803 2386 166 (instances ) 167 SB
970 2386 63 (are ) 64 SB
1034 2386 87 (used ) 88 SB
1122 2386 35 (it ) 36 SB
1158 2386 39 (is ) 40 SB
1198 2386 65 (not ) 66 SB
1264 2386 146 (possible ) 147 SB
1411 2386 43 (to ) 44 SB
1455 2386 116 (obtain ) 117 SB
1572 2386 30 (a ) 31 SB
1603 2386 166 (reference ) 167 SB
1770 2386 43 (to ) 44 SB
1814 2386 96 (them ) 97 SB
1911 2386 88 (after ) 89 SB
2000 2386 52 (the) 52 SB
321 2449 1145 (remote object has been constructed. As such, changing timeout and ) 1146 SB
1467 2449 90 (retry ) 91 SB
1558 2449 117 (values ) 118 SB
1676 2449 148 (between ) 149 SB
1825 2449 127 (remote ) 128 SB
1953 2449 99 (object) 99 SB
321 2512 454 (invocations is not possible.) 454 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 2645 132 (2.7.1.) 132 SB
471 2645 676 (Changing RPC Parameters) 676 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2769 77 (The ) 80 SB
551 2769 153 (supplied ) 157 SB
708 2769 277 (implementation ) 281 SB
989 2769 44 (of ) 48 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1037 2780 180 (ClientRpc) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1217 2769 11 ( ) 15 SB
1232 2769 153 (supports ) 157 SB
1389 2769 52 (an ) 56 SB
1445 2769 170 (operation ) 174 SB
1619 2769 111 (called ) 115 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1734 2780 140 (control) 140 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1874 2769 22 (. ) 26 SB
1900 2769 152 (Invoking) 152 SB
321 2832 1517 (this returns to the programmer a control object that supports several operations including:) 1517 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 2930 19 (\267) 19 SB
gr
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
471 2945 140 (setHost) 140 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
611 2934 1366 (. Controls the host upon which the server process is created \(default: client host\).) 1366 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 3035 19 (\267) 19 SB
gr
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
471 3050 200 (setTimeout) 200 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
671 3039 1108 (. Sets the RPC timeout. This value is in milliseconds \(default: 20\)) 1108 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (12) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 42 42 0 0 0 42 /Symbol font
0 0 0 fC
gs 340 3426 0 0 CB
321 311 19 (\267) 19 SB
gr
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
471 326 220 (setProtocol) 220 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
691 315 861 (. Sets the RPC protocol \(default: datagram \(UDP\)\).) 861 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 416 19 (\267) 19 SB
gr
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
471 431 160 (setRetry) 160 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
631 420 1001 (. Allows the number of retries per call to be set \(default: 3\).) 1001 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 521 19 (\267) 19 SB
gr
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
471 536 280 (setServiceName) 280 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
751 525 1083 (. The RPC system allows differentiation between the type of the ) 1084 SB
1835 525 110 (object ) 111 SB
1946 525 106 (\(name) 106 SB
471 591 44 (of ) 47 SB
518 591 63 (the ) 66 SB
584 591 106 (class\) ) 109 SB
693 591 73 (and ) 76 SB
769 591 63 (the ) 66 SB
835 591 103 (name ) 106 SB
941 591 44 (of ) 47 SB
988 591 63 (the ) 66 SB
1054 591 113 (server ) 116 SB
1170 591 114 (which ) 117 SB
1287 591 39 (is ) 42 SB
1329 591 182 (associated ) 186 SB
1515 591 86 (with ) 90 SB
1605 591 63 (the ) 67 SB
1672 591 121 (object. ) 125 SB
1797 591 57 (By ) 61 SB
1858 591 138 (default, ) 142 SB
2000 591 52 (the) 52 SB
471 654 416 (server is given the same ) 417 SB
888 654 103 (name ) 104 SB
992 654 46 (as ) 47 SB
1039 654 63 (the ) 64 SB
1103 654 134 (object's ) 135 SB
1238 654 103 (class, ) 104 SB
1342 654 64 (but ) 65 SB
1407 654 36 (if ) 37 SB
1444 654 73 (this ) 74 SB
1518 654 68 (has ) 69 SB
1587 654 89 (been ) 90 SB
1677 654 152 (changed ) 153 SB
1830 654 117 (\(using ) 118 SB
1948 654 63 (the ) 64 SB
2012 654 40 (+s) 40 SB
471 717 118 (option ) 119 SB
590 717 44 (of ) 45 SB
635 717 63 (the ) 64 SB
699 717 80 (stub ) 81 SB
780 717 171 (generator ) 172 SB
952 717 63 (see ) 64 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
1016 716 160 (Chapter ) 161 SB
1177 716 21 (2) 21 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1198 717 25 (\) ) 26 SB
1224 717 85 (then ) 86 SB
1310 717 63 (the ) 64 SB
1374 717 80 (new ) 81 SB
1455 717 113 (server ) 115 SB
1570 717 103 (name ) 105 SB
1675 717 70 (can ) 72 SB
1747 717 49 (be ) 51 SB
1798 717 160 (specified ) 162 SB
1960 717 92 (using) 92 SB
471 780 243 (this operation.) 243 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 913 132 (2.7.2.) 132 SB
471 913 218 (Example) 218 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1037 38 (If ) 41 SB
512 1037 30 (a ) 33 SB
545 1037 105 (client ) 108 SB
653 1037 53 (on ) 56 SB
709 1037 71 (one ) 74 SB
783 1037 155 (machine ) 158 SB
941 1037 124 (wishes ) 127 SB
1068 1037 43 (to ) 46 SB
1114 1037 111 (create ) 114 SB
1228 1037 52 (an ) 55 SB
1283 1037 11 ( ) 14 SB
1297 1037 110 (object ) 113 SB
1410 1037 138 (\(named ) 141 SB
1551 1037 17 (") 17 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1568 1048 220 (EspritCosts) 220 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1788 1037 42 ("\) ) 45 SB
1833 1037 53 (on ) 57 SB
1890 1037 30 (a ) 34 SB
1924 1037 128 (specific) 128 SB
321 1100 234 (node \(called ") 234 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
555 1111 120 (ulgham) 120 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
675 1100 568 ("\), the following code is required:) 568 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1198 200 (char *name) 200 SB
788 1198 320 (= "EspritCosts";) 320 SB
321 1234 280 (char *hostname) 280 SB
788 1234 220 (= "ulgham";) 220 SB
321 1270 340 (char *servicename) 340 SB
696 1270 440 (= "SpreadSheetServer";) 440 SB
321 1306 100 (. . .) 100 SB
321 1342 460 (//some RPC related code) 460 SB
321 1414 1100 (// create a handle on the RPC mechanism for this server) 1100 SB
321 1450 760 (ClientRpc  *RPCClient = new ClientRpc;) 760 SB
321 1522 740 (// specify the location of the server) 740 SB
321 1558 840 (\(RPCClient->control\(\)\)->setHost\(hostname\);) 840 SB
321 1630 540 (// specify the servers name) 540 SB
321 1666 1040 (\(RPCClient->control\(\)\)->setServiceName\(servicename\);) 1040 SB
321 1738 620 (// set timeout and retry values) 620 SB
321 1774 840 (\(RPCClient->control\(\)\)->setTimeout\(30000\);) 840 SB
321 1810 720 (\(RPCClient->control\(\)\)->setRetry\(1\);) 720 SB
321 1882 560 (// Create Rpc manager object) 560 SB
321 1918 1200 (ClientRpcManager *RPCCtl  = new ClientRpcManager\(RPCClient\);) 1200 SB
321 1990 900 (// create remote object with given attributes) 900 SB
321 2026 780 (SpreadSheet ResearchFund\(name, RPCCtl\);) 780 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2119 77 (The ) 93 SB
564 2119 108 (above ) 124 SB
688 2119 88 (code ) 104 SB
792 2119 147 (changes ) 163 SB
955 2119 63 (the ) 80 SB
1035 2119 127 (overall ) 144 SB
1179 2119 139 (timeout ) 156 SB
1335 2119 118 (period ) 135 SB
1470 2119 59 (for ) 76 SB
1546 2119 30 (a ) 47 SB
1593 2119 104 (given ) 121 SB
1714 2119 72 (call ) 89 SB
1803 2119 53 (on ) 70 SB
1873 2119 63 (the ) 80 SB
1953 2119 99 (object) 99 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 2193 240 (ResearchFund) 240 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
561 2182 11 ( ) 12 SB
573 2182 43 (to ) 44 SB
617 2182 49 (be ) 50 SB
667 2182 53 (30 ) 54 SB
721 2182 142 (seconds ) 144 SB
865 2182 130 (\(30000 ) 132 SB
997 2182 248 (milliseconds\). ) 250 SB
1247 2182 87 (This ) 89 SB
1336 2182 182 (represents ) 184 SB
1520 2182 63 (the ) 65 SB
1585 2182 86 (total ) 88 SB
1673 2182 86 (time ) 88 SB
1761 2182 59 (for ) 61 SB
1822 2182 63 (the ) 65 SB
1887 2182 100 (RPC, ) 102 SB
1989 2182 63 (i.e.,) 63 SB
321 2245 63 (the ) 72 SB
393 2245 86 (time ) 95 SB
488 2245 103 (taken ) 112 SB
600 2245 59 (for ) 68 SB
668 2245 219 (transmitting ) 228 SB
896 2245 63 (the ) 72 SB
968 2245 112 (initial ) 121 SB
1089 2245 89 (RPC ) 98 SB
1187 2245 132 (request ) 141 SB
1328 2245 73 (and ) 82 SB
1410 2245 172 (including ) 181 SB
1591 2245 63 (the ) 72 SB
1663 2245 117 (retries ) 126 SB
1789 2245 76 (that ) 85 SB
1874 2245 90 (have ) 100 SB
1974 2245 78 (been) 78 SB
321 2308 420 (specified \(1 in this case\).) 420 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 2441 88 (2.8.) 88 SB
426 2441 284 (Limitations) 284 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2565 139 (Remote ) 141 SB
612 2565 178 (procedure ) 180 SB
792 2565 72 (call ) 74 SB
866 2565 147 (imposes ) 149 SB
1015 2565 30 (a ) 32 SB
1047 2565 168 (restricted ) 170 SB
1217 2565 57 (set ) 59 SB
1276 2565 44 (of ) 46 SB
1322 2565 202 (capabilities ) 204 SB
1526 2565 84 (over ) 86 SB
1612 2565 187 (traditional ) 189 SB
1801 2565 99 (calls. ) 101 SB
1902 2565 96 (Thus ) 98 SB
2000 2565 52 (the) 52 SB
321 2628 80 (stub ) 85 SB
406 2628 171 (generator ) 176 SB
582 2628 147 (imposes ) 153 SB
735 2628 63 (the ) 69 SB
804 2628 172 (following ) 178 SB
982 2628 199 (restrictions ) 205 SB
1187 2628 95 (upon ) 101 SB
1288 2628 63 (the ) 69 SB
1357 2628 92 (form ) 98 SB
1455 2628 44 (of ) 50 SB
1505 2628 63 (the ) 69 SB
1574 2628 92 (class ) 98 SB
1672 2628 73 (and ) 79 SB
1751 2628 63 (the ) 69 SB
1820 2628 186 (operations ) 192 SB
2012 2628 40 (its) 40 SB
321 2691 154 (supports:) 154 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 2789 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 2792 61 (No ) 68 SB
539 2792 122 (public ) 130 SB
669 2792 174 (variables ) 182 SB
851 2792 78 (and ) 86 SB
937 2792 137 (friends.) 137 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1074 2793 11 ( ) 19 SB
1093 2793 77 (The ) 85 SB
1178 2793 166 (existence ) 174 SB
1352 2793 44 (of ) 52 SB
1404 2793 115 (public ) 123 SB
1527 2793 162 (variables ) 170 SB
1697 2793 45 (in ) 53 SB
1750 2793 30 (a ) 38 SB
1788 2793 92 (class ) 100 SB
1888 2793 164 (definition) 164 SB
471 2859 120 (breaks ) 124 SB
595 2859 63 (the ) 67 SB
662 2859 223 (fundamental ) 227 SB
889 2859 243 (encapsulation ) 247 SB
1136 2859 152 (property ) 156 SB
1292 2859 155 (assumed ) 160 SB
1452 2859 50 (by ) 55 SB
1507 2859 63 (the ) 68 SB
1575 2859 80 (stub ) 85 SB
1660 2859 182 (generator, ) 187 SB
1847 2859 47 (so ) 52 SB
1899 2859 71 (any ) 76 SB
1975 2859 77 (such) 77 SB
471 2922 1490 (variables are removed automatically \(with warnings\) as the class definition is processed.) 1490 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 3020 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 3023 61 (No ) 63 SB
534 3023 158 (variable ) 160 SB
694 3023 123 (length ) 125 SB
819 3023 184 (argument ) 186 SB
1005 3023 81 (lists.) 81 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1086 3024 11 ( ) 13 SB
1099 3024 111 (These ) 113 SB
1212 3024 63 (are ) 65 SB
1277 3024 191 (disallowed ) 193 SB
1470 3024 97 (since ) 99 SB
1569 3024 63 (the ) 65 SB
1634 3024 80 (stub ) 82 SB
1716 3024 88 (code ) 90 SB
1806 3024 106 (needs ) 108 SB
1914 3024 43 (to ) 46 SB
1960 3024 92 (know) 92 SB
471 3090 1452 (exactly the type and number of arguments to each operation for marshalling purposes.) 1452 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (13) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 42 42 0 0 0 42 /Symbol font
0 0 0 fC
gs 340 3426 0 0 CB
321 311 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 314 61 (No ) 63 SB
534 314 107 (static ) 109 SB
643 314 159 (member ) 162 SB
805 314 174 (variables.) 174 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
979 315 11 ( ) 14 SB
993 315 136 (Classes ) 139 SB
1132 315 124 (cannot ) 127 SB
1259 315 136 (contain ) 139 SB
1398 315 100 (static ) 103 SB
1501 315 148 (member ) 151 SB
1652 315 162 (variables ) 165 SB
1817 315 97 (since ) 100 SB
1917 315 63 (the ) 66 SB
1983 315 69 (stub) 69 SB
471 381 1122 (generator cannot enforce the semantics of such variables correctly.) 1122 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 479 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 482 218 (No pointers ) 219 SB
690 482 45 (to ) 46 SB
736 482 174 (functions.) 174 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
910 483 11 ( ) 12 SB
922 483 169 (Allowing ) 170 SB
1092 483 147 (pointers ) 148 SB
1240 483 43 (to ) 44 SB
1284 483 167 (functions ) 168 SB
1452 483 147 (requires ) 148 SB
1600 483 63 (the ) 64 SB
1664 483 117 (ability ) 118 SB
1782 483 59 (for ) 60 SB
1842 483 63 (the ) 64 SB
1906 483 113 (server ) 114 SB
2020 483 32 (to) 32 SB
471 549 1581 (call back to the client to execute the required code. The current RPC implementation does not) 1581 SB
471 612 578 (provide the required functionality.) 578 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 710 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 713 153 (Limited ) 154 SB
625 713 166 (operator ) 167 SB
792 713 221 (overloading.) 221 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1013 714 11 ( ) 12 SB
1025 714 87 (This ) 88 SB
1113 714 39 (is ) 40 SB
1153 714 124 (caused ) 125 SB
1278 714 50 (by ) 51 SB
1329 714 63 (the ) 65 SB
1394 714 73 (fact ) 75 SB
1469 714 76 (that ) 78 SB
1547 714 88 (such ) 90 SB
1637 714 186 (operations ) 188 SB
1825 714 155 (typically ) 157 SB
1982 714 70 (take) 70 SB
471 780 166 (instances ) 178 SB
649 780 44 (of ) 56 SB
705 780 63 (the ) 75 SB
780 780 97 (same ) 109 SB
889 780 92 (class ) 104 SB
993 780 46 (as ) 58 SB
1051 780 188 (arguments ) 200 SB
1251 780 73 (and ) 85 SB
1336 780 114 (would ) 126 SB
1462 780 82 (thus ) 94 SB
1556 780 131 (require ) 143 SB
1699 780 110 (object ) 123 SB
1822 780 151 (mobility ) 164 SB
1986 780 66 (\(the) 66 SB
471 843 775 (instances could be on different remote nodes\).) 775 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 941 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
471 944 394 (Parameter Semantics.) 394 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
865 945 1187 ( Pointer and reference arguments are currently implemented as value /) 1187 SB
471 1011 116 (result. ) 122 SB
593 1011 87 (This ) 93 SB
686 1011 166 (approach ) 172 SB
858 1011 68 (has ) 74 SB
932 1011 129 (several ) 135 SB
1067 1011 159 (potential ) 165 SB
1232 1011 166 (problems ) 172 SB
1404 1011 76 (that ) 82 SB
1486 1011 91 (arise ) 98 SB
1584 1011 71 (due ) 78 SB
1662 1011 43 (to ) 50 SB
1712 1011 30 (a ) 37 SB
1749 1011 126 (variety ) 133 SB
1882 1011 44 (of ) 51 SB
1933 1011 119 (causes.) 119 SB
471 1074 131 (Firstly, ) 136 SB
607 1074 124 (typical ) 129 SB
736 1074 87 (C++ ) 92 SB
828 1074 124 (header ) 129 SB
957 1074 82 (files ) 88 SB
1045 1074 136 (contain ) 142 SB
1187 1074 65 (not ) 71 SB
1258 1074 84 (only ) 90 SB
1348 1074 92 (class ) 98 SB
1446 1074 191 (definitions ) 197 SB
1643 1074 64 (but ) 70 SB
1713 1074 78 (also ) 84 SB
1797 1074 109 (inline ) 115 SB
1912 1074 140 (function) 140 SB
471 1137 202 (definitions, ) 206 SB
677 1137 143 (macros, ) 147 SB
824 1137 156 (manifest ) 160 SB
984 1137 179 (constants, ) 183 SB
1167 1137 134 (various ) 139 SB
1306 1137 238 (pre-processor ) 243 SB
1549 1137 173 (directives ) 178 SB
1727 1137 70 (etc. ) 75 SB
1802 1137 175 (Secondly, ) 180 SB
1982 1137 70 (type) 70 SB
471 1200 211 (information ) 214 SB
685 1200 103 (about ) 106 SB
791 1200 208 (parameters, ) 211 SB
1002 1200 70 (etc. ) 73 SB
1075 1200 82 (may ) 85 SB
1160 1200 49 (be ) 52 SB
1212 1200 208 (incomplete. ) 211 SB
1423 1200 69 (For ) 72 SB
1495 1200 164 (example, ) 168 SB
1663 1200 169 (declaring ) 173 SB
1836 1200 30 (a ) 34 SB
1870 1200 146 (variable ) 150 SB
2020 1200 32 (to) 32 SB
471 1263 49 (be ) 51 SB
522 1263 30 (a ) 32 SB
554 1263 131 (pointer ) 133 SB
687 1263 43 (to ) 45 SB
732 1263 98 (some ) 100 SB
832 1263 81 (type ) 83 SB
915 1263 86 (does ) 88 SB
1003 1263 65 (not ) 68 SB
1071 1263 108 (imply ) 111 SB
1182 1263 76 (that ) 79 SB
1261 1263 63 (the ) 66 SB
1327 1263 146 (variable ) 149 SB
1476 1263 114 (points ) 117 SB
1593 1263 43 (to ) 46 SB
1639 1263 30 (a ) 33 SB
1672 1263 112 (single ) 115 SB
1787 1263 150 (instance ) 153 SB
1940 1263 44 (of ) 47 SB
1987 1263 65 (that) 65 SB
471 1326 536 (type - it might actually point to ) 537 SB
1008 1326 52 (an ) 53 SB
1061 1326 109 (array. ) 110 SB
1171 1326 87 (This ) 88 SB
1259 1326 39 (is ) 40 SB
1299 1326 176 (especially ) 177 SB
1476 1326 77 (true ) 78 SB
1554 1326 36 (if ) 37 SB
1591 1326 63 (the ) 64 SB
1655 1326 81 (type ) 82 SB
1737 1326 39 (is ) 40 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1777 1337 100 (char ) 101 SB
1878 1337 20 (*) 20 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1898 1326 11 ( ) 12 SB
1910 1326 25 (- ) 26 SB
1936 1326 76 (that ) 77 SB
2013 1326 39 (is,) 39 SB
471 1389 447 (a pointer to character that ) 448 SB
919 1389 50 (by ) 51 SB
970 1389 197 (convention ) 198 SB
1168 1389 39 (is ) 40 SB
1208 1389 87 (used ) 88 SB
1296 1389 43 (to ) 44 SB
1340 1389 166 (represent ) 167 SB
1507 1389 30 (a ) 31 SB
1538 1389 120 (string, ) 121 SB
1659 1389 46 (or ) 47 SB
1706 1389 30 (a ) 31 SB
1737 1389 74 (list. ) 75 SB
1812 1389 187 (Therefore, ) 188 SB
2000 1389 52 (the) 52 SB
471 1452 1269 (stub generator imposes certain semantics upon pointers such that a pointer ) 1270 SB
1741 1452 43 (to ) 44 SB
1785 1452 30 (a ) 31 SB
1816 1452 81 (type ) 82 SB
1898 1452 39 (is ) 40 SB
1938 1452 114 (always) 114 SB
471 1515 192 (considered ) 195 SB
666 1515 43 (to ) 46 SB
712 1515 98 (point ) 101 SB
813 1515 43 (to ) 46 SB
859 1515 84 (only ) 87 SB
946 1515 71 (one ) 74 SB
1020 1515 150 (instance ) 153 SB
1173 1515 44 (of ) 47 SB
1220 1515 76 (that ) 79 SB
1299 1515 81 (type ) 84 SB
1383 1515 25 (- ) 29 SB
1412 1515 119 (except ) 123 SB
1535 1515 59 (for ) 63 SB
1598 1515 63 (the ) 67 SB
1665 1515 167 (character ) 171 SB
1836 1515 147 (pointers ) 151 SB
1987 1515 65 (that) 65 SB
471 1578 544 (retain their traditional meaning.) 544 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 1711 88 (2.9.) 88 SB
426 1711 218 (Example) 218 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1835 526 (The following figures show an ) 527 SB
998 1835 153 (example ) 154 SB
1152 1835 44 (of ) 45 SB
1197 1835 63 (the ) 64 SB
1261 1835 124 (typical ) 125 SB
1386 1835 118 (output ) 119 SB
1505 1835 82 (files ) 83 SB
1588 1835 76 (that ) 77 SB
1665 1835 63 (are ) 64 SB
1729 1835 166 (produced ) 167 SB
1896 1835 103 (using ) 104 SB
2000 1835 52 (the) 52 SB
321 1898 127 (default ) 129 SB
450 1898 151 (settings, ) 153 SB
603 1898 160 (although ) 162 SB
765 1898 45 (in ) 47 SB
812 1898 63 (the ) 66 SB
878 1898 152 (interests ) 155 SB
1033 1898 44 (of ) 47 SB
1080 1898 121 (saving ) 124 SB
1204 1898 105 (paper ) 108 SB
1312 1898 63 (the ) 66 SB
1378 1898 88 (code ) 91 SB
1469 1898 82 (files ) 85 SB
1554 1898 90 (have ) 93 SB
1647 1898 89 (been ) 92 SB
1739 1898 129 (pruned ) 132 SB
1871 1898 44 (of ) 47 SB
1918 1898 98 (some ) 101 SB
2019 1898 33 (of) 33 SB
321 1961 438 (the actual code generated.) 438 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
321 2053 359 (Input File: Simple.h) 359 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 2151 240 (class Simple) 240 SB
321 2187 20 ({) 20 SB
321 2223 140 (public:) 140 SB
413 2259 360 (Simple \(long = 3\);) 360 SB
413 2295 220 (~Simple \(\);) 220 SB
413 2367 460 (void getSimple \(long&\);) 460 SB
321 2439 160 (private:) 160 SB
413 2475 140 (long m;) 140 SB
321 2511 40 (};) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (14) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
0 0 0 fC
321 305 485 (Output File: Simple_stub.h) 485 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 403 40 (/*) 40 SB
321 439 600 ( * Automatically Generated by:) 600 SB
321 475 720 ( * Arjuna Stub Generator Version 4.0) 720 SB
321 511 40 ( *) 40 SB
321 547 440 ( * Do Not Edit By Hand) 440 SB
321 583 40 ( *) 40 SB
321 619 60 ( */) 60 SB
321 691 220 (#ifdef STUB) 220 SB
321 727 380 (#  pragma @NoRename) 380 SB
321 763 120 (#endif) 120 SB
321 835 340 (#ifndef SIMPLE_H_) 340 SB
321 871 340 (#define SIMPLE_H_) 340 SB
321 943 320 (class RpcBuffer;) 320 SB
321 979 460 (class ClientRpcManager;) 460 SB
321 1051 580 (#include "Simple_stubclass.h") 580 SB
321 1123 460 (#endif  /* SIMPLE_H_ */) 460 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (15) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
0 0 0 fC
321 305 569 (Output File: Simple_stubclass.h) 569 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (16) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
0 0 0 fC
321 311 40 (/*) 40 SB
321 347 600 ( * Automatically Generated by:) 600 SB
321 383 720 ( * Arjuna Stub Generator Version 4.0) 720 SB
321 419 40 ( *) 40 SB
321 455 440 ( * Do Not Edit By Hand) 440 SB
321 491 40 ( *) 40 SB
321 527 60 ( */) 60 SB
321 599 220 (#ifdef STUB) 220 SB
321 635 380 (#  pragma @NoRename) 380 SB
321 671 120 (#endif) 120 SB
321 743 240 (#ifndef STUB) 240 SB
321 779 600 (#include <StubGen/RpcBuffer.h>) 600 SB
321 815 740 (#include <StubGen/ClientRpcManager.h>) 740 SB
321 923 420 (#ifndef SIMPLE_SERVER) 420 SB
321 959 260 (#undef Simple) 260 SB
321 995 540 (#define Simple RemoteSimple) 540 SB
321 1031 120 (#endif) 120 SB
321 1103 360 (class RemoteSimple) 360 SB
321 1139 20 ({) 20 SB
321 1175 140 (public:) 140 SB
413 1211 1000 (RemoteSimple \( long  = 3, ClientRpcManager *cRpc =) 1000 SB
696 1247 1100 (ClientRpcManager::createInstance\("Simple200113468",1\)\);) 1100 SB
413 1283 360 (~RemoteSimple \( \);) 360 SB
413 1319 500 (void getSimple \( long& \);) 500 SB
321 1355 200 (protected:) 200 SB
413 1391 1120 (RemoteSimple\(const ClientRpcManager&, const RpcBuffer&\);) 1120 SB
321 1427 160 (private:) 160 SB
413 1463 640 (ClientRpcManager _clientManager;) 640 SB
413 1499 420 (RpcBuffer _myHashVal;) 420 SB
321 1535 40 (};) 40 SB
321 1607 400 (#ifdef SIMPLE_SERVER) 400 SB
321 1643 260 (#undef Simple) 260 SB
321 1679 520 (#define Simple LocalSimple) 520 SB
321 1715 120 (#endif) 120 SB
321 1787 360 (class LocalSimple;) 360 SB
321 1859 360 (class ServerSimple) 360 SB
321 1895 20 ({) 20 SB
321 1931 140 (public:) 140 SB
413 1967 320 (ServerSimple \(\);) 320 SB
413 2003 340 (~ServerSimple \(\);) 340 SB
413 2075 520 (void serve \(int, char **\);) 520 SB
413 2111 1320 (long dispatchToClass \(LocalSimple*, long, RpcBuffer&, RpcBuffer&\);) 1320 SB
321 2183 160 (private:) 160 SB
413 2219 1300 (long dispatchToOper \(LocalSimple *,long, RpcBuffer&, RpcBuffer&\);) 1300 SB
413 2255 1200 (long Simple200113468\(LocalSimple *, RpcBuffer&, RpcBuffer&\);) 1200 SB
413 2291 1200 (long Simple201161494\(LocalSimple *, RpcBuffer&, RpcBuffer&\);) 1200 SB
413 2327 1260 (long getSimple171823308\(LocalSimple *, RpcBuffer&, RpcBuffer&\);) 1260 SB
413 2399 540 (LocalSimple *theRealObject;) 540 SB
413 2435 480 (RpcBuffer constructArgs;) 480 SB
413 2471 420 (long constructOpcode;) 420 SB
413 2507 460 (long constructRefCount;) 460 SB
413 2543 520 (RpcBuffer constructResult;) 520 SB
321 2579 40 (};) 40 SB
321 2615 120 (#endif) 120 SB
321 2723 220 (#ifdef STUB) 220 SB
321 2759 560 (#  define LocalSimple Simple) 560 SB
321 2795 120 (#endif) 120 SB
321 2867 880 (/* @Remote, @NoMarshall */ class LocalSimple) 880 SB
321 2903 20 ({) 20 SB
413 2939 140 (long m;) 140 SB
321 2975 140 (public:) 140 SB
413 3011 500 (LocalSimple \( long  = 3\);) 500 SB
413 3047 340 (~LocalSimple \( \);) 340 SB
413 3083 500 (void getSimple \( long& \);) 500 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (17) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
0 0 0 fC
321 261 40 (};) 40 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
321 377 524 (Output File: Simple_client.cc) 524 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 475 40 (/*) 40 SB
321 511 600 ( * Automatically Generated by:) 600 SB
321 547 720 ( * Arjuna Stub Generator Version 4.0) 720 SB
321 583 40 ( *) 40 SB
321 619 440 ( * Do Not Edit By Hand) 440 SB
321 655 40 ( *) 40 SB
321 691 60 ( */) 60 SB
321 763 480 (#include "Simple_stub.h") 480 SB
321 835 800 (/* Many functions removed for clarity */) 800 SB
321 907 900 (void RemoteSimple::getSimple \( long& _Par_0_\)) 900 SB
321 943 20 ({) 20 SB
413 979 380 (RpcBuffer rvBuffer;) 380 SB
413 1015 660 (RpcBuffer callBuffer\(_myHashVal\);) 660 SB
413 1051 440 (RpcBuffer replyBuffer;) 440 SB
413 1087 720 (RPC_Status rpcStatus = OPER_UNKNOWN;) 720 SB
413 1123 720 (long serverStatus = OPER_INVOKED_OK;) 720 SB
413 1195 460 (callBuffer << &_Par_0_;) 460 SB
413 1267 1080 (rpcStatus = _clientManager.Call\(171823308, callBuffer,) 1080 SB
1071 1303 540 (serverStatus, replyBuffer\);) 540 SB
413 1339 1300 (if \(\(rpcStatus == OPER_DONE\) && \(serverStatus != DISPATCH_ERROR\)\)) 1300 SB
413 1375 20 ({) 20 SB
509 1411 560 (long *_Par_0_Ptr = &_Par_0_;) 560 SB
509 1447 520 (replyBuffer >> _Par_0_Ptr;) 520 SB
509 1483 400 (switch\(serverStatus\)) 400 SB
509 1519 20 ({) 20 SB
509 1555 420 (case OPER_INVOKED_OK:) 420 SB
600 1591 120 (break;) 120 SB
509 1627 160 (default:) 160 SB
600 1663 520 (_clientManager.rpcAbort\(\);) 520 SB
509 1699 20 (}) 20 SB
413 1735 20 (}) 20 SB
413 1771 80 (else) 80 SB
509 1807 500 (_clientManager.rpcAbort\(\)) 500 SB
321 1843 20 (}) 20 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (18) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
0 0 0 fC
321 305 537 (Output File: Simple_server.cc) 537 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 403 40 (/*) 40 SB
321 439 600 ( * Automatically Generated by:) 600 SB
321 475 720 ( * Arjuna Stub Generator Version 4.0) 720 SB
321 511 40 ( *) 40 SB
321 547 440 ( * Do Not Edit By Hand) 440 SB
321 583 40 ( *) 40 SB
321 619 60 ( */) 60 SB
321 691 220 (#ifdef STUB) 220 SB
321 727 380 (#  pragma @NoRename) 380 SB
321 763 120 (#endif) 120 SB
321 835 600 (#include <StubGen/ServerRpc.h>) 600 SB
321 907 420 (#define SIMPLE_SERVER) 420 SB
321 943 480 (#include "Simple_stub.h") 480 SB
321 1015 800 (/* Many functions removed for clarity */) 800 SB
321 1087 80 (long) 80 SB
321 1123 1520 (ServerSimple::getSimple171823308 \(LocalSimple * theObject, RpcBuffer& work, ) 1520 SB
884 1159 360 (RpcBuffer& result\)) 360 SB
321 1195 20 ({) 20 SB
413 1231 380 (RpcBuffer rvBuffer;) 380 SB
413 1267 620 (long errCode = OPER_INVOKED_OK;) 620 SB
413 1303 360 (long* _Par_0_ = 0;) 360 SB
413 1339 320 (work >> _Par_0_;) 320 SB
413 1411 620 (theObject->getSimple\(*_Par_0_\);) 620 SB
413 1447 360 (result << _Par_0_;) 360 SB
413 1519 300 (work.rewrite\(\);) 300 SB
413 1591 560 (if\(work.shouldPack\(_Par_0_\)\)) 560 SB
509 1627 300 (delete _Par_0_;) 300 SB
413 1663 300 (return errCode;) 300 SB
321 1699 20 (}) 20 SB
32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font
321 1779 627 (Output File: Simple_servermain.cc) 627 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1877 40 (/*) 40 SB
321 1913 600 ( * Automatically Generated by:) 600 SB
321 1949 720 ( * Arjuna Stub Generator Version 4.0) 720 SB
321 1985 40 ( *) 40 SB
321 2021 440 ( * Do Not Edit By Hand) 440 SB
321 2057 40 ( *) 40 SB
321 2093 60 ( */) 60 SB
321 2165 480 (#include "Simple_stub.h") 480 SB
321 2201 680 (int main \( int argc, char **argv \)) 680 SB
321 2237 20 ({) 20 SB
413 2273 520 (ServerSimple Simpleserver;) 520 SB
413 2345 640 (Simpleserver.Server\(argc, argv\);) 640 SB
413 2381 180 (return 0;) 180 SB
321 2417 20 (}) 20 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 2538 117 (2.10.) 117 SB
471 2538 432 (Template Classes) 432 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2662 53 (At ) 62 SB
533 2662 79 (first ) 88 SB
621 2662 94 (sight ) 103 SB
724 2662 123 (simple ) 132 SB
856 2662 156 (template ) 165 SB
1021 2662 126 (classes ) 136 SB
1157 2662 96 (seem ) 106 SB
1263 2662 43 (to ) 53 SB
1316 2662 103 (cause ) 113 SB
1429 2662 213 (surprisingly ) 223 SB
1652 2662 71 (few ) 81 SB
1733 2662 257 (complications. ) 267 SB
2000 2662 52 (On) 52 SB
321 2725 139 (reading ) 146 SB
467 2725 30 (a ) 37 SB
504 2725 156 (template ) 163 SB
667 2725 92 (class ) 99 SB
766 2725 63 (the ) 71 SB
837 2725 80 (stub ) 88 SB
925 2725 171 (generator ) 179 SB
1104 2725 158 (proceeds ) 166 SB
1270 2725 130 (exactly ) 138 SB
1408 2725 46 (as ) 54 SB
1462 2725 35 (it ) 43 SB
1505 2725 114 (would ) 122 SB
1627 2725 59 (for ) 67 SB
1694 2725 71 (any ) 79 SB
1773 2725 98 (other ) 106 SB
1879 2725 92 (class ) 100 SB
1979 2725 73 (only) 73 SB
321 2788 131 (instead ) 140 SB
461 2788 44 (of ) 53 SB
514 2788 182 (producing ) 191 SB
705 2788 132 (normal ) 141 SB
846 2788 126 (classes ) 135 SB
981 2788 43 (to ) 52 SB
1033 2788 132 (replace ) 141 SB
1174 2788 63 (the ) 72 SB
1246 2788 144 (original ) 153 SB
1399 2788 35 (it ) 45 SB
1444 2788 161 (produces ) 171 SB
1615 2788 156 (template ) 166 SB
1781 2788 126 (classes ) 136 SB
1917 2788 73 (and ) 83 SB
2000 2788 52 (the) 52 SB
321 2851 1080 (appropriate templated operations. For example, the trivial class:) 1080 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 2949 580 (template <class T> class Test) 580 SB
321 2985 20 ({) 20 SB
321 3021 140 (public:) 140 SB
413 3057 160 (Test \(\);) 160 SB
413 3093 440 (T *example \(const T*\);) 440 SB
321 3129 40 (};) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (19) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
471 318 672 (produces the following client side class:) 672 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 416 700 (template <class T> class RemoteTest) 700 SB
321 452 20 ({) 20 SB
321 488 140 (public:) 140 SB
413 524 720 (RemoteTest \(ClientRpcManager * = 0\);) 720 SB
413 560 440 (T *example \(const T*\);) 440 SB
321 596 160 (private:) 160 SB
413 632 100 (. . .) 100 SB
321 668 40 (};) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 761 868 (and this example implementation for the operation ) 868 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1339 772 180 (example\(\)) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1519 761 11 (.) 11 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 859 360 (template <class T>) 360 SB
321 895 880 (T *RemoteTest<T>::example \(const T* _par_0_\)) 880 SB
321 931 20 ({) 20 SB
413 967 380 (RpcBuffer rvBuffer;) 380 SB
413 1003 660 (RpcBuffer callBuffer\(_myHashVal\);) 660 SB
413 1039 440 (RpcBuffer replyBuffer;) 440 SB
413 1075 720 (RPC_Status rpcStatus = OPER_UNKNOWN;) 720 SB
413 1111 720 (long serverStatus = OPER_INVOKED_OK;) 720 SB
413 1147 420 (T *returnedValue = 0;) 420 SB
413 1219 360 (callBuffer << now;) 360 SB
413 1291 1360 (rpcStatus = _clientManager.Call\(181144212, callBuffer, serverStatus,) 1360 SB
1071 1327 280 ( replyBuffer\);) 280 SB
413 1363 1280 (if \(\(rpcStatus == OPER_DONE\) && \(serverStatus != DISPATCH_ERROR\)) 1280 SB
1725 1363 20 (\)) 20 SB
413 1399 20 ({) 20 SB
509 1435 420 (switch \(serverStatus\)) 420 SB
509 1471 20 ({) 20 SB
509 1507 420 (case OPER_INVOKED_OK:) 420 SB
600 1543 480 (replyBuffer >> rvBuffer;) 480 SB
600 1579 520 (rvBuffer >> returnedValue;) 520 SB
600 1615 120 (break;) 120 SB
509 1651 160 (default:) 160 SB
600 1687 520 (_clientManager.rpcAbort\(\);) 520 SB
509 1723 20 (}) 20 SB
413 1759 20 (}) 20 SB
413 1795 80 (else) 80 SB
509 1831 520 (_clientManager.rpcAbort\(\);) 520 SB
413 1867 460 (return \(returnedValue\);) 460 SB
321 1903 20 (}) 20 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1996 888 (There is, however, one complication and that lies in ) 889 SB
1360 1996 63 (the ) 64 SB
1424 1996 82 (area ) 83 SB
1507 1996 44 (of ) 45 SB
1552 1996 113 (server ) 114 SB
1666 1996 92 (class ) 93 SB
1759 1996 234 (instantiation. ) 235 SB
1994 1996 58 (For) 58 SB
321 2059 827 (non-template classes creation of an instance of a ) 828 SB
1149 2059 105 (client ) 106 SB
1255 2059 92 (class ) 93 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1348 2070 140 (clientX) 140 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1488 2059 11 ( ) 12 SB
1500 2059 76 (will ) 77 SB
1577 2059 125 (always ) 126 SB
1703 2059 103 (cause ) 104 SB
1807 2059 63 (the ) 64 SB
1871 2059 147 (creation ) 148 SB
2019 2059 33 (of) 33 SB
321 2122 30 (a ) 38 SB
359 2122 170 (matching ) 178 SB
537 2122 92 (class ) 100 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
637 2133 140 (serverX) 140 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
777 2122 11 ( ) 19 SB
796 2122 45 (in ) 53 SB
849 2122 63 (the ) 72 SB
921 2122 175 (generated ) 184 SB
1105 2122 93 (serer ) 102 SB
1207 2122 99 (code. ) 108 SB
1315 2122 171 (However, ) 180 SB
1495 2122 59 (for ) 68 SB
1563 2122 30 (a ) 39 SB
1602 2122 156 (template ) 165 SB
1767 2122 103 (class, ) 112 SB
1879 2122 63 (the ) 72 SB
1951 2122 101 (actual) 101 SB
321 2185 208 (instantiated ) 209 SB
530 2185 81 (type ) 82 SB
612 2185 44 (of ) 45 SB
657 2185 63 (the ) 64 SB
721 2185 92 (class ) 93 SB
814 2185 45 (in ) 47 SB
861 2185 63 (the ) 65 SB
926 2185 105 (client ) 107 SB
1033 2185 87 (\(and ) 89 SB
1122 2185 82 (thus ) 84 SB
1206 2185 63 (the ) 65 SB
1271 2185 127 (server\) ) 129 SB
1400 2185 39 (is ) 41 SB
1441 2185 65 (not ) 67 SB
1508 2185 201 (determined ) 203 SB
1711 2185 90 (until ) 92 SB
1803 2185 63 (the ) 65 SB
1868 2185 105 (client ) 107 SB
1975 2185 77 (code) 77 SB
321 2248 39 (is ) 42 SB
363 2248 177 (compiled. ) 180 SB
543 2248 104 (Since ) 107 SB
650 2248 63 (the ) 66 SB
716 2248 80 (stub ) 83 SB
799 2248 171 (generator ) 174 SB
973 2248 84 (only ) 87 SB
1060 2248 100 (reads ) 103 SB
1163 2248 124 (header ) 127 SB
1290 2248 82 (files ) 85 SB
1375 2248 73 (and ) 76 SB
1451 2248 65 (not ) 68 SB
1519 2248 105 (client ) 108 SB
1627 2248 88 (code ) 91 SB
1718 2248 35 (it ) 38 SB
1756 2248 124 (cannot ) 127 SB
1883 2248 169 (determine) 169 SB
321 2311 93 (what ) 94 SB
415 2311 113 (server ) 114 SB
529 2311 81 (type ) 82 SB
611 2311 43 (to ) 44 SB
655 2311 198 (instantiate. ) 199 SB
854 2311 47 (In ) 48 SB
902 2311 73 (this ) 74 SB
976 2311 157 (situation ) 158 SB
1134 2311 63 (the ) 64 SB
1198 2311 221 (programmer ) 222 SB
1420 2311 93 (must ) 94 SB
1514 2311 97 (write ) 98 SB
1612 2311 63 (the ) 64 SB
1676 2311 88 (code ) 90 SB
1766 2311 43 (to ) 45 SB
1811 2311 187 (instantiate ) 189 SB
2000 2311 52 (the) 52 SB
321 2374 362 (server type explicitly.) 362 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 2507 117 (2.11.) 117 SB
471 2507 489 (Exception Handling) 489 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2631 171 (Although ) 183 SB
654 2631 71 (few ) 83 SB
737 2631 176 (compilers ) 188 SB
925 2631 163 (currently ) 175 SB
1100 2631 137 (support ) 150 SB
1250 2631 63 (the ) 76 SB
1326 2631 163 (proposed ) 176 SB
1502 2631 173 (exception ) 186 SB
1688 2631 162 (handling ) 175 SB
1863 2631 136 (system, ) 149 SB
2012 2631 40 (its) 40 SB
321 2694 630 (adoption by the standards committee ) 631 SB
952 2694 112 (seems ) 113 SB
1065 2694 137 (assured ) 138 SB
1203 2694 73 (and ) 74 SB
1277 2694 63 (the ) 64 SB
1341 2694 120 (syntax ) 121 SB
1462 2694 73 (and ) 74 SB
1536 2694 177 (semantics ) 178 SB
1714 2694 124 (appear ) 125 SB
1839 2694 43 (to ) 44 SB
1883 2694 90 (have ) 91 SB
1974 2694 78 (been) 78 SB
321 2757 129 (frozen. ) 135 SB
456 2757 96 (Thus ) 102 SB
558 2757 35 (it ) 41 SB
599 2757 39 (is ) 45 SB
644 2757 146 (possible ) 152 SB
796 2757 59 (for ) 65 SB
861 2757 63 (the ) 69 SB
930 2757 80 (stub ) 86 SB
1016 2757 171 (generator ) 177 SB
1193 2757 43 (to ) 49 SB
1242 2757 138 (provide ) 144 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1386 2757 86 (some) 86 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1472 2757 11 ( ) 17 SB
1489 2757 137 (support ) 143 SB
1632 2757 59 (for ) 65 SB
1697 2757 77 (true ) 83 SB
1780 2757 87 (C++ ) 94 SB
1874 2757 178 (exceptions) 178 SB
321 2820 1191 (despite the lack of compilers for the generated code. As will be shown ) 1192 SB
1513 2820 73 (this ) 74 SB
1587 2820 137 (support ) 138 SB
1725 2820 124 (cannot ) 125 SB
1850 2820 49 (be ) 50 SB
1900 2820 152 (complete) 152 SB
321 2883 1032 (due to the lack of information available to the stub generator.) 1032 SB
471 2988 184 (Currently, ) 186 SB
657 2988 63 (the ) 65 SB
722 2988 190 (generation ) 192 SB
914 2988 44 (of ) 46 SB
960 2988 173 (exception ) 175 SB
1135 2988 162 (handling ) 164 SB
1299 2988 88 (code ) 90 SB
1389 2988 39 (is ) 42 SB
1431 2988 212 (conditional. ) 215 SB
1646 2988 38 (If ) 41 SB
1687 2988 71 (any ) 74 SB
1761 2988 148 (member ) 151 SB
1912 2988 140 (function) 140 SB
321 3051 167 (signature ) 178 SB
499 3051 152 (contains ) 163 SB
662 3051 52 (an ) 63 SB
725 3051 173 (exception ) 184 SB
909 3051 224 (specification ) 235 SB
1144 3051 85 (then ) 97 SB
1241 3051 173 (exception ) 185 SB
1426 3051 162 (handling ) 174 SB
1600 3051 88 (code ) 100 SB
1700 3051 39 (is ) 51 SB
1751 3051 175 (generated ) 187 SB
1938 3051 59 (for ) 71 SB
2009 3051 43 (all) 43 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (20) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
321 276 148 (member ) 152 SB
473 276 167 (functions ) 172 SB
645 276 44 (of ) 49 SB
694 276 63 (the ) 68 SB
762 276 103 (class. ) 108 SB
870 276 38 (If ) 43 SB
913 276 53 (no ) 58 SB
971 276 148 (member ) 153 SB
1124 276 151 (function ) 156 SB
1280 276 68 (has ) 73 SB
1353 276 52 (an ) 57 SB
1410 276 173 (exception ) 178 SB
1588 276 224 (specification ) 229 SB
1817 276 85 (then ) 90 SB
1907 276 63 (the ) 68 SB
1975 276 77 (code) 77 SB
321 339 550 (generated is as described earlier.) 550 SB
471 444 197 (Exceptions ) 209 SB
680 444 175 (generated ) 187 SB
867 444 50 (by ) 62 SB
929 444 30 (a ) 42 SB
971 444 148 (member ) 160 SB
1131 444 151 (function ) 163 SB
1294 444 63 (are ) 75 SB
1369 444 126 (treated ) 138 SB
1507 444 130 (exactly ) 142 SB
1649 444 74 (like ) 86 SB
1735 444 132 (normal ) 145 SB
1880 444 172 (returnable) 172 SB
321 507 197 (parameters ) 203 SB
524 507 73 (and ) 79 SB
603 507 90 (have ) 96 SB
699 507 63 (the ) 70 SB
769 507 97 (same ) 104 SB
873 507 211 (restrictions; ) 218 SB
1091 507 76 (that ) 83 SB
1174 507 50 (is, ) 57 SB
1231 507 82 (they ) 89 SB
1320 507 93 (must ) 100 SB
1420 507 49 (be ) 56 SB
1476 507 228 (marshallable ) 235 SB
1711 507 47 (so ) 54 SB
1765 507 76 (that ) 83 SB
1848 507 82 (they ) 89 SB
1937 507 70 (can ) 77 SB
2014 507 38 (be) 38 SB
321 570 203 (transmitted ) 209 SB
530 570 89 (back ) 95 SB
625 570 43 (to ) 49 SB
674 570 63 (the ) 69 SB
743 570 105 (client ) 111 SB
854 570 46 (as ) 52 SB
906 570 78 (part ) 84 SB
990 570 44 (of ) 50 SB
1040 570 63 (the ) 69 SB
1109 570 114 (return ) 120 SB
1229 570 100 (RPC. ) 106 SB
1335 570 112 (When ) 118 SB
1453 570 151 (received ) 157 SB
1610 570 45 (in ) 51 SB
1661 570 63 (the ) 70 SB
1731 570 116 (client, ) 123 SB
1854 570 71 (any ) 78 SB
1932 570 120 (thrown) 120 SB
321 633 173 (exception ) 174 SB
495 633 39 (is ) 40 SB
535 633 241 (unmarshalled ) 242 SB
777 633 73 (and ) 74 SB
851 633 85 (then ) 86 SB
937 633 192 (\(re\)thrown ) 193 SB
1130 633 47 (so ) 48 SB
1178 633 76 (that ) 77 SB
1255 633 63 (the ) 64 SB
1319 633 105 (caller ) 107 SB
1426 633 154 (observes ) 156 SB
1582 633 63 (the ) 65 SB
1647 633 127 (correct ) 129 SB
1776 633 189 (behaviour. ) 191 SB
1967 633 85 (Thus) 85 SB
321 696 1422 (extending the earlier Diary example with exceptions gives the following client code:) 1422 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 794 1300 (void RemoteSimple::getSimple \( long& _Par_0_\) throw \(anException\)) 1300 SB
321 830 20 ({) 20 SB
413 866 380 (RpcBuffer rvBuffer;) 380 SB
413 902 660 (RpcBuffer callBuffer\(_myHashVal\);) 660 SB
413 938 440 (RpcBuffer replyBuffer;) 440 SB
413 974 720 (RPC_Status rpcStatus = OPER_UNKNOWN;) 720 SB
413 1010 720 (long serverStatus = OPER_INVOKED_OK;) 720 SB
413 1082 460 (callBuffer << &_Par_0_;) 460 SB
413 1154 1080 (rpcStatus = _clientManager.Call\(171823308, callBuffer,) 1080 SB
1071 1190 540 (serverStatus, replyBuffer\);) 540 SB
413 1226 1300 (if \(\(rpcStatus == OPER_DONE\) && \(serverStatus != DISPATCH_ERROR\)\)) 1300 SB
413 1262 20 ({) 20 SB
509 1298 560 (long *_Par_0_Ptr = &_Par_0_;) 560 SB
509 1334 520 (replyBuffer >> _Par_0_Ptr;) 520 SB
509 1370 400 (switch\(serverStatus\)) 400 SB
509 1406 20 ({) 20 SB
600 1442 420 (case OPER_INVOKED_OK:) 420 SB
696 1478 120 (break;) 120 SB
600 1514 440 (case EXCEPTION_RAISED:) 440 SB
600 1550 20 ({) 20 SB
696 1586 400 (int exceptionNumber;) 400 SB
696 1622 480 (replyBuffer >> rvBuffer;) 480 SB
696 1658 560 (rvBuffer >> exceptionNumber;) 560 SB
696 1694 480 (switch \(exceptionNumber\)) 480 SB
696 1730 20 ({) 20 SB
788 1766 140 (case 0:) 140 SB
788 1802 20 ({) 20 SB
884 1838 360 (anException eType;) 360 SB
884 1874 360 (rvBuffer >> eType;) 360 SB
884 1910 240 (throw eType;) 240 SB
788 1946 20 (}) 20 SB
696 1982 20 (}) 20 SB
696 2018 120 (break;) 120 SB
600 2054 20 (}) 20 SB
600 2090 160 (default:) 160 SB
600 2126 540 ( _clientManager.rpcAbort\(\);) 540 SB
509 2162 20 (}) 20 SB
413 2198 20 (}) 20 SB
413 2234 80 (else) 80 SB
509 2270 520 (_clientManager.rpcAbort\(\);) 520 SB
321 2306 20 (}) 20 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2399 102 (From ) 106 SB
577 2399 73 (this ) 78 SB
655 2399 35 (it ) 40 SB
695 2399 70 (can ) 75 SB
770 2399 49 (be ) 54 SB
824 2399 85 (seen ) 90 SB
914 2399 76 (that ) 81 SB
995 2399 189 (exceptions ) 194 SB
1189 2399 63 (are ) 68 SB
1257 2399 153 (returned ) 158 SB
1415 2399 46 (as ) 51 SB
1466 2399 30 (a ) 35 SB
1501 2399 78 (pair ) 83 SB
1584 2399 182 (indicating ) 187 SB
1771 2399 114 (which ) 119 SB
1890 2399 162 (exception) 162 SB
321 2462 75 (was ) 83 SB
404 2462 142 (thrown, ) 150 SB
554 2462 156 (followed ) 165 SB
719 2462 50 (by ) 59 SB
778 2462 63 (the ) 72 SB
850 2462 165 (encoding ) 174 SB
1024 2462 173 (exception ) 182 SB
1206 2462 105 (itself. ) 114 SB
1320 2462 77 (The ) 86 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1406 2473 160 (rvBuffer) 160 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1566 2462 11 ( ) 20 SB
1586 2462 152 (contains ) 161 SB
1747 2462 108 (either ) 117 SB
1864 2462 63 (the ) 72 SB
1936 2462 116 (correct) 116 SB
321 2525 849 (returned value or the exception, with the returned ) 849 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1170 2536 240 (serverStatus) 240 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1410 2525 441 ( indicating which is valid.) 441 SB
471 2630 738 (Similar code is produced on the server side:) 738 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (21) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
0 0 0 fC
321 311 80 (long) 80 SB
321 347 1520 (ServerSimple::getSimple171823308 \(LocalSimple * theObject, RpcBuffer& work, ) 1520 SB
884 383 360 (RpcBuffer& result\)) 360 SB
321 419 20 ({) 20 SB
413 455 380 (RpcBuffer rvBuffer;) 380 SB
413 491 620 (long errCode = OPER_INVOKED_OK;) 620 SB
413 527 360 (long* _Par_0_ = 0;) 360 SB
413 563 320 (work >> _Par_0_;) 320 SB
413 635 60 (try) 60 SB
413 671 20 ({) 20 SB
509 707 620 (theObject->getSimple\(*_Par_0_\);) 620 SB
413 743 20 (}) 20 SB
413 779 520 (catch \(anException _Ex_0_\)) 520 SB
413 815 20 ({) 20 SB
509 851 280 (rvBuffer << 0;) 280 SB
509 887 360 (rvBuffer << _Ex_0_) 360 SB
509 923 540 (errCode = EXCEPTION_RAISED;) 540 SB
413 959 20 (}) 20 SB
413 995 200 (catch\(...\)) 200 SB
413 1031 20 ({) 20 SB
509 1067 620 (errCode = UNEXPECTED_EXCEPTION;) 620 SB
413 1103 20 (}) 20 SB
413 1139 360 (result << _Par_0_;) 360 SB
413 1175 520 (if \(rvBuffer.length\(\) > 0\)) 520 SB
509 1211 380 (result << rvBuffer;) 380 SB
413 1283 300 (work.rewrite\(\);) 300 SB
413 1355 560 (if\(work.shouldPack\(_Par_0_\)\)) 560 SB
509 1391 300 (delete _Par_0_;) 300 SB
413 1427 300 (return errCode;) 300 SB
321 1463 20 (}) 20 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1556 102 (Here, ) 103 SB
574 1556 30 (a ) 31 SB
605 1556 140 (handler ) 141 SB
746 1556 39 (is ) 40 SB
786 1556 197 (established ) 198 SB
984 1556 59 (for ) 60 SB
1044 1556 88 (each ) 89 SB
1133 1556 173 (exception ) 174 SB
1307 1556 76 (that ) 77 SB
1384 1556 63 (the ) 64 SB
1448 1556 151 (function ) 152 SB
1600 1556 68 (has ) 69 SB
1669 1556 153 (declared ) 154 SB
1823 1556 35 (it ) 36 SB
1859 1556 82 (may ) 84 SB
1943 1556 109 (throw,) 109 SB
321 1619 878 (and the returned buffer is constructed appropriately.) 878 SB
471 1724 168 (Problems ) 181 SB
652 1724 90 (exist ) 103 SB
755 1724 86 (with ) 99 SB
854 1724 167 (functions ) 180 SB
1034 1724 76 (that ) 89 SB
1123 1724 52 (do ) 65 SB
1188 1724 65 (not ) 78 SB
1266 1724 90 (have ) 103 SB
1369 1724 71 (any ) 84 SB
1453 1724 173 (exception ) 187 SB
1640 1724 235 (specification, ) 249 SB
1889 1724 97 (since ) 111 SB
2000 1724 52 (the) 52 SB
321 1787 164 (language ) 167 SB
488 1787 155 (specifies ) 158 SB
646 1787 73 (this ) 76 SB
722 1787 43 (to ) 46 SB
768 1787 103 (mean ) 106 SB
874 1787 76 (that ) 79 SB
953 1787 63 (the ) 66 SB
1019 1787 151 (function ) 154 SB
1173 1787 70 (can ) 73 SB
1246 1787 109 (throw ) 112 SB
1358 1787 71 (any ) 74 SB
1432 1787 184 (exception. ) 187 SB
1619 1787 102 (From ) 105 SB
1724 1787 63 (the ) 66 SB
1790 1787 80 (stub ) 83 SB
1873 1787 179 (generation) 179 SB
321 1850 98 (point ) 102 SB
423 1850 44 (of ) 48 SB
471 1850 90 (view ) 94 SB
565 1850 73 (this ) 77 SB
642 1850 39 (is ) 44 SB
686 1850 85 (akin ) 90 SB
776 1850 43 (to ) 48 SB
824 1850 127 (having ) 132 SB
956 1850 52 (an ) 57 SB
1013 1850 173 (exception ) 178 SB
1191 1850 224 (specification ) 229 SB
1420 1850 44 (of ) 49 SB
1469 1850 63 (the ) 68 SB
1537 1850 177 (\(currently ) 182 SB
1719 1850 131 (illegal\) ) 136 SB
1855 1850 92 (form ) 97 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1952 1861 100 (throw) 100 SB
321 1924 100 (\(...\)) 100 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
421 1913 448 (. Since exceptions have to ) 449 SB
870 1913 88 (obey ) 89 SB
959 1913 63 (the ) 64 SB
1023 1913 97 (same ) 98 SB
1121 1913 93 (rules ) 94 SB
1215 1913 46 (as ) 47 SB
1262 1913 197 (parameters ) 198 SB
1460 1913 73 (this ) 74 SB
1534 1913 124 (cannot ) 125 SB
1659 1913 49 (be ) 50 SB
1709 1913 146 (handled ) 147 SB
1856 1913 45 (in ) 46 SB
1902 1913 63 (the ) 64 SB
1966 1913 86 (same) 86 SB
321 1976 140 (manner ) 143 SB
464 1976 46 (as ) 49 SB
513 1976 153 (declared ) 157 SB
670 1976 200 (exceptions. ) 204 SB
874 1976 133 (Instead ) 137 SB
1011 1976 63 (the ) 67 SB
1078 1976 113 (server ) 117 SB
1195 1976 88 (code ) 92 SB
1287 1976 192 (establishes ) 196 SB
1483 1976 30 (a ) 34 SB
1517 1976 135 (generic ) 139 SB
1656 1976 140 (handler ) 144 SB
1800 1976 14 (\() 14 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1814 1987 120 (catch ) 124 SB
1938 1987 100 (\(...\)) 100 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
2038 1976 14 (\)) 14 SB
321 2039 114 (which ) 120 SB
441 2039 124 (simply ) 130 SB
571 2039 104 (sends ) 110 SB
681 2039 63 (the ) 69 SB
750 2039 107 (status ) 113 SB
863 2039 44 (of ) 50 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
913 2050 420 (UNEXPECTED_EXCEPTION ) 426 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1339 2039 89 (back ) 95 SB
1434 2039 43 (to ) 49 SB
1483 2039 63 (the ) 69 SB
1552 2039 116 (client. ) 122 SB
1674 2039 112 (When ) 119 SB
1793 2039 63 (the ) 70 SB
1863 2039 105 (client ) 112 SB
1975 2039 77 (code) 77 SB
321 2102 126 (detects ) 131 SB
452 2102 73 (this ) 78 SB
530 2102 114 (return ) 119 SB
649 2102 107 (status ) 112 SB
761 2102 35 (it ) 40 SB
801 2102 117 (passes ) 122 SB
923 2102 35 (it ) 40 SB
963 2102 43 (to ) 48 SB
1011 2102 63 (the ) 68 SB
1079 2102 105 (caller ) 110 SB
1189 2102 62 (via ) 67 SB
1256 2102 63 (the ) 68 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1324 2113 160 (rpcAbort) 160 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1484 2102 11 ( ) 16 SB
1500 2102 204 (mechanism ) 209 SB
1709 2102 149 (outlined ) 154 SB
1863 2102 131 (earlier. ) 137 SB
2000 2102 52 (An) 52 SB
321 2165 190 (alternative ) 202 SB
523 2165 166 (approach ) 178 SB
701 2165 111 (might ) 123 SB
824 2165 49 (be ) 61 SB
885 2165 43 (to ) 55 SB
940 2165 109 (throw ) 121 SB
1061 2165 30 (a ) 42 SB
1103 2165 80 (stub ) 92 SB
1195 2165 139 (specific ) 151 SB
1346 2165 184 (exception, ) 196 SB
1542 2165 164 (however, ) 176 SB
1718 2165 35 (it ) 47 SB
1765 2165 39 (is ) 51 SB
1816 2165 191 (impossible ) 204 SB
2020 2165 32 (to) 32 SB
321 2228 170 (\(re\)throw ) 171 SB
492 2228 63 (the ) 64 SB
556 2228 173 (exception ) 174 SB
730 2228 76 (that ) 77 SB
807 2228 75 (was ) 76 SB
883 2228 143 (actually ) 144 SB
1027 2228 131 (thrown ) 132 SB
1159 2228 42 (at ) 43 SB
1202 2228 63 (the ) 64 SB
1266 2228 113 (server ) 114 SB
1380 2228 71 (due ) 72 SB
1452 2228 43 (to ) 44 SB
1496 2228 63 (the ) 64 SB
1560 2228 163 (complete ) 164 SB
1724 2228 81 (lack ) 82 SB
1806 2228 44 (of ) 46 SB
1852 2228 200 (information) 200 SB
321 2291 175 (regarding ) 182 SB
503 2291 63 (the ) 70 SB
573 2291 173 (exception ) 180 SB
753 2291 76 (that ) 83 SB
836 2291 75 (was ) 82 SB
918 2291 143 (actually ) 150 SB
1068 2291 142 (thrown. ) 149 SB
1217 2291 77 (The ) 84 SB
1301 2291 80 (stub ) 87 SB
1388 2291 171 (generator ) 179 SB
1567 2291 161 (produces ) 169 SB
1736 2291 151 (warning ) 159 SB
1895 2291 157 (messages) 157 SB
321 2354 1362 (whenever it produces this code to alert the programmer to the possible problems.) 1362 SB
471 2459 77 (The ) 85 SB
556 2459 177 (semantics ) 185 SB
741 2459 76 (that ) 84 SB
825 2459 82 (may ) 90 SB
915 2459 49 (be ) 57 SB
972 2459 182 (associated ) 190 SB
1162 2459 86 (with ) 95 SB
1257 2459 189 (exceptions ) 198 SB
1455 2459 39 (is ) 48 SB
1503 2459 133 (equally ) 142 SB
1645 2459 88 (hard ) 97 SB
1742 2459 43 (to ) 52 SB
1794 2459 119 (mimic ) 128 SB
1922 2459 97 (since ) 106 SB
2028 2459 24 (it) 24 SB
321 2522 148 (depends ) 154 SB
475 2522 139 (entirely ) 145 SB
620 2522 95 (upon ) 101 SB
721 2522 63 (the ) 69 SB
790 2522 112 (actual ) 118 SB
908 2522 88 (code ) 94 SB
1002 2522 44 (of ) 50 SB
1052 2522 63 (the ) 69 SB
1121 2522 148 (member ) 154 SB
1275 2522 151 (function ) 157 SB
1432 2522 43 (to ) 49 SB
1481 2522 114 (which ) 120 SB
1601 2522 63 (the ) 69 SB
1670 2522 80 (stub ) 87 SB
1757 2522 171 (generator ) 178 SB
1935 2522 68 (has ) 75 SB
2010 2522 42 (no) 42 SB
321 2585 1058 (access. For example consider the following example signature:) 1058 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
471 2702 1240 (long Aclass::doSomething \(aParameter& p1\) throw \(anException\);) 1240 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2795 77 (The ) 79 SB
550 2795 175 (generated ) 177 SB
727 2795 113 (server ) 115 SB
842 2795 88 (code ) 90 SB
932 2795 70 (can ) 72 SB
1004 2795 107 (easily ) 110 SB
1114 2795 158 (establish ) 161 SB
1275 2795 30 (a ) 33 SB
1308 2795 140 (handler ) 143 SB
1451 2795 63 (the ) 66 SB
1517 2795 59 (for ) 62 SB
1579 2795 63 (the ) 66 SB
1645 2795 173 (exception ) 176 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1821 2806 220 (anException) 220 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
2041 2795 11 (,) 11 SB
321 2858 164 (however, ) 172 SB
493 2858 36 (if ) 44 SB
537 2858 76 (that ) 84 SB
621 2858 173 (exception ) 182 SB
803 2858 39 (is ) 48 SB
851 2858 131 (thrown ) 140 SB
991 2858 50 (by ) 59 SB
1050 2858 63 (the ) 72 SB
1122 2858 111 (called ) 120 SB
1242 2858 151 (function ) 160 SB
1402 2858 63 (the ) 72 SB
1474 2858 167 (signature ) 176 SB
1650 2858 102 (alone ) 111 SB
1761 2858 39 (is ) 48 SB
1809 2858 202 (insufficient ) 211 SB
2020 2858 32 (to) 32 SB
321 2921 180 (determine ) 186 SB
507 2921 147 (whether ) 153 SB
660 2921 63 (the ) 69 SB
729 2921 181 (parameter ) 187 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
916 2932 40 (p1) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
956 2921 11 ( ) 17 SB
973 2921 39 (is ) 45 SB
1018 2921 95 (valid ) 101 SB
1119 2921 46 (or ) 52 SB
1171 2921 76 (not. ) 82 SB
1253 2921 57 (By ) 63 SB
1316 2921 156 (contrast, ) 162 SB
1478 2921 63 (the ) 69 SB
1547 2921 114 (return ) 121 SB
1668 2921 81 (type ) 88 SB
1756 2921 39 (is ) 46 SB
1802 2921 155 (assumed ) 162 SB
1964 2921 43 (to ) 50 SB
2014 2921 38 (be) 38 SB
321 2984 129 (invalid ) 135 SB
456 2984 97 (since ) 103 SB
559 2984 63 (the ) 69 SB
628 2984 151 (function ) 157 SB
785 2984 65 (did ) 71 SB
856 2984 65 (not ) 72 SB
928 2984 114 (return ) 121 SB
1049 2984 174 (normally. ) 181 SB
1230 2984 47 (In ) 54 SB
1284 2984 73 (this ) 80 SB
1364 2984 157 (situation ) 164 SB
1528 2984 63 (the ) 70 SB
1598 2984 175 (generated ) 182 SB
1780 2984 88 (code ) 95 SB
1875 2984 118 (makes ) 125 SB
2000 2984 52 (the) 52 SB
321 3047 392 (following assumptions:) 392 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (22) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
471 318 759 (The return type is invalid and is not returned) 759 SB
471 423 65 (All ) 66 SB
537 423 98 (other ) 99 SB
636 423 197 (parameters ) 198 SB
834 423 76 (that ) 77 SB
911 423 114 (would ) 115 SB
1026 423 90 (have ) 91 SB
1117 423 89 (been ) 90 SB
1207 423 153 (returned ) 154 SB
1361 423 36 (if ) 37 SB
1398 423 63 (the ) 64 SB
1462 423 173 (exception ) 174 SB
1636 423 73 (had ) 74 SB
1710 423 65 (not ) 66 SB
1776 423 89 (been ) 91 SB
1867 423 131 (thrown ) 133 SB
2000 423 52 (are) 52 SB
471 486 562 (valid and are returned as normal.) 562 SB
471 591 758 (The exception itself is encoded and returned.) 758 SB
471 696 1345 (These problems notwithstanding the support for C++ exceptions is as complete ) 1346 SB
1817 696 46 (as ) 47 SB
1864 696 35 (it ) 36 SB
1900 696 152 (currently) 152 SB
321 759 1511 (can be given the information available in the header files processed by the stub generator.) 1511 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 892 117 (2.12.) 117 SB
471 892 695 (Local and Remote Instances) 695 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1016 77 (The ) 98 SB
569 1016 80 (stub ) 101 SB
670 1016 171 (generator ) 192 SB
862 1016 91 (aims ) 112 SB
974 1016 43 (to ) 65 SB
1039 1016 138 (provide ) 160 SB
1199 1016 202 (transparent ) 224 SB
1423 1016 217 (distribution. ) 239 SB
1662 1016 171 (However, ) 193 SB
1855 1016 123 (should ) 145 SB
2000 1016 52 (the) 52 SB
321 1079 221 (programmer ) 224 SB
545 1079 90 (wish ) 93 SB
638 1079 43 (to ) 46 SB
684 1079 168 (explicitly ) 171 SB
855 1079 111 (create ) 114 SB
969 1079 92 (local ) 95 SB
1064 1079 73 (and ) 76 SB
1140 1079 127 (remote ) 130 SB
1270 1079 166 (instances ) 170 SB
1440 1079 44 (of ) 48 SB
1488 1079 30 (a ) 34 SB
1522 1079 175 (particular ) 179 SB
1701 1079 92 (class ) 96 SB
1797 1079 73 (this ) 77 SB
1874 1079 39 (is ) 43 SB
1917 1079 135 (possible) 135 SB
321 1142 97 (since ) 99 SB
420 1142 54 (all ) 56 SB
476 1142 146 (variants ) 149 SB
625 1142 44 (of ) 47 SB
672 1142 63 (the ) 66 SB
738 1142 92 (class ) 95 SB
833 1142 63 (are ) 66 SB
899 1142 153 (declared ) 156 SB
1055 1142 45 (in ) 48 SB
1103 1142 63 (the ) 66 SB
1169 1142 204 (appropriate ) 207 SB
1376 1142 80 (stub ) 83 SB
1459 1142 124 (header ) 127 SB
1586 1142 77 (file. ) 80 SB
1666 1142 96 (Thus ) 99 SB
1765 1142 59 (for ) 62 SB
1827 1142 30 (a ) 33 SB
1860 1142 92 (class ) 95 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1955 1153 20 (X) 20 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1975 1142 22 (, ) 25 SB
2000 1142 52 (the) 52 SB
321 1205 92 (class ) 94 SB
415 1205 119 (names ) 121 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
536 1216 120 (LocalX) 120 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
656 1205 11 ( ) 13 SB
669 1205 73 (and ) 76 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
745 1216 140 (RemoteX) 140 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
885 1205 11 ( ) 14 SB
899 1205 63 (are ) 66 SB
965 1205 78 (also ) 81 SB
1046 1205 162 (available ) 165 SB
1211 1205 73 (and ) 76 SB
1287 1205 170 (designate ) 173 SB
1460 1205 30 (a ) 33 SB
1493 1205 92 (local ) 95 SB
1588 1205 150 (instance ) 153 SB
1741 1205 44 (of ) 47 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1788 1216 20 (X) 20 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1808 1205 11 ( ) 14 SB
1822 1205 14 (\() 14 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1836 1216 120 (LocalX) 120 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1956 1205 25 (\) ) 28 SB
1984 1205 46 (or ) 49 SB
2033 1205 19 (a) 19 SB
321 1268 321 (remote instance of ) 321 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
642 1279 20 (X) 20 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
662 1268 25 ( \() 25 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
687 1279 140 (RemoteX) 140 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
827 1268 25 (\).) 25 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
471 1373 120 (Caveat) 120 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
591 1373 23 (: ) 27 SB
618 1373 148 (Because ) 152 SB
770 1373 63 (the ) 67 SB
837 1373 80 (stub ) 84 SB
921 1373 171 (generator ) 175 SB
1096 1373 82 (uses ) 86 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1182 1373 61 (cpp) 61 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1243 1373 11 ( ) 15 SB
1258 1373 132 (macros ) 136 SB
1394 1373 43 (to ) 47 SB
1441 1373 84 (hide ) 88 SB
1529 1373 63 (the ) 67 SB
1596 1373 131 (change ) 135 SB
1731 1373 44 (of ) 48 SB
1779 1373 103 (name ) 108 SB
1887 1373 44 (of ) 49 SB
1936 1373 30 (a ) 35 SB
1971 1373 81 (class) 81 SB
321 1436 85 (then ) 87 SB
408 1436 132 (mixing ) 134 SB
542 1436 80 (stub ) 82 SB
624 1436 175 (generated ) 177 SB
801 1436 124 (header ) 126 SB
927 1436 82 (files ) 84 SB
1011 1436 86 (with ) 88 SB
1099 1436 154 (ordinary ) 156 SB
1255 1436 124 (header ) 126 SB
1381 1436 82 (files ) 84 SB
1465 1436 45 (in ) 47 SB
1512 1436 63 (the ) 65 SB
1577 1436 97 (same ) 99 SB
1676 1436 199 (application ) 201 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1877 1436 70 (may) 70 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1947 1436 11 ( ) 13 SB
1960 1436 92 (cause) 92 SB
321 1499 201 (unexpected ) 206 SB
527 1499 178 (behaviour ) 183 SB
710 1499 42 (at ) 47 SB
757 1499 69 (run ) 74 SB
831 1499 86 (time ) 91 SB
922 1499 76 (that ) 81 SB
1003 1499 39 (is ) 44 SB
1047 1499 222 (undetectable ) 227 SB
1274 1499 42 (at ) 47 SB
1321 1499 145 (compile ) 150 SB
1471 1499 97 (time. ) 102 SB
1573 1499 87 (This ) 92 SB
1665 1499 155 (typically ) 160 SB
1825 1499 119 (occurs ) 124 SB
1949 1499 45 (in ) 51 SB
2000 1499 52 (the) 52 SB
321 1562 157 (presence ) 163 SB
484 1562 44 (of ) 50 SB
534 1562 200 (inheritence ) 206 SB
740 1562 36 (if ) 42 SB
782 1562 63 (the ) 69 SB
851 1562 80 (stub ) 87 SB
938 1562 175 (generated ) 182 SB
1120 1562 134 (version ) 141 SB
1261 1562 44 (of ) 51 SB
1312 1562 71 (one ) 78 SB
1390 1562 124 (header ) 131 SB
1521 1562 66 (file ) 73 SB
1594 1562 39 (is ) 46 SB
1640 1562 156 (included ) 163 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1803 1562 48 (as ) 55 SB
1858 1562 80 (well ) 87 SB
1945 1562 37 (as) 37 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1982 1562 11 ( ) 18 SB
2000 1562 52 (the) 52 SB
321 1625 132 (normal ) 136 SB
457 1625 134 (version ) 138 SB
595 1625 44 (of ) 48 SB
643 1625 139 (another ) 143 SB
786 1625 124 (header ) 128 SB
914 1625 66 (file ) 70 SB
984 1625 73 (and ) 77 SB
1061 1625 63 (the ) 67 SB
1128 1625 126 (classes ) 131 SB
1259 1625 45 (in ) 50 SB
1309 1625 97 (these ) 102 SB
1411 1625 140 (headers ) 145 SB
1556 1625 124 (inherit ) 129 SB
1685 1625 92 (from ) 97 SB
1782 1625 30 (a ) 35 SB
1817 1625 157 (common ) 162 SB
1979 1625 73 (base) 73 SB
321 1688 1095 (class. Consider the following simple case in which the classes X ) 1096 SB
1417 1688 73 (and ) 74 SB
1491 1688 41 (Y ) 42 SB
1533 1688 167 (\(declared ) 168 SB
1701 1688 45 (in ) 46 SB
1747 1688 63 (the ) 64 SB
1811 1688 241 (corresponding) 241 SB
321 1751 966 (header files\) are both derived from a common class Base.) 966 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1849 380 (#include "X_stub.h") 380 SB
321 1885 280 (#include "Y.h") 280 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1978 47 (In ) 58 SB
529 1978 63 (the ) 74 SB
603 1978 108 (above ) 119 SB
722 1978 162 (scenario, ) 174 SB
896 1978 166 (inclusion ) 178 SB
1074 1978 44 (of ) 56 SB
1130 1978 63 (the ) 75 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1205 1989 160 (X_stub.h) 160 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1365 1978 11 ( ) 23 SB
1388 1978 66 (file ) 78 SB
1466 1978 76 (will ) 88 SB
1554 1978 90 (have ) 102 SB
1656 1978 239 (automatically ) 251 SB
1907 1978 145 (included) 145 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 2052 220 (Base_stub.h) 220 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
541 2041 11 ( ) 15 SB
556 2041 185 (\(assuming ) 189 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
745 2052 60 (X.h) 60 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
805 2041 11 ( ) 15 SB
820 2041 175 (originally ) 179 SB
999 2041 156 (included ) 160 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1159 2052 120 (Base.h) 120 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1279 2041 25 (\) ) 29 SB
1308 2041 73 (and ) 78 SB
1386 2041 76 (will ) 81 SB
1467 2041 90 (have ) 95 SB
1562 2041 87 (used ) 92 SB
1654 2041 71 (cpp ) 76 SB
1730 2041 132 (macros ) 137 SB
1867 2041 43 (to ) 48 SB
1915 2041 137 (redefine) 137 SB
321 2104 63 (the ) 70 SB
391 2104 92 (class ) 99 SB
490 2104 124 (named ) 131 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
621 2115 80 (Base) 80 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
701 2104 11 ( ) 18 SB
719 2104 46 (as ) 54 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
773 2115 200 (RemoteBase) 200 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
973 2104 22 (. ) 30 SB
1003 2104 112 (When ) 120 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1123 2115 60 (Y.h) 60 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1183 2104 11 ( ) 19 SB
1202 2104 39 (is ) 47 SB
1249 2104 84 (read ) 92 SB
1341 2104 63 (the ) 71 SB
1412 2104 116 (macro ) 124 SB
1536 2104 207 (substitution ) 215 SB
1751 2104 135 (process ) 143 SB
1894 2104 76 (will ) 84 SB
1978 2104 74 (then) 74 SB
321 2167 192 (incorrectly ) 198 SB
519 2167 115 (derive ) 121 SB
640 2167 92 (class ) 98 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
738 2178 20 (Y) 20 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
758 2167 11 ( ) 17 SB
775 2167 92 (from ) 98 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
873 2178 200 (RemoteBase) 200 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1073 2167 22 (. ) 29 SB
1102 2167 87 (This ) 94 SB
1196 2167 88 (code ) 95 SB
1291 2167 76 (will ) 83 SB
1374 2167 145 (compile ) 152 SB
1526 2167 73 (and ) 80 SB
1606 2167 78 (link ) 85 SB
1691 2167 64 (but ) 71 SB
1762 2167 76 (will ) 83 SB
1845 2167 128 (behave ) 135 SB
1980 2167 72 (very) 72 SB
321 2230 299 (badly at run time.) 299 SB
471 2335 38 (If ) 44 SB
515 2335 63 (the ) 69 SB
584 2335 72 (two ) 78 SB
662 2335 135 (include ) 141 SB
803 2335 189 (statements ) 195 SB
998 2335 73 (had ) 79 SB
1077 2335 89 (been ) 95 SB
1172 2335 152 (reversed ) 158 SB
1330 2335 63 (the ) 69 SB
1399 2335 88 (code ) 94 SB
1493 2335 114 (would ) 120 SB
1613 2335 90 (have ) 97 SB
1710 2335 135 (worked ) 142 SB
1852 2335 46 (as ) 53 SB
1905 2335 147 (expected) 147 SB
321 2398 111 (\(since ) 120 SB
441 2398 63 (the ) 72 SB
513 2398 208 (redefinition ) 217 SB
730 2398 44 (of ) 53 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
783 2409 80 (Base) 80 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
863 2398 11 ( ) 20 SB
883 2398 114 (would ) 123 SB
1006 2398 65 (not ) 74 SB
1080 2398 49 (be ) 58 SB
1138 2398 45 (in ) 54 SB
1192 2398 103 (effect ) 112 SB
1304 2398 102 (when ) 111 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1415 2409 20 (Y) 20 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1435 2398 11 ( ) 20 SB
1455 2398 75 (was ) 85 SB
1540 2398 161 (defined\). ) 171 SB
1711 2398 104 (Since ) 114 SB
1825 2398 73 (this ) 83 SB
1908 2398 144 (ordering) 144 SB
321 2461 150 (problem ) 152 SB
473 2461 70 (can ) 72 SB
545 2461 91 (arise ) 93 SB
638 2461 184 (effectively ) 186 SB
824 2461 181 (arbitrarily ) 183 SB
1007 2461 35 (it ) 37 SB
1044 2461 50 (is, ) 52 SB
1096 2461 45 (in ) 47 SB
1143 2461 136 (general ) 138 SB
1281 2461 30 (a ) 32 SB
1313 2461 71 (bad ) 73 SB
1386 2461 81 (idea ) 83 SB
1469 2461 43 (to ) 45 SB
1514 2461 77 (mix ) 79 SB
1593 2461 80 (stub ) 82 SB
1675 2461 140 (headers ) 142 SB
1817 2461 86 (with ) 88 SB
1905 2461 75 (non ) 78 SB
1983 2461 69 (stub) 69 SB
321 2524 371 (headers in such cases.) 371 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (23) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 75 75 0 0 0 69 /Times-Bold /font29 ANSIFont font
0 0 0 fC
321 306 792 (Appendix A: Installation) 792 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 448 87 (This ) 93 SB
564 448 153 (software ) 159 SB
723 448 68 (has ) 74 SB
797 448 89 (been ) 95 SB
892 448 108 (tested ) 114 SB
1006 448 53 (on ) 59 SB
1065 448 104 (Suns, ) 110 SB
1175 448 158 (HP9000, ) 164 SB
1339 448 156 (RS6000, ) 163 SB
1502 448 73 (and ) 80 SB
1582 448 89 (Intel ) 96 SB
1678 448 182 (386-based ) 189 SB
1867 448 185 (computers.) 185 SB
321 511 171 (Although ) 178 SB
499 511 65 (not ) 72 SB
571 511 225 (intentionally ) 232 SB
803 511 155 (machine ) 162 SB
965 511 139 (specific ) 146 SB
1111 511 35 (it ) 42 SB
1153 511 147 (requires ) 154 SB
1307 511 127 (certain ) 135 SB
1442 511 96 (basic ) 104 SB
1546 511 202 (capabilities ) 210 SB
1756 511 92 (from ) 100 SB
1856 511 63 (the ) 71 SB
1927 511 125 (system,) 125 SB
321 574 233 (these include:) 233 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 672 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 676 332 (BSD style Sockets \() 332 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
803 676 202 (RPC system) 202 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1005 676 25 (\).) 25 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 777 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 781 627 (A version of imake \(system building\)) 627 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 882 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 886 914 (A version of the C pre-processor that allows #pragma.) 914 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 987 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 991 474 (Support for long file names.) 474 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 1127 101 (A.1.) 101 SB
471 1127 502 (Loading the Sources) 502 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1251 77 (The ) 86 SB
557 1251 119 (source ) 129 SB
686 1251 161 (directory ) 171 SB
857 1251 74 (tree ) 84 SB
941 1251 152 (contains ) 162 SB
1103 1251 63 (the ) 73 SB
1176 1251 132 (current ) 142 SB
1318 1251 277 (implementation ) 287 SB
1605 1251 44 (of ) 54 SB
1659 1251 63 (the ) 73 SB
1732 1251 136 (system. ) 146 SB
1878 1251 174 (Individual) 174 SB
321 1314 486 (README files may exist in ) 487 SB
808 1314 88 (each ) 89 SB
897 1314 232 (sub-directory ) 233 SB
1130 1314 43 (to ) 44 SB
1174 1314 205 (supplement ) 206 SB
1380 1314 63 (the ) 64 SB
1444 1314 211 (information ) 212 SB
1656 1314 45 (in ) 46 SB
1702 1314 73 (this ) 74 SB
1776 1314 140 (section. ) 141 SB
1917 1314 82 (You ) 83 SB
2000 1314 52 (are) 52 SB
321 1377 872 (advised to read them all before doing anything else.) 872 SB
471 1482 77 (The ) 85 SB
556 1482 119 (source ) 128 SB
684 1482 39 (is ) 48 SB
732 1482 84 (split ) 93 SB
825 1482 77 (into ) 86 SB
911 1482 129 (several ) 138 SB
1049 1482 259 (sub-directories ) 268 SB
1317 1482 46 (as ) 55 SB
1372 1482 215 (documented ) 224 SB
1596 1482 121 (below. ) 130 SB
1726 1482 96 (Each ) 105 SB
1831 1482 221 (sub-directory) 221 SB
321 1545 152 (contains ) 164 SB
485 1545 71 (one ) 83 SB
568 1545 197 (component ) 209 SB
777 1545 44 (of ) 56 SB
833 1545 63 (the ) 75 SB
908 1545 163 (complete ) 175 SB
1083 1545 136 (system. ) 149 SB
1232 1545 111 (These ) 124 SB
1356 1545 213 (components ) 226 SB
1582 1545 87 (\(and ) 100 SB
1682 1545 90 (their ) 103 SB
1785 1545 202 (directories\) ) 215 SB
2000 1545 52 (are) 52 SB
321 1608 164 (currently:) 164 SB
321 1713 168 (Common:) 168 SB
471 1776 608 (Classes used throughout the system.) 608 SB
321 1881 138 (Include:) 138 SB
471 1944 608 (The header files used by the system.) 608 SB
321 2049 90 (RPC:) 90 SB
471 2112 41 (A ) 42 SB
513 2112 130 (Simple ) 131 SB
644 2112 89 (RPC ) 90 SB
734 2112 204 (mechanism ) 205 SB
939 2112 159 (provided ) 160 SB
1099 2112 84 (here ) 85 SB
1184 2112 46 (as ) 47 SB
1231 2112 52 (an ) 53 SB
1284 2112 153 (example ) 154 SB
1438 2112 95 (only. ) 96 SB
1534 2112 37 (It ) 38 SB
1572 2112 82 (uses ) 84 SB
1656 2112 132 (sockets ) 134 SB
1790 2112 73 (and ) 75 SB
1865 2112 108 (either ) 110 SB
1975 2112 77 (TCP) 77 SB
471 2175 616 (or UDP as the underlying transport..) 616 SB
321 2280 158 (StubGen:) 158 SB
471 2343 77 (The ) 86 SB
557 2343 80 (stub ) 89 SB
646 2343 171 (generator ) 180 SB
826 2343 76 (that ) 86 SB
912 2343 154 (provides ) 164 SB
1076 2343 116 (access ) 126 SB
1202 2343 227 (transparency ) 237 SB
1439 2343 43 (to ) 53 SB
1492 2343 127 (remote ) 137 SB
1629 2343 126 (objects ) 136 SB
1765 2343 50 (by ) 60 SB
1825 2343 148 (creating ) 158 SB
1983 2343 69 (stub) 69 SB
471 2406 126 (objects ) 128 SB
599 2406 76 (that ) 78 SB
677 2406 90 (have ) 92 SB
769 2406 63 (the ) 65 SB
834 2406 97 (same ) 99 SB
933 2406 115 (public ) 117 SB
1050 2406 158 (interface ) 160 SB
1210 2406 46 (as ) 48 SB
1258 2406 63 (the ) 65 SB
1323 2406 144 (original ) 146 SB
1469 2406 110 (object ) 112 SB
1581 2406 64 (but ) 67 SB
1648 2406 76 (that ) 79 SB
1727 2406 90 (have ) 93 SB
1820 2406 54 (all ) 57 SB
1877 2406 175 (operations) 175 SB
471 2469 909 (implemented as RPC calls to the actual remote object.) 909 SB
321 2574 100 (Tests:) 100 SB
471 2637 1342 (Some simple tests to verify that the build of the system has completed correctly.) 1342 SB
321 2742 147 (Utilities:) 147 SB
471 2805 499 (Contains some useful utilities) 499 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (24) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
0 0 0 fC
321 346 101 (A.2.) 101 SB
471 346 538 (System Configuration) 538 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 470 77 (The ) 86 SB
557 470 125 (system ) 134 SB
691 470 93 (must ) 102 SB
793 470 49 (be ) 58 SB
851 470 192 (configured ) 201 SB
1052 470 59 (for ) 68 SB
1120 470 63 (the ) 72 SB
1192 470 92 (local ) 101 SB
1293 470 236 (environment. ) 245 SB
1538 470 57 (To ) 66 SB
1604 470 52 (do ) 61 SB
1665 470 84 (this, ) 93 SB
1758 470 69 (run ) 78 SB
1836 470 63 (the ) 72 SB
1908 470 144 (program) 144 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 544 180 (configure) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
501 533 11 ( ) 17 SB
518 533 45 (in ) 51 SB
569 533 63 (the ) 69 SB
638 533 64 (top ) 70 SB
708 533 161 (directory ) 168 SB
876 533 44 (of ) 51 SB
927 533 63 (the ) 70 SB
997 533 130 (source. ) 137 SB
1134 533 87 (This ) 94 SB
1228 533 155 (program ) 162 SB
1390 533 170 (generates ) 177 SB
1567 533 63 (the ) 70 SB
1637 533 66 (file ) 73 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1710 544 220 (Configure.h) 220 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1930 533 11 ( ) 18 SB
1948 533 45 (in ) 52 SB
2000 533 52 (the) 52 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 607 140 (Include) 140 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
461 596 12 (/) 12 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
473 607 120 (Config) 120 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
593 596 172 ( directory.) 172 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 694 180 (configure) 180 SB
321 730 100 (. . .) 100 SB
321 766 600 (make -f MakefileBoot Makefiles) 600 SB
321 802 220 (make depend) 220 SB
321 838 160 (make all) 160 SB
321 874 240 (make install) 240 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 967 202 (Besides the ) 202 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
673 978 80 (make) 80 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
753 967 707 ( targets already mentioned, the generated ) 707 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1460 978 160 (Makefile) 160 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1620 967 255 (, also provides:) 255 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1085 180 (Makefile_) 180 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
621 1067 847 (Regenerates the Makefile in that directory.) 847 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1194 180 (Makefiles) 180 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
621 1176 1345 (Regenerates all the Makefiles in the sub-directories of the directory.) 1345 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1303 80 (tidy) 80 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
621 1285 1330 (Removes all temporary files in the directory and its sub-directories.) 1330 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1412 100 (clean) 100 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
621 1394 1419 (Removes all temporary files and object files in the directory and its sub-) 1419 SB
621 1453 222 (directories.) 222 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1580 100 (purge) 100 SB
32 0 0 50 50 0 0 0 45 /Times-Roman /font32 ANSIFont font
621 1562 1419 (Removes all temporary files, object files programs, and Makefiles in the) 1419 SB
621 1621 642 (directory and its sub-directories.) 642 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 1763 101 (A.3.) 101 SB
471 1763 555 (The Run-Time System) 555 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1887 77 (The ) 80 SB
551 1887 158 (run-time ) 161 SB
712 1887 137 (support ) 140 SB
852 1887 143 (consists ) 146 SB
998 1887 44 (of ) 47 SB
1045 1887 158 (run-time ) 161 SB
1206 1887 150 (libraries ) 154 SB
1360 1887 76 (that ) 80 SB
1440 1887 63 (are ) 67 SB
1507 1887 117 (linked ) 121 SB
1628 1887 86 (with ) 90 SB
1718 1887 334 (applications/servers) 334 SB
321 1950 1149 (and a daemon process that co-ordinates the distribution mechanism.) 1149 SB
32 0 0 42 42 0 0 0 42 /Symbol font
gs 340 3426 0 0 CB
321 2048 19 (\267) 19 SB
gr
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2052 77 (The ) 91 SB
562 2052 162 (Manager ) 176 SB
738 2052 153 (Daemon ) 168 SB
906 2052 14 (\() 14 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
920 2063 220 (etc/manager) 220 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1140 2052 37 (\): ) 52 SB
1192 2052 39 (is ) 54 SB
1246 2052 63 (the ) 78 SB
1324 2052 110 (object ) 125 SB
1449 2052 158 (manager ) 173 SB
1622 2052 76 (that ) 91 SB
1713 2052 127 (creates ) 142 SB
1855 2052 80 (new ) 95 SB
1950 2052 102 (server) 102 SB
471 2118 169 (processes ) 176 SB
647 2118 46 (as ) 53 SB
700 2118 126 (objects ) 133 SB
833 2118 62 (get ) 69 SB
902 2118 162 (initiated. ) 169 SB
1071 2118 77 (The ) 84 SB
1155 2118 158 (manager ) 165 SB
1320 2118 135 (expects ) 142 SB
1462 2118 43 (to ) 50 SB
1512 2118 79 (find ) 86 SB
1598 2118 54 (all ) 61 SB
1659 2118 113 (server ) 120 SB
1779 2118 188 (executable ) 196 SB
1975 2118 77 (code) 77 SB
471 2181 148 (residing ) 149 SB
620 2181 45 (in ) 46 SB
666 2181 30 (a ) 31 SB
697 2181 127 (default ) 128 SB
825 2181 146 (location ) 147 SB
972 2181 114 (which ) 115 SB
1087 2181 39 (is ) 41 SB
1128 2181 136 (derived ) 138 SB
1266 2181 92 (from ) 94 SB
1360 2181 63 (the ) 65 SB
1425 2181 201 (installation ) 203 SB
1628 2181 161 (directory ) 163 SB
1791 2181 160 (specified ) 162 SB
1953 2181 45 (in ) 47 SB
2000 2181 52 (the) 52 SB
471 2244 276 (configure script.) 276 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (25) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 75 75 0 0 0 69 /Times-Bold /font29 ANSIFont font
0 0 0 fC
321 306 1168 (Appendix B: Implementation Details) 1168 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 476 83 (B.1) 83 SB
471 476 897 (Interfacing To The Underlying RPC) 897 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 600 47 (In ) 56 SB
527 600 100 (order ) 109 SB
636 600 43 (to ) 52 SB
688 600 49 (be ) 58 SB
746 600 46 (as ) 55 SB
801 600 148 (portable ) 157 SB
958 600 46 (as ) 55 SB
1013 600 146 (possible ) 155 SB
1168 600 63 (the ) 72 SB
1240 600 80 (stub ) 89 SB
1329 600 171 (generator ) 180 SB
1509 600 115 (places ) 124 SB
1633 600 46 (as ) 55 SB
1688 600 71 (few ) 80 SB
1768 600 161 (demands ) 170 SB
1938 600 53 (on ) 62 SB
2000 600 52 (the) 52 SB
321 663 194 (underlying ) 197 SB
518 663 89 (RPC ) 92 SB
610 663 125 (system ) 128 SB
738 663 46 (as ) 49 SB
787 663 35 (it ) 38 SB
825 663 81 (can. ) 85 SB
910 663 47 (In ) 51 SB
961 663 175 (particular ) 179 SB
1140 663 35 (it ) 39 SB
1179 663 147 (requires ) 151 SB
1330 663 84 (only ) 88 SB
1418 663 63 (the ) 67 SB
1485 663 117 (ability ) 121 SB
1606 663 43 (to ) 47 SB
1653 663 130 (initiate ) 134 SB
1787 663 30 (a ) 34 SB
1821 663 195 (connection ) 199 SB
2020 663 32 (to) 32 SB
321 726 98 (some ) 100 SB
421 726 127 (remote ) 129 SB
550 726 124 (server, ) 126 SB
676 726 30 (a ) 32 SB
708 726 119 (means ) 121 SB
829 726 44 (of ) 46 SB
875 726 139 (making ) 141 SB
1016 726 112 (actual ) 114 SB
1130 726 99 (calls, ) 101 SB
1231 726 73 (and ) 75 SB
1306 726 30 (a ) 32 SB
1338 726 137 (method ) 140 SB
1478 726 44 (of ) 47 SB
1525 726 159 (breaking ) 162 SB
1687 726 63 (the ) 66 SB
1753 726 206 (connection. ) 209 SB
1962 726 11 ( ) 14 SB
1976 726 76 (This) 76 SB
321 789 185 (separation ) 192 SB
513 789 44 (of ) 51 SB
564 789 63 (the ) 70 SB
634 789 121 (details ) 128 SB
762 789 44 (of ) 51 SB
813 789 63 (the ) 70 SB
883 789 112 (actual ) 119 SB
1002 789 89 (RPC ) 96 SB
1098 789 92 (from ) 100 SB
1198 789 63 (the ) 71 SB
1269 789 158 (interface ) 166 SB
1435 789 85 (seen ) 93 SB
1528 789 50 (by ) 58 SB
1586 789 63 (the ) 71 SB
1657 789 175 (generated ) 183 SB
1840 789 80 (stub ) 88 SB
1928 789 88 (code ) 96 SB
2024 789 28 (is) 28 SB
321 852 177 (important ) 184 SB
505 852 73 (and ) 80 SB
585 852 68 (has ) 75 SB
660 852 104 (many ) 111 SB
771 852 209 (advantages. ) 216 SB
987 852 47 (In ) 55 SB
1042 852 186 (particular, ) 194 SB
1236 852 96 (stubs ) 104 SB
1340 852 70 (can ) 78 SB
1418 852 49 (be ) 57 SB
1475 852 175 (generated ) 183 SB
1658 852 139 (without ) 147 SB
1805 852 120 (regard ) 128 SB
1933 852 59 (for ) 67 SB
2000 852 52 (the) 52 SB
321 915 112 (actual ) 113 SB
434 915 89 (RPC ) 90 SB
524 915 204 (mechanism ) 205 SB
729 915 87 (used ) 89 SB
818 915 175 (providing ) 177 SB
995 915 76 (that ) 78 SB
1073 915 63 (the ) 65 SB
1138 915 89 (RPC ) 91 SB
1229 915 204 (mechanism ) 206 SB
1435 915 161 (complies ) 163 SB
1598 915 86 (with ) 88 SB
1686 915 63 (the ) 65 SB
1751 915 152 (required ) 154 SB
1905 915 147 (interface) 147 SB
321 978 224 (specification.) 224 SB
471 1083 77 (The ) 85 SB
556 1083 80 (stub ) 88 SB
644 1083 175 (generated ) 183 SB
827 1083 88 (code ) 96 SB
923 1083 82 (uses ) 90 SB
1013 1083 84 (only ) 92 SB
1105 1083 96 (three ) 104 SB
1209 1083 126 (classes ) 134 SB
1343 1083 46 (as ) 55 SB
1398 1083 51 (its ) 60 SB
1458 1083 158 (interface ) 167 SB
1625 1083 43 (to ) 52 SB
1677 1083 63 (the ) 72 SB
1749 1083 89 (RPC ) 98 SB
1847 1083 205 (mechanism:) 205 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1157 360 (ClientRpcManager, ) 364 SB
685 1157 220 (ClientRpc, ) 224 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
909 1146 62 (and) 62 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
971 1157 20 ( ) 24 SB
995 1157 180 (ServerRpc) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1175 1146 22 (. ) 26 SB
1201 1146 57 (As ) 61 SB
1262 1146 158 (expected ) 162 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1424 1157 180 (ClientRpc) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1604 1146 11 ( ) 16 SB
1620 1146 182 (represents ) 187 SB
1807 1146 63 (the ) 68 SB
1875 1146 105 (client ) 110 SB
1985 1146 67 (side) 67 SB
321 1209 90 (view ) 99 SB
420 1209 44 (of ) 53 SB
473 1209 63 (the ) 72 SB
545 1209 89 (RPC ) 98 SB
643 1209 204 (mechanism ) 213 SB
856 1209 73 (and ) 82 SB
938 1209 154 (provides ) 163 SB
1101 1209 186 (operations ) 195 SB
1296 1209 43 (to ) 52 SB
1348 1209 130 (initiate ) 139 SB
1487 1209 52 (an ) 62 SB
1549 1209 89 (RPC ) 99 SB
1648 1209 195 (connection ) 205 SB
1853 1209 14 (\() 14 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1867 1220 160 (Initiate) 160 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
2027 1209 25 (\),) 25 SB
321 1272 389 (perform a remote call \() 389 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
710 1283 80 (Call) 80 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
790 1272 574 (\), and break the RPC connection \() 574 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1364 1283 180 (Terminate) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1544 1272 36 (\). ) 36 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1580 1283 160 (Initiate) 160 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1740 1272 292 ( should establish ) 293 SB
2033 1272 19 (a) 19 SB
321 1335 141 (binding ) 155 SB
476 1335 148 (between ) 162 SB
638 1335 63 (the ) 78 SB
716 1335 105 (client ) 120 SB
836 1335 73 (and ) 88 SB
924 1335 63 (the ) 78 SB
1002 1335 113 (server ) 128 SB
1130 1335 144 (through ) 159 SB
1289 1335 164 (whatever ) 179 SB
1468 1335 204 (mechanism ) 219 SB
1687 1335 63 (the ) 78 SB
1765 1335 194 (underlying ) 209 SB
1974 1335 78 (RPC) 78 SB
321 1398 204 (mechanism ) 217 SB
538 1398 154 (provides ) 167 SB
705 1398 103 (using ) 116 SB
821 1398 63 (the ) 77 SB
898 1398 211 (information ) 225 SB
1123 1398 159 (provided ) 173 SB
1296 1398 50 (by ) 64 SB
1360 1398 63 (the ) 77 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1437 1409 220 (ServiceName) 220 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1657 1398 11 ( ) 25 SB
1682 1398 110 (object ) 124 SB
1806 1398 153 (supplied ) 167 SB
1973 1398 46 (as ) 60 SB
2033 1398 19 (a) 19 SB
321 1461 192 (parameter. ) 198 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
519 1472 180 (Terminate) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
699 1461 11 ( ) 17 SB
716 1461 120 (breaks ) 126 SB
842 1461 63 (the ) 69 SB
911 1461 141 (binding ) 148 SB
1059 1461 148 (between ) 155 SB
1214 1461 30 (a ) 37 SB
1251 1461 105 (client ) 112 SB
1363 1461 73 (and ) 80 SB
1443 1461 30 (a ) 37 SB
1480 1461 124 (server, ) 131 SB
1611 1461 115 (while. ) 122 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1733 1472 80 (Call) 80 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1813 1461 11 ( ) 18 SB
1831 1461 162 (performs ) 169 SB
2000 1461 52 (the) 52 SB
321 1524 112 (actual ) 114 SB
435 1524 100 (RPC. ) 102 SB
537 1524 77 (The ) 79 SB
616 1524 97 (main ) 99 SB
715 1524 197 (parameters ) 199 SB
914 1524 43 (to ) 45 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
959 1535 80 (Call) 80 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1039 1524 11 ( ) 13 SB
1052 1524 63 (are ) 65 SB
1117 1524 52 (an ) 55 SB
1172 1524 129 (opcode ) 132 SB
1304 1524 182 (indicating ) 185 SB
1489 1524 114 (which ) 117 SB
1606 1524 170 (operation ) 173 SB
1779 1524 43 (to ) 46 SB
1825 1524 124 (invoke ) 127 SB
1952 1524 45 (in ) 48 SB
2000 1524 52 (the) 52 SB
321 1587 1559 (server and buffers for the call arguments and returned results, together with two status flags.) 1559 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1685 300 (class ClientRpc) 300 SB
321 1721 20 ({) 20 SB
321 1757 140 (public:) 140 SB
413 1793 40 (//) 40 SB
413 1829 900 (// Fundamental generic operations provided by) 900 SB
413 1865 420 (// the RPC interface.) 420 SB
413 1901 40 (//) 40 SB
413 1973 800 (ClientRpc \(const char* serviceName = 0\);) 800 SB
413 2009 420 (virtual ~ClientRpc\(\);) 420 SB
413 2081 440 (RPC_Status Initiate\(\);) 440 SB
413 2117 1600 (RPC_Status Call\(long opcode, RpcBuffer& call, long& errcode, RpcBuffer& result\);) 1600 SB
413 2153 620 (virtual RPC_Status Terminate\(\);) 620 SB
321 2189 40 (};) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2282 179 (Similarly, ) 192 SB
663 2282 63 (the ) 76 SB
739 2282 113 (server ) 126 SB
865 2282 78 (side ) 91 SB
956 2282 44 (of ) 57 SB
1013 2282 63 (the ) 77 SB
1090 2282 195 (connection ) 209 SB
1299 2282 39 (is ) 53 SB
1352 2282 146 (handled ) 160 SB
1512 2282 50 (by ) 64 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1576 2293 180 (ServerRpc) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1756 2282 11 ( ) 25 SB
1781 2282 114 (which ) 128 SB
1909 2282 143 (provides) 143 SB
321 2345 728 (operations to receive an incoming request \() 728 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1049 2356 140 (GetWork) 140 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1189 2345 445 (\) and return some results \() 445 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1634 2356 180 (SendReply) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1814 2345 25 (\).) 25 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 2443 300 (class ServerRpc) 300 SB
321 2479 20 ({) 20 SB
321 2515 140 (public:) 140 SB
413 2551 260 (ServerRpc \(\);) 260 SB
413 2587 440 (virtual ~ServerRpc \(\);) 440 SB
413 2659 800 (int Initialise \(int argc, char *argv[]\);) 800 SB
413 2695 900 (void GetWork \(long& opcode, RpcBuffer& call\);) 900 SB
413 2731 1000 (void SendResult \(long errcode, RpcBuffer& result\);) 1000 SB
321 2767 40 (};) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2860 171 (Normally ) 174 SB
645 2860 63 (the ) 66 SB
711 2860 80 (stub ) 83 SB
794 2860 175 (generated ) 178 SB
972 2860 88 (code ) 91 SB
1063 2860 86 (does ) 89 SB
1152 2860 65 (not ) 68 SB
1220 2860 124 (invoke ) 127 SB
1347 2860 71 (any ) 74 SB
1421 2860 44 (of ) 47 SB
1468 2860 63 (the ) 66 SB
1534 2860 105 (client ) 108 SB
1642 2860 78 (side ) 82 SB
1724 2860 186 (operations ) 190 SB
1914 2860 138 (directly.) 138 SB
321 2923 133 (Instead ) 138 SB
459 2923 73 (this ) 78 SB
537 2923 39 (is ) 44 SB
581 2923 146 (handled ) 151 SB
732 2923 50 (by ) 55 SB
787 2923 63 (the ) 68 SB
855 2923 93 (third ) 98 SB
953 2923 92 (class ) 97 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1050 2934 320 (ClientRpcManager) 320 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1370 2923 22 (. ) 27 SB
1397 2923 77 (The ) 82 SB
1479 2923 200 (constructor ) 205 SB
1684 2923 59 (for ) 64 SB
1748 2923 73 (this ) 78 SB
1826 2923 92 (class ) 97 SB
1923 2923 129 (invokes) 129 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 2997 160 (Initiate) 160 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
481 2986 22 (, ) 41 SB
522 2986 104 (while ) 123 SB
645 2986 63 (the ) 82 SB
727 2986 179 (destructor ) 198 SB
925 2986 140 (invokes ) 159 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1084 2997 180 (Terminate) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1264 2986 22 (. ) 41 SB
1305 2986 170 (Naturally ) 189 SB
1494 2986 35 (it ) 54 SB
1548 2986 134 (exports ) 153 SB
1701 2986 63 (the ) 82 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1783 2997 80 (Call) 80 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1863 2986 11 ( ) 30 SB
1893 2986 159 (operation) 159 SB
321 3049 215 (unmodified. ) 216 SB
537 3049 87 (This ) 89 SB
626 3049 166 (approach ) 168 SB
794 3049 137 (ensures ) 139 SB
933 3049 76 (that ) 78 SB
1011 3049 219 (client/server ) 221 SB
1232 3049 195 (connection ) 197 SB
1429 3049 73 (and ) 75 SB
1504 3049 244 (disconnection ) 246 SB
1750 3049 39 (is ) 41 SB
1791 3049 146 (handled ) 148 SB
1939 3049 113 (simply) 113 SB
321 3112 941 (by creating and deleting instances of the manager class.) 941 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (26) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
0 0 0 fC
321 311 440 (class ClientRpcManager) 440 SB
321 347 20 ({) 20 SB
321 383 140 (public:) 140 SB
413 419 700 (ClientRpcManager \(ClientRpc * = 0\);) 700 SB
413 455 640 (ClientRpcManager \(const char *\);) 640 SB
413 491 580 (virtual ~ClientRpcManager \(\);) 580 SB
413 563 1080 (RPC_Status Call \(long, RpcBuffer&, long&, RpcBuffer&\);) 1080 SB
413 599 460 (void rpcAbort \(\) const;) 460 SB
413 635 880 (rpcAbortHandler setHandler\(rpcAbortHandler\);) 880 SB
321 671 160 (private:) 160 SB
413 707 280 (int initiated;) 280 SB
413 743 440 (ClientRpc *rpc_handle;) 440 SB
321 779 40 (};) 40 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 900 83 (B.2) 83 SB
471 900 768 (Parameter Marshalling Details) 768 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1024 249 (Implementing ) 253 SB
724 1024 127 (remote ) 131 SB
855 1024 178 (procedure ) 182 SB
1037 1024 88 (calls ) 92 SB
1129 1024 177 (inevitably ) 181 SB
1310 1024 147 (requires ) 151 SB
1461 1024 30 (a ) 34 SB
1495 1024 204 (mechanism ) 208 SB
1703 1024 50 (by ) 54 SB
1757 1024 114 (which ) 118 SB
1875 1024 177 (arguments) 177 SB
321 1087 73 (and ) 76 SB
397 1087 121 (results ) 124 SB
521 1087 70 (can ) 73 SB
594 1087 49 (be ) 53 SB
647 1087 195 (transferred ) 199 SB
846 1087 148 (between ) 152 SB
998 1087 63 (the ) 67 SB
1065 1087 105 (client ) 109 SB
1174 1087 73 (and ) 77 SB
1251 1087 63 (the ) 67 SB
1318 1087 124 (server. ) 128 SB
1446 1087 87 (This ) 91 SB
1537 1087 155 (typically ) 159 SB
1696 1087 151 (involves ) 155 SB
1851 1087 145 (packing ) 149 SB
2000 1087 52 (the) 52 SB
321 1150 188 (arguments ) 191 SB
512 1150 77 (into ) 80 SB
592 1150 30 (a ) 33 SB
625 1150 111 (buffer ) 114 SB
739 1150 87 (used ) 90 SB
829 1150 50 (by ) 53 SB
882 1150 63 (the ) 66 SB
948 1150 194 (underlying ) 197 SB
1145 1150 89 (RPC ) 92 SB
1237 1150 163 (transport ) 166 SB
1403 1150 204 (mechanism ) 207 SB
1610 1150 59 (for ) 62 SB
1672 1150 226 (transmission ) 229 SB
1901 1150 73 (and ) 77 SB
1978 1150 74 (then) 74 SB
321 1213 188 (unpacking ) 198 SB
519 1213 96 (them ) 106 SB
625 1213 104 (again ) 115 SB
740 1213 42 (at ) 53 SB
793 1213 63 (the ) 74 SB
867 1213 167 (receiving ) 178 SB
1045 1213 166 (machine. ) 177 SB
1222 1213 111 (These ) 122 SB
1344 1213 186 (operations ) 197 SB
1541 1213 63 (are ) 74 SB
1615 1213 182 (frequently ) 193 SB
1808 1213 144 (referred ) 155 SB
1963 1213 43 (to ) 54 SB
2017 1213 35 (as) 35 SB
321 1276 544 (marshalling and unmarshalling.) 544 SB
471 1381 77 (The ) 78 SB
549 1381 127 (default ) 128 SB
677 1381 89 (RPC ) 90 SB
767 1381 204 (mechanism ) 205 SB
972 1381 87 (used ) 88 SB
1060 1381 45 (in ) 46 SB
1106 1381 124 (testing ) 125 SB
1231 1381 63 (the ) 64 SB
1295 1381 80 (stub ) 81 SB
1376 1381 171 (generator ) 173 SB
1549 1381 39 (is ) 41 SB
1590 1381 30 (a ) 32 SB
1622 1381 123 (simple ) 125 SB
1747 1381 89 (RPC ) 91 SB
1838 1381 76 (that ) 78 SB
1916 1381 136 (requires) 136 SB
321 1444 63 (the ) 67 SB
388 1444 221 (programmer ) 225 SB
613 1444 43 (to ) 47 SB
660 1444 136 (convert ) 140 SB
800 1444 73 (and ) 77 SB
877 1444 90 (pack ) 95 SB
972 1444 54 (all ) 59 SB
1031 1444 197 (parameters ) 202 SB
1233 1444 73 (and ) 78 SB
1311 1444 121 (results ) 126 SB
1437 1444 59 (for ) 64 SB
1501 1444 30 (a ) 35 SB
1536 1444 72 (call ) 77 SB
1613 1444 168 (explicitly ) 173 SB
1786 1444 77 (into ) 82 SB
1868 1444 63 (the ) 68 SB
1936 1444 116 (buffers) 116 SB
321 1507 87 (used ) 93 SB
414 1507 50 (by ) 57 SB
471 1507 63 (the ) 70 SB
541 1507 89 (RPC ) 96 SB
637 1507 215 (mechanism. ) 222 SB
859 1507 87 (C++ ) 94 SB
953 1507 151 (operator ) 158 SB
1111 1507 211 (overloading ) 218 SB
1329 1507 39 (is ) 46 SB
1375 1507 87 (used ) 94 SB
1469 1507 43 (to ) 50 SB
1519 1507 149 (simplify ) 156 SB
1675 1507 223 (considerably ) 230 SB
1905 1507 63 (the ) 70 SB
1975 1507 77 (code) 77 SB
321 1570 152 (required ) 154 SB
475 1570 43 (to ) 45 SB
520 1570 159 (marshall ) 161 SB
681 1570 156 (\(encode\) ) 158 SB
839 1570 73 (and ) 75 SB
914 1570 202 (unmarshall ) 204 SB
1118 1570 155 (\(decode\) ) 157 SB
1275 1570 188 (arguments ) 190 SB
1465 1570 43 (to ) 45 SB
1510 1570 73 (and ) 75 SB
1585 1570 92 (from ) 94 SB
1679 1570 97 (these ) 99 SB
1778 1570 194 (underlying ) 196 SB
1974 1570 78 (RPC) 78 SB
321 1633 138 (buffers. ) 139 SB
460 1633 47 (In ) 48 SB
508 1633 186 (particular, ) 187 SB
695 1633 63 (the ) 64 SB
759 1633 167 (operators ) 168 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
927 1644 40 (>>) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
967 1633 11 ( ) 12 SB
979 1633 73 (and ) 74 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1053 1644 40 (<<) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1093 1633 11 ( ) 12 SB
1105 1633 90 (have ) 92 SB
1197 1633 89 (been ) 91 SB
1288 1633 143 (adopted ) 145 SB
1433 1633 59 (for ) 61 SB
1494 1633 73 (this ) 75 SB
1569 1633 143 (purpose ) 145 SB
1714 1633 144 (\(similar ) 146 SB
1860 1633 43 (to ) 45 SB
1905 1633 90 (their ) 92 SB
1997 1633 55 (use) 55 SB
321 1696 45 (in ) 50 SB
371 1696 63 (the ) 68 SB
439 1696 87 (C++ ) 92 SB
531 1696 67 (I/O ) 72 SB
603 1696 150 (system\). ) 155 SB
758 1696 96 (Thus ) 102 SB
860 1696 59 (<< ) 65 SB
925 1696 39 (is ) 45 SB
970 1696 87 (used ) 93 SB
1063 1696 43 (to ) 49 SB
1112 1696 159 (marshall ) 165 SB
1277 1696 188 (arguments ) 194 SB
1471 1696 77 (into ) 83 SB
1554 1696 63 (the ) 69 SB
1623 1696 127 (buffers ) 133 SB
1756 1696 87 (used ) 93 SB
1849 1696 50 (by ) 56 SB
1905 1696 63 (the ) 69 SB
1974 1696 78 (RPC) 78 SB
321 1759 215 (mechanism, ) 221 SB
542 1759 73 (and ) 79 SB
621 1759 59 (>> ) 65 SB
686 1759 43 (to ) 49 SB
735 1759 202 (unmarshall ) 208 SB
943 1759 188 (arguments ) 194 SB
1137 1759 92 (from ) 98 SB
1235 1759 63 (the ) 69 SB
1304 1759 127 (buffers ) 133 SB
1437 1759 182 (regardless ) 188 SB
1625 1759 44 (of ) 50 SB
1675 1759 63 (the ) 69 SB
1744 1759 112 (actual ) 118 SB
1862 1759 81 (type ) 87 SB
1949 1759 44 (of ) 51 SB
2000 1759 52 (the) 52 SB
321 1822 183 (argument. ) 184 SB
505 1822 77 (The ) 78 SB
583 1822 89 (RPC ) 90 SB
673 1822 111 (buffer ) 113 SB
786 1822 92 (class ) 94 SB
880 1822 14 (\() 14 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
894 1833 180 (RpcBuffer) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1074 1822 25 (\) ) 27 SB
1101 1822 154 (provides ) 156 SB
1257 1822 30 (a ) 32 SB
1289 1822 57 (set ) 59 SB
1348 1822 44 (of ) 46 SB
1394 1822 186 (operations ) 188 SB
1582 1822 76 (that ) 78 SB
1660 1822 122 (permit ) 124 SB
1784 1822 63 (the ) 65 SB
1849 1822 203 (marshalling) 203 SB
321 1885 73 (and ) 74 SB
395 1885 257 (unmarshalling ) 258 SB
653 1885 44 (of ) 45 SB
698 1885 54 (all ) 55 SB
753 1885 44 (of ) 45 SB
798 1885 63 (the ) 64 SB
862 1885 96 (basic ) 97 SB
959 1885 97 (types ) 98 SB
1057 1885 44 (of ) 45 SB
1102 1885 87 (C++ ) 88 SB
1190 1885 82 (\(int, ) 84 SB
1274 1885 96 (char, ) 98 SB
1372 1885 95 (etc.\). ) 97 SB
1469 1885 77 (The ) 79 SB
1548 1885 214 (marshalling ) 216 SB
1764 1885 44 (of ) 46 SB
1810 1885 97 (more ) 99 SB
1909 1885 143 (complex) 143 SB
321 1948 175 (structures ) 178 SB
499 1948 39 (is ) 43 SB
542 1948 124 (simply ) 128 SB
670 1948 159 (achieved ) 163 SB
833 1948 50 (by ) 54 SB
887 1948 159 (breaking ) 163 SB
1050 1948 63 (the ) 67 SB
1117 1948 159 (structure ) 163 SB
1280 1948 53 (up ) 57 SB
1337 1948 77 (into ) 81 SB
1418 1948 51 (its ) 55 SB
1473 1948 197 (component ) 201 SB
1674 1948 94 (parts ) 98 SB
1772 1948 73 (and ) 77 SB
1849 1948 203 (marshalling) 203 SB
321 2011 88 (each ) 96 SB
417 2011 260 (independently. ) 268 SB
685 2011 77 (The ) 86 SB
771 2011 112 (actual ) 121 SB
892 2011 165 (encoding ) 174 SB
1066 2011 136 (scheme ) 145 SB
1211 2011 163 (currently ) 172 SB
1383 2011 87 (used ) 96 SB
1479 2011 39 (is ) 48 SB
1527 2011 63 (the ) 72 SB
1599 2011 97 (same ) 106 SB
1705 2011 46 (as ) 55 SB
1760 2011 76 (that ) 85 SB
1845 2011 87 (used ) 96 SB
1941 2011 50 (by ) 59 SB
2000 2011 52 (the) 52 SB
321 2074 197 (persistence ) 198 SB
519 2074 220 (mechanisms ) 221 SB
740 2074 45 (in ) 46 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
786 2074 117 (Arjuna) 117 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
903 2074 11 ( ) 13 SB
916 2074 76 (that ) 78 SB
994 2074 120 (enable ) 122 SB
1116 2074 30 (a ) 32 SB
1148 2074 87 (C++ ) 89 SB
1237 2074 110 (object ) 112 SB
1349 2074 43 (to ) 45 SB
1394 2074 49 (be ) 51 SB
1445 2074 113 (stored ) 115 SB
1560 2074 53 (on ) 55 SB
1615 2074 81 (disk ) 83 SB
1698 2074 90 (\(that ) 92 SB
1790 2074 39 (is ) 41 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1831 2085 180 (RpcBuffer) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
2011 2074 11 ( ) 13 SB
2024 2074 28 (is) 28 SB
321 2137 383 (derived from the class ) 383 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
704 2148 120 (Buffer) 120 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
824 2137 217 ( and uses its ) 217 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1041 2148 80 (pack) 80 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1121 2137 84 ( and ) 84 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1205 2148 120 (unpack) 120 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1325 2137 684 ( operations directly\). There is, however, ) 685 SB
2010 2137 42 (no) 42 SB
321 2200 1279 (reason why some other scheme \(say XDR or ASN.1\) could not also be used.) 1279 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (27) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
0 0 0 fC
321 311 40 (/*) 40 SB
321 347 40 ( *) 40 SB
321 383 60 ( */) 60 SB
321 455 620 (class RpcBuffer : public Buffer) 620 SB
321 491 20 ({) 20 SB
321 527 140 (public:) 140 SB
413 563 660 (/* Constructors and destructor */) 660 SB
413 635 260 (RpcBuffer \(\);) 260 SB
413 671 500 (RpcBuffer \(long initVal\);) 500 SB
413 707 760 (RpcBuffer \(const RpcBuffer& copyFrom\);) 760 SB
413 743 1040 (RpcBuffer \(const RpcBuffer& copyFrom, long initVal\);) 1040 SB
413 779 440 (virtual ~RpcBuffer \(\);) 440 SB
413 851 740 (/* Standard marshalling operations */) 740 SB
413 923 580 (RpcBuffer& operator<< \(char\);) 580 SB
413 959 760 (RpcBuffer& operator<< \(unsigned char\);) 760 SB
413 995 600 (RpcBuffer& operator<< \(short\);) 600 SB
413 1031 780 (RpcBuffer& operator<< \(unsigned short\);) 780 SB
413 1067 100 (. . .) 100 SB
413 1139 780 (/* Standard unmarshalling operations */) 780 SB
413 1211 600 (RpcBuffer& operator>> \(char&\);) 600 SB
413 1247 780 (RpcBuffer& operator>> \(unsigned char&\);) 780 SB
413 1283 620 (RpcBuffer& operator>> \(short&\);) 620 SB
413 1319 800 (RpcBuffer& operator>> \(unsigned short&\);) 800 SB
413 1355 640 (RpcBuffer& operator>> \(double&\);) 640 SB
413 1391 100 (. . .) 100 SB
321 1463 40 (};) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1556 104 (Since ) 110 SB
581 1556 54 (all ) 60 SB
641 1556 87 (C++ ) 93 SB
734 1556 126 (objects ) 132 SB
866 1556 63 (are ) 70 SB
936 1556 126 (treated ) 133 SB
1069 1556 46 (as ) 53 SB
1122 1556 228 (encapsulated ) 235 SB
1357 1556 144 (entities, ) 151 SB
1508 1556 63 (the ) 70 SB
1578 1556 80 (stub ) 87 SB
1665 1556 171 (generator ) 178 SB
1843 1556 137 (ensures ) 144 SB
1987 1556 65 (that) 65 SB
321 1619 141 (suitable ) 146 SB
467 1619 191 (definitions ) 196 SB
663 1619 90 (exist ) 95 SB
758 1619 59 (for ) 64 SB
822 1619 97 (these ) 102 SB
924 1619 214 (marshalling ) 219 SB
1143 1619 167 (operators ) 172 SB
1315 1619 59 (for ) 64 SB
1379 1619 54 (all ) 59 SB
1438 1619 126 (objects ) 131 SB
1569 1619 122 (passed ) 128 SB
1697 1619 46 (as ) 52 SB
1749 1619 188 (arguments ) 194 SB
1943 1619 25 (- ) 31 SB
1974 1619 78 (even) 78 SB
321 1682 92 (class ) 93 SB
414 1682 126 (objects ) 127 SB
541 1682 114 (which ) 115 SB
656 1682 93 (must ) 95 SB
751 1682 90 (have ) 92 SB
843 1682 90 (their ) 92 SB
935 1682 115 (public ) 117 SB
1052 1682 170 (operation ) 172 SB
1224 1682 57 (set ) 59 SB
1283 1682 196 (augmented ) 198 SB
1481 1682 50 (by ) 52 SB
1533 1682 63 (the ) 65 SB
1598 1682 166 (inclusion ) 168 SB
1766 1682 44 (of ) 46 SB
1812 1682 63 (the ) 65 SB
1877 1682 175 (operations) 175 SB
321 1745 344 (for \(un\)marshalling.) 344 SB
471 1850 199 (Arguments ) 207 SB
678 1850 122 (passed ) 130 SB
808 1850 50 (by ) 58 SB
866 1850 131 (pointer ) 139 SB
1005 1850 46 (or ) 54 SB
1059 1850 166 (reference ) 175 SB
1234 1850 131 (require ) 140 SB
1374 1850 127 (special ) 136 SB
1510 1850 173 (handling. ) 182 SB
1692 1850 57 (By ) 66 SB
1758 1850 127 (default ) 136 SB
1894 1850 97 (these ) 106 SB
2000 1850 52 (are) 52 SB
321 1913 126 (treated ) 130 SB
451 1913 46 (as ) 50 SB
501 1913 110 (in/out ) 114 SB
615 1913 197 (parameters ) 201 SB
816 1913 73 (and ) 77 SB
893 1913 63 (are ) 67 SB
960 1913 85 (both ) 89 SB
1049 1913 79 (sent ) 83 SB
1132 1913 45 (in ) 49 SB
1181 1913 63 (the ) 67 SB
1248 1913 72 (call ) 76 SB
1324 1913 73 (and ) 77 SB
1401 1913 155 (assumed ) 159 SB
1560 1913 43 (to ) 47 SB
1607 1913 49 (be ) 53 SB
1660 1913 153 (returned ) 157 SB
1817 1913 46 (as ) 51 SB
1868 1913 78 (part ) 83 SB
1951 1913 44 (of ) 49 SB
2000 1913 52 (the) 52 SB
321 1976 116 (result. ) 120 SB
441 1976 87 (This ) 91 SB
532 1976 178 (behaviour ) 182 SB
714 1976 70 (can ) 74 SB
788 1976 49 (be ) 53 SB
841 1976 161 (modified ) 165 SB
1006 1976 45 (in ) 49 SB
1055 1976 72 (two ) 76 SB
1131 1976 105 (ways. ) 109 SB
1240 1976 131 (Firstly, ) 135 SB
1375 1976 36 (if ) 40 SB
1415 1976 63 (the ) 67 SB
1482 1976 172 (argument ) 177 SB
1659 1976 39 (is ) 44 SB
1703 1976 153 (declared ) 158 SB
1861 1976 43 (to ) 48 SB
1909 1976 49 (be ) 54 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
1963 1976 89 (const) 89 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
321 2039 85 (then ) 87 SB
408 2039 35 (it ) 37 SB
445 2039 39 (is ) 41 SB
486 2039 239 (automatically ) 241 SB
727 2039 126 (treated ) 128 SB
855 2039 46 (as ) 48 SB
903 2039 99 (input ) 101 SB
1004 2039 95 (only. ) 97 SB
1101 2039 175 (Secondly, ) 177 SB
1278 2039 63 (the ) 65 SB
1343 2039 221 (programmer ) 223 SB
1566 2039 70 (can ) 72 SB
1638 2039 157 (augment ) 160 SB
1798 2039 63 (the ) 66 SB
1864 2039 188 (declaration) 188 SB
321 2102 1166 (of an argument with stub generation specific commands to guide the ) 1167 SB
1488 2102 135 (process ) 136 SB
1624 2102 179 (explicitly. ) 180 SB
1804 2102 87 (This ) 88 SB
1892 2102 94 (topic ) 95 SB
1987 2102 65 (will) 65 SB
321 2165 882 (be discussed and expanded further in a later section.) 882 SB
471 2270 1356 (Thus the following class declaration and marshalling code is one sample output:) 1356 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (28) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
0 0 0 fC
321 311 380 (class AnAppointment) 380 SB
321 347 20 ({) 20 SB
321 383 140 (public:) 140 SB
413 455 340 (AnAppointment \(\);) 340 SB
413 491 360 (~AnAppointMent \(\);) 360 SB
413 563 860 (// Ignore other operations here for clarity) 860 SB
413 599 60 (...) 60 SB
413 671 900 (// These are the added marshalling operations) 900 SB
413 707 660 (void marshall \(RpcBuffer&\) const;) 660 SB
413 743 580 (void unmarshall \(RpcBuffer&\);) 580 SB
321 779 160 (private:) 160 SB
413 815 260 (time_t start;) 260 SB
413 851 220 (time_t end;) 220 SB
413 887 380 (String description;) 380 SB
413 923 360 (Boolean confirmed;) 360 SB
321 959 40 (};) 40 SB
321 1031 940 (// Overload << to marshall instance into buffer) 940 SB
321 1067 1480 (inline RpcBuffer& operator<< \( RpcBuffer& rp, const AnAppointment& topack\)) 1480 SB
321 1103 20 ({) 20 SB
413 1139 400 (topack.marshall\(rp\);) 400 SB
413 1175 200 (return rp;) 200 SB
321 1211 20 (}) 20 SB
321 1283 660 (// Marshall each variable in turn) 660 SB
321 1319 1160 (void AnAppointment::marshall \( RpcBuffer& rpc_buff \) const) 1160 SB
321 1355 20 ({) 20 SB
413 1391 360 (rpc_buff << start;) 360 SB
413 1427 320 (rpc_buff << end;) 320 SB
413 1463 480 (rpc_buff << description;) 480 SB
413 1499 440 (rpc_buff << confirmed;) 440 SB
321 1535 20 (}) 20 SB
321 1607 1320 (// Unmarshalling operations are similar only using the operator >>) 1320 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 1728 83 (B.3) 83 SB
471 1728 771 (Client and Server Class Details) 771 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1852 69 (For ) 76 SB
547 1852 88 (each ) 96 SB
643 1852 92 (class ) 100 SB
743 1852 199 (declaration ) 207 SB
950 1852 76 (that ) 84 SB
1034 1852 35 (it ) 43 SB
1077 1852 100 (reads ) 108 SB
1185 1852 92 (from ) 100 SB
1285 1852 51 (its ) 59 SB
1344 1852 99 (input ) 107 SB
1451 1852 66 (file ) 74 SB
1525 1852 63 (the ) 71 SB
1596 1852 80 (stub ) 88 SB
1684 1852 171 (generator ) 179 SB
1863 1852 76 (will ) 84 SB
1947 1852 105 (\(when) 105 SB
321 1915 1403 (appropriate\) generate three new class definitions. These class definitions represent:) 1403 SB
471 2020 77 (The ) 86 SB
557 2020 217 (replacement ) 226 SB
783 2020 92 (class ) 101 SB
884 2020 59 (for ) 68 SB
952 2020 66 (use ) 75 SB
1027 2020 50 (by ) 60 SB
1087 2020 63 (the ) 73 SB
1160 2020 221 (programmer ) 231 SB
1391 2020 45 (in ) 55 SB
1446 2020 63 (the ) 73 SB
1519 2020 105 (client ) 115 SB
1634 2020 210 (application. ) 220 SB
1854 2020 87 (This ) 97 SB
1951 2020 39 (is ) 49 SB
2000 2020 52 (the) 52 SB
471 2083 204 (mechanism ) 205 SB
676 2083 152 (whereby ) 153 SB
829 2083 227 (transparency ) 228 SB
1057 2083 39 (is ) 40 SB
1097 2083 159 (achieved ) 160 SB
1257 2083 97 (since ) 98 SB
1355 2083 63 (the ) 64 SB
1419 2083 217 (replacement ) 218 SB
1637 2083 92 (class ) 93 SB
1730 2083 68 (has ) 69 SB
1799 2083 63 (the ) 64 SB
1863 2083 97 (same ) 98 SB
1961 2083 57 (set ) 58 SB
2019 2083 33 (of) 33 SB
471 2146 115 (public ) 117 SB
588 2146 186 (operations ) 188 SB
776 2146 46 (as ) 48 SB
824 2146 63 (the ) 65 SB
889 2146 144 (original ) 146 SB
1035 2146 73 (and ) 75 SB
1110 2146 70 (can ) 72 SB
1182 2146 82 (thus ) 84 SB
1266 2146 49 (be ) 51 SB
1317 2146 192 (substituted ) 194 SB
1511 2146 59 (for ) 61 SB
1572 2146 35 (it ) 38 SB
1610 2146 139 (without ) 142 SB
1752 2146 63 (the ) 66 SB
1818 2146 234 (programmer's) 234 SB
471 2209 193 (knowledge.) 193 SB
471 2314 77 (The ) 78 SB
549 2314 113 (server ) 115 SB
664 2314 80 (stub ) 82 SB
746 2314 92 (class ) 94 SB
840 2314 201 (responsible ) 203 SB
1043 2314 59 (for ) 61 SB
1104 2314 164 (decoding ) 166 SB
1270 2314 52 (an ) 54 SB
1324 2314 171 (incoming ) 173 SB
1497 2314 89 (RPC ) 91 SB
1588 2314 143 (request, ) 145 SB
1733 2314 257 (unmarshalling ) 259 SB
1992 2314 60 (any) 60 SB
471 2377 171 (incoming ) 176 SB
647 2377 208 (parameters, ) 213 SB
860 2377 161 (invoking ) 166 SB
1026 2377 63 (the ) 68 SB
1094 2377 152 (required ) 158 SB
1252 2377 181 (operation, ) 187 SB
1439 2377 73 (and ) 79 SB
1518 2377 214 (marshalling ) 220 SB
1738 2377 73 (and ) 79 SB
1817 2377 169 (returning ) 175 SB
1992 2377 60 (any) 60 SB
471 2440 882 (output values prior to returning control to the caller.) 882 SB
471 2545 1516 (A renamed version of the original input class that is instantiated in the server as required.) 1516 SB
471 2650 782 (For example, the class definition shown below) 782 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (29) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
0 0 0 fC
321 311 480 (#include "AppointMent.h") 480 SB
321 383 1280 (// The following stub specific commands are actually the default) 1280 SB
321 419 460 (// @Remote, @NoMarshall) 460 SB
321 455 640 (class Diary : public LockManager) 640 SB
321 491 20 ({) 20 SB
321 527 140 (public:) 140 SB
413 563 440 (Diary\(ServiceName AN\);) 440 SB
413 599 180 (~Diary\(\);) 180 SB
413 671 800 (String WhereIs\(time_t now, String user\);) 800 SB
413 743 900 (AnAppointment GetNextAppointment\(time_t now\);) 900 SB
413 779 800 (int AddAppointment\(AnAppointment entry\);) 800 SB
413 815 640 (int DelAppointment\(time_t when\);) 640 SB
413 887 1060 (virtual Boolean save_state\(ObjectState&, ObjectType\);) 1060 SB
413 923 1120 (virtual Boolean restore_state\(ObjectState&, ObjectType\);) 1120 SB
413 959 720 (virtual const TypeName type\(\) const;) 720 SB
321 1031 160 (private:) 160 SB
413 1067 120 (String) 120 SB
600 1067 200 (user_name;) 200 SB
413 1103 420 (AnAppointment *appts;) 420 SB
321 1139 40 (};) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1232 124 (Would ) 125 SB
596 1232 105 (result ) 106 SB
702 1232 45 (in ) 46 SB
748 1232 63 (the ) 64 SB
812 1232 190 (generation ) 191 SB
1003 1232 44 (of ) 45 SB
1048 1232 63 (the ) 64 SB
1112 1232 191 (definitions ) 192 SB
1304 1232 73 (and ) 74 SB
1378 1232 192 (supporting ) 193 SB
1571 1232 88 (code ) 89 SB
1660 1232 120 (shown ) 121 SB
1781 1232 45 (in ) 46 SB
1827 1232 63 (the ) 64 SB
1891 1232 161 (following) 161 SB
321 1295 216 (sub-sections.) 216 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 1428 127 (B.3.1) 127 SB
471 1428 391 (Client Interface) 391 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1545 880 (class RemoteDiary : public RemoteLockManager) 880 SB
321 1581 20 ({) 20 SB
321 1617 140 (public:) 140 SB
413 1653 1100 (RemoteDiary \(ServiceName , ClientRpcManager *crpc = 0\);) 1100 SB
413 1689 320 (~RemoteDiary \(\);) 320 SB
413 1761 680 (String WhereIs \(time_t , String \);) 680 SB
413 1797 860 (AnAppointment GetNextAppointment \(time_t \);) 860 SB
413 1833 720 (int AddAppointment \(AnAppointment \);) 720 SB
413 1869 580 (int DelAppointment \(time_t \);) 580 SB
413 1905 1140 (virtual Boolean save_state \(ObjectState & , ObjectType \);) 1140 SB
413 1941 1200 (virtual Boolean restore_state \(ObjectState & , ObjectType \);) 1200 SB
413 1977 760 (virtual const TypeName type \(\) const ;) 760 SB
321 2049 200 (protected:) 200 SB
413 2085 1100 (RemoteDiary\(const ClientRpcManager&, const RpcBuffer&\);) 1100 SB
321 2157 160 (private:) 160 SB
413 2193 640 (ClientRpcManager _clientManager;) 640 SB
413 2229 420 (RpcBuffer _myHashVal;) 420 SB
321 2265 40 (};) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2358 130 (Simple ) 136 SB
607 2358 173 (renaming ) 179 SB
786 2358 105 (tricks ) 111 SB
897 2358 121 (played ) 127 SB
1024 2358 103 (using ) 110 SB
1134 2358 63 (the ) 70 SB
1204 2358 156 (standard ) 163 SB
1367 2358 39 (C ) 46 SB
1413 2358 238 (pre-processor ) 245 SB
1658 2358 120 (enable ) 127 SB
1785 2358 73 (this ) 80 SB
1865 2358 92 (class ) 99 SB
1964 2358 43 (to ) 50 SB
2014 2358 38 (be) 38 SB
321 2421 1366 (transparently used under its original name in the programmer's application code.) 1366 SB
471 2526 87 (This ) 99 SB
570 2526 175 (generated ) 187 SB
757 2526 105 (client ) 117 SB
874 2526 80 (stub ) 92 SB
966 2526 92 (class ) 104 SB
1070 2526 68 (has ) 80 SB
1150 2526 63 (the ) 75 SB
1225 2526 97 (same ) 109 SB
1334 2526 57 (set ) 69 SB
1403 2526 44 (of ) 56 SB
1459 2526 115 (public ) 127 SB
1586 2526 186 (operations ) 198 SB
1784 2526 46 (as ) 59 SB
1843 2526 63 (the ) 76 SB
1919 2526 133 (original) 133 SB
321 2589 461 (\(although any constructors ) 462 SB
783 2589 90 (have ) 91 SB
874 2589 73 (had ) 74 SB
948 2589 52 (an ) 53 SB
1001 2589 96 (extra ) 97 SB
1098 2589 172 (argument ) 173 SB
1271 2589 111 (added ) 112 SB
1383 2589 43 (to ) 44 SB
1427 2589 107 (them, ) 108 SB
1535 2589 73 (this ) 74 SB
1609 2589 39 (is ) 40 SB
1649 2589 184 (effectively ) 185 SB
1834 2589 155 (invisible ) 156 SB
1990 2589 62 (and) 62 SB
321 2652 63 (the ) 68 SB
389 2652 88 (code ) 93 SB
482 2652 131 (written ) 136 SB
618 2652 43 (to ) 48 SB
666 2652 66 (use ) 71 SB
737 2652 166 (instances ) 171 SB
908 2652 44 (of ) 49 SB
957 2652 63 (the ) 68 SB
1025 2652 144 (original ) 149 SB
1174 2652 92 (class ) 98 SB
1272 2652 76 (will ) 82 SB
1354 2652 75 (still ) 81 SB
1435 2652 170 (compile\). ) 176 SB
1611 2652 117 (Public ) 123 SB
1734 2652 150 (instance ) 156 SB
1890 2652 162 (variables,) 162 SB
321 2715 164 (however, ) 168 SB
489 2715 63 (are ) 67 SB
556 2715 207 (deliberately ) 211 SB
767 2715 65 (not ) 69 SB
836 2715 156 (included ) 160 SB
996 2715 45 (in ) 49 SB
1045 2715 63 (the ) 67 SB
1112 2715 175 (generated ) 179 SB
1291 2715 92 (class ) 96 SB
1387 2715 59 (for ) 63 SB
1450 2715 137 (reasons ) 141 SB
1591 2715 76 (that ) 80 SB
1671 2715 76 (will ) 80 SB
1751 2715 49 (be ) 53 SB
1804 2715 175 (explained ) 179 SB
1983 2715 45 (in ) 50 SB
2033 2715 19 (a) 19 SB
321 2778 87 (later ) 89 SB
410 2778 211 (sub-section. ) 213 SB
623 2778 176 (Internally ) 178 SB
801 2778 63 (the ) 65 SB
866 2778 277 (implementation ) 279 SB
1145 2778 44 (of ) 46 SB
1191 2778 63 (the ) 65 SB
1256 2778 92 (class ) 94 SB
1350 2778 39 (is ) 41 SB
1391 2778 117 (totally ) 120 SB
1511 2778 166 (different. ) 169 SB
1680 2778 131 (Firstly, ) 134 SB
1814 2778 84 (only ) 87 SB
1901 2778 151 (variables) 151 SB
321 2841 163 (pertinent ) 167 SB
488 2841 43 (to ) 47 SB
535 2841 63 (the ) 67 SB
602 2841 243 (establishment ) 247 SB
849 2841 73 (and ) 77 SB
926 2841 226 (maintenance ) 230 SB
1156 2841 44 (of ) 48 SB
1204 2841 63 (the ) 67 SB
1271 2841 89 (RPC ) 93 SB
1364 2841 195 (connection ) 199 SB
1563 2841 63 (are ) 68 SB
1631 2841 144 (present. ) 149 SB
1780 2841 175 (Secondly, ) 180 SB
1960 2841 54 (all ) 59 SB
2019 2841 33 (of) 33 SB
321 2904 63 (the ) 70 SB
391 2904 186 (operations ) 193 SB
584 2904 63 (are ) 70 SB
654 2904 264 (reimplemented ) 271 SB
925 2904 43 (to ) 50 SB
975 2904 146 (perform ) 153 SB
1128 2904 63 (the ) 71 SB
1199 2904 204 (appropriate ) 212 SB
1411 2904 181 (parameter ) 189 SB
1600 2904 285 (\(un\)marshalling ) 293 SB
1893 2904 73 (and ) 81 SB
1974 2904 78 (RPC) 78 SB
321 2967 199 (invocation. ) 209 SB
530 2967 149 (Thirdly, ) 159 SB
689 2967 98 (some ) 108 SB
797 2967 181 (additional ) 191 SB
988 2967 186 (operations ) 196 SB
1184 2967 63 (are ) 73 SB
1257 2967 191 (introduced ) 202 SB
1459 2967 172 (including ) 183 SB
1642 2967 52 (an ) 63 SB
1705 2967 181 (additional ) 192 SB
1897 2967 155 (protected) 155 SB
321 3030 200 (constructor ) 207 SB
528 3030 114 (which ) 121 SB
649 3030 39 (is ) 47 SB
696 3030 87 (used ) 95 SB
791 3030 43 (to ) 51 SB
842 3030 121 (ensure ) 129 SB
971 3030 76 (that ) 84 SB
1055 3030 127 (certain ) 135 SB
1190 3030 211 (information ) 219 SB
1409 3030 84 (only ) 92 SB
1501 3030 163 (pertinent ) 171 SB
1672 3030 43 (to ) 51 SB
1723 3030 63 (the ) 71 SB
1794 3030 89 (RPC ) 97 SB
1891 3030 125 (system ) 133 SB
2024 3030 28 (is) 28 SB
321 3093 1310 (correctly propagated to the stub generated versions of all base classes \(if any\).) 1310 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (30) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
0 0 0 fC
321 346 127 (B.3.2) 127 SB
471 346 414 (Client Side Code) 414 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 470 88 ( The ) 97 SB
568 470 175 (generated ) 185 SB
753 470 105 (client ) 115 SB
868 470 80 (stub ) 90 SB
958 470 88 (code ) 98 SB
1056 470 59 (for ) 69 SB
1125 470 88 (each ) 98 SB
1223 470 170 (operation ) 180 SB
1403 470 133 (follows ) 143 SB
1546 470 30 (a ) 40 SB
1586 470 156 (standard ) 166 SB
1752 470 142 (pattern: ) 152 SB
1904 470 148 (marshall) 148 SB
321 533 199 (arguments, ) 207 SB
528 533 88 (send ) 96 SB
624 533 199 (invocation, ) 207 SB
831 533 102 (await ) 110 SB
941 533 107 (reply, ) 115 SB
1056 533 202 (unmarshall ) 210 SB
1266 533 132 (results, ) 141 SB
1407 533 73 (and ) 82 SB
1489 533 114 (return ) 123 SB
1612 533 43 (to ) 52 SB
1664 533 116 (caller. ) 125 SB
1789 533 87 (This ) 96 SB
1885 533 130 (pattern ) 139 SB
2024 533 28 (is) 28 SB
321 596 280 (illustrated below) 280 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 694 1160 (AnAppointment RemoteDiary::GetNextAppointment \(time_t now\)) 1160 SB
321 730 20 ({) 20 SB
413 766 580 (/* call and return buffers */) 580 SB
413 802 380 (RpcBuffer rvBuffer;) 380 SB
413 838 660 (RpcBuffer callBuffer\(_myHashVal\);) 660 SB
413 874 440 (RpcBuffer replyBuffer;) 440 SB
413 910 720 (RPC_Status rpcStatus = OPER_UNKNOWN;) 720 SB
413 946 720 (long serverStatus = OPER_INVOKED_OK;) 720 SB
413 982 560 (AnAppointment returnedValue;) 560 SB
413 1018 480 (/* marshall parameter */) 480 SB
413 1054 360 (callBuffer << now;) 360 SB
413 1090 260 (/* do call */) 260 SB
413 1126 1620 (rpcStatus = _clientManager.Call\(31096804, callBuffer, serverStatus, replyBuffer\);) 1620 SB
413 1162 1300 (if \(\(rpcStatus == OPER_DONE\) && \(serverStatus != DISPATCH_ERROR\)\)) 1300 SB
413 1198 20 ({) 20 SB
509 1234 420 (switch \(serverStatus\)) 420 SB
509 1270 20 ({) 20 SB
509 1306 420 (case OPER_INVOKED_OK:) 420 SB
600 1342 480 (replyBuffer >> rvBuffer;) 480 SB
600 1378 520 (rvbuffer >> returnedValue;) 520 SB
600 1414 120 (break;) 120 SB
509 1450 160 (default:) 160 SB
600 1486 520 (_clientManager.rpcAbort\(\);) 520 SB
509 1522 20 (}) 20 SB
413 1558 20 (}) 20 SB
413 1594 80 (else) 80 SB
509 1630 520 (_clientManager.rpcAbort\(\);) 520 SB
413 1666 460 (return \(returnedValue\);) 460 SB
321 1702 20 (}) 20 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1795 77 (The ) 79 SB
550 1795 105 (client ) 107 SB
657 1795 80 (stub ) 82 SB
739 1795 88 (code ) 90 SB
829 1795 166 (produced ) 168 SB
997 1795 143 (exploits ) 145 SB
1142 1795 63 (the ) 65 SB
1207 1795 87 (C++ ) 90 SB
1297 1795 200 (constructor ) 203 SB
1500 1795 73 (and ) 76 SB
1576 1795 179 (destructor ) 182 SB
1758 1795 135 (notions ) 138 SB
1896 1795 43 (to ) 46 SB
1942 1795 110 (ensure) 110 SB
321 1858 76 (that ) 78 SB
399 1858 63 (the ) 65 SB
464 1858 75 (real ) 77 SB
541 1858 109 (\(user\) ) 111 SB
652 1858 126 (objects ) 128 SB
780 1858 45 (in ) 47 SB
827 1858 63 (the ) 65 SB
892 1858 113 (server ) 115 SB
1007 1858 90 (have ) 92 SB
1099 1858 157 (lifetimes ) 159 SB
1258 1858 76 (that ) 79 SB
1337 1858 115 (match ) 118 SB
1455 1858 63 (the ) 66 SB
1521 1858 141 (lifetime ) 144 SB
1665 1858 44 (of ) 47 SB
1712 1858 63 (the ) 66 SB
1778 1858 108 (\(stub\) ) 111 SB
1889 1858 126 (objects ) 129 SB
2018 1858 34 (in) 34 SB
321 1921 63 (the ) 72 SB
393 1921 116 (client. ) 125 SB
518 1921 53 (At ) 62 SB
580 1921 63 (the ) 72 SB
652 1921 98 (point ) 107 SB
759 1921 76 (that ) 85 SB
844 1921 63 (the ) 72 SB
916 1921 80 (stub ) 89 SB
1005 1921 110 (object ) 119 SB
1124 1921 112 (enters ) 121 SB
1245 1921 104 (scope ) 113 SB
1358 1921 45 (in ) 55 SB
1413 1921 63 (the ) 73 SB
1486 1921 105 (client ) 115 SB
1601 1921 87 (\(and ) 97 SB
1698 1921 82 (thus ) 92 SB
1790 1921 63 (the ) 73 SB
1863 1921 189 (constructor) 189 SB
321 1984 170 (operation ) 176 SB
497 1984 44 (of ) 50 SB
547 1984 63 (the ) 69 SB
616 1984 110 (object ) 116 SB
732 1984 39 (is ) 46 SB
778 1984 239 (automatically ) 246 SB
1024 1984 172 (executed\) ) 179 SB
1203 1984 85 (then ) 92 SB
1295 1984 141 (binding ) 148 SB
1443 1984 44 (of ) 51 SB
1494 1984 105 (client ) 112 SB
1606 1984 43 (to ) 50 SB
1656 1984 113 (server ) 120 SB
1776 1984 39 (is ) 46 SB
1822 1984 230 (accomplished) 230 SB
321 2047 103 (using ) 106 SB
427 2047 63 (the ) 66 SB
493 2047 153 (supplied ) 156 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
649 2058 220 (ServiceName) 220 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
869 2047 11 ( ) 14 SB
883 2047 96 (\(how ) 99 SB
982 2047 73 (this ) 76 SB
1058 2047 39 (is ) 42 SB
1100 2047 146 (handled ) 149 SB
1249 2047 39 (is ) 42 SB
1291 2047 89 (RPC ) 92 SB
1383 2047 125 (system ) 128 SB
1511 2047 164 (specific\). ) 168 SB
1679 2047 234 (Furthermore, ) 238 SB
1917 2047 63 (the ) 67 SB
1984 2047 68 (first) 68 SB
321 2110 89 (RPC ) 91 SB
412 2110 79 (sent ) 81 SB
493 2110 84 (over ) 86 SB
579 2110 63 (the ) 65 SB
644 2110 195 (connection ) 197 SB
841 2110 213 (corresponds ) 215 SB
1056 2110 43 (to ) 45 SB
1101 2110 63 (the ) 65 SB
1166 2110 188 (invocation ) 190 SB
1356 2110 44 (of ) 46 SB
1402 2110 63 (the ) 66 SB
1468 2110 200 (constructor ) 203 SB
1671 2110 59 (for ) 62 SB
1733 2110 63 (the ) 66 SB
1799 2110 75 (real ) 78 SB
1877 2110 110 (object ) 113 SB
1990 2110 62 (and) 62 SB
321 2173 690 (is passed the arguments presented to the ) 691 SB
1012 2173 80 (stub ) 81 SB
1093 2173 50 (by ) 51 SB
1144 2173 63 (the ) 64 SB
1208 2173 105 (client ) 106 SB
1314 2173 210 (application. ) 211 SB
1525 2173 179 (Similarly, ) 180 SB
1705 2173 102 (when ) 103 SB
1808 2173 63 (the ) 64 SB
1872 2173 80 (stub ) 81 SB
1953 2173 99 (object) 99 SB
321 2236 39 (is ) 45 SB
366 2236 171 (destroyed ) 177 SB
543 2236 45 (in ) 51 SB
594 2236 63 (the ) 69 SB
663 2236 116 (client, ) 122 SB
785 2236 63 (the ) 69 SB
854 2236 175 (generated ) 181 SB
1035 2236 179 (destructor ) 185 SB
1220 2236 119 (causes ) 125 SB
1345 2236 52 (an ) 58 SB
1403 2236 89 (RPC ) 96 SB
1499 2236 132 (request ) 139 SB
1638 2236 43 (to ) 50 SB
1688 2236 49 (be ) 56 SB
1744 2236 79 (sent ) 86 SB
1830 2236 43 (to ) 50 SB
1880 2236 63 (the ) 70 SB
1950 2236 102 (server) 102 SB
321 2299 140 (causing ) 147 SB
468 2299 63 (the ) 70 SB
538 2299 173 (execution ) 181 SB
719 2299 44 (of ) 52 SB
771 2299 63 (the ) 71 SB
842 2299 127 (remote ) 135 SB
977 2299 110 (object ) 118 SB
1095 2299 179 (destructor ) 187 SB
1282 2299 115 (before ) 123 SB
1405 2299 63 (the ) 71 SB
1476 2299 195 (connection ) 203 SB
1679 2299 43 (to ) 51 SB
1730 2299 63 (the ) 71 SB
1801 2299 113 (server ) 121 SB
1922 2299 39 (is ) 47 SB
1969 2299 83 (itself) 83 SB
321 2362 1555 (terminated. Precisely how server processes are created is a matter for the underlying system.) 1555 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 2495 127 (B.3.3) 127 SB
471 2495 527 (Server Side Interface) 527 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2619 190 ( Similarly, ) 191 SB
662 2619 63 (the ) 64 SB
726 2619 175 (generated ) 176 SB
902 2619 113 (server ) 114 SB
1016 2619 92 (class ) 93 SB
1109 2619 68 (has ) 69 SB
1178 2619 186 (operations ) 187 SB
1365 2619 76 (that ) 77 SB
1442 2619 169 (primarily ) 170 SB
1612 2619 197 (correspond ) 198 SB
1810 2619 43 (to ) 44 SB
1854 2619 99 (those ) 100 SB
1954 2619 44 (of ) 46 SB
2000 2619 52 (the) 52 SB
321 2682 144 (original ) 151 SB
472 2682 99 (input ) 106 SB
578 2682 92 (class ) 99 SB
677 2682 119 (except ) 126 SB
803 2682 76 (that ) 83 SB
886 2682 88 (each ) 95 SB
981 2682 39 (is ) 46 SB
1027 2682 201 (responsible ) 208 SB
1235 2682 59 (for ) 67 SB
1302 2682 181 (parameter ) 189 SB
1491 2682 285 (\(un\)marshalling ) 293 SB
1784 2682 73 (and ) 81 SB
1865 2682 127 (calling ) 135 SB
2000 2682 52 (the) 52 SB
321 2745 186 (equivalent ) 198 SB
519 2745 170 (operation ) 182 SB
701 2745 53 (on ) 65 SB
766 2745 63 (the ) 75 SB
841 2745 75 (real ) 87 SB
928 2745 121 (object. ) 133 SB
1061 2745 47 (In ) 59 SB
1120 2745 150 (addition ) 162 SB
1282 2745 73 (this ) 85 SB
1367 2745 113 (server ) 126 SB
1493 2745 92 (class ) 105 SB
1598 2745 68 (has ) 81 SB
1679 2745 186 (operations ) 199 SB
1878 2745 59 (for ) 72 SB
1950 2745 102 (server) 102 SB
321 2808 225 (initialisation ) 232 SB
553 2808 73 (and ) 80 SB
633 2808 72 (two ) 79 SB
712 2808 186 (operations ) 193 SB
905 2808 76 (that ) 83 SB
988 2808 192 (implement ) 199 SB
1187 2808 63 (the ) 70 SB
1257 2808 88 (code ) 96 SB
1353 2808 76 (that ) 84 SB
1437 2808 196 (determines ) 204 SB
1641 2808 92 (from ) 100 SB
1741 2808 63 (the ) 71 SB
1812 2808 171 (incoming ) 179 SB
1991 2808 61 (call) 61 SB
321 2871 1317 (which server operation to actually call \(the so-called operation dispatch code\).) 1317 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (31) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
0 0 0 fC
321 311 880 (class ServerDiary : public ServerLockManager) 880 SB
321 347 20 ({) 20 SB
321 419 140 (public:) 140 SB
413 455 300 (ServerDiary \(\);) 300 SB
413 491 320 (~ServerDiary \(\);) 320 SB
413 563 540 (void Server \(int, char **\);) 540 SB
413 599 1300 (long DispatchToClass \(LocalDiary*, long, RpcBuffer&, RpcBuffer&\);) 1300 SB
321 671 160 (private:) 160 SB
413 707 660 (// Main server dispatch operation) 660 SB
413 743 1300 (long DispatchToOper \(LocalDiary *, long, RpcBuffer&, RpcBuffer&\);) 1300 SB
413 815 1180 (// Operations corresponding to those callable in the client) 1180 SB
413 851 1160 (long Diary119360965\(LocalDiary *, RpcBuffer&, RpcBuffer&\);) 1160 SB
413 887 1160 (long Diary262355078\(LocalDiary *, RpcBuffer&, RpcBuffer&\);) 1160 SB
413 923 1200 (long WhereIs186673735\(LocalDiary *, RpcBuffer&, RpcBuffer&\);) 1200 SB
413 959 1400 (long GetNextAppointment31096804\(LocalDiary *, RpcBuffer&, RpcBuffer&\);) 1400 SB
413 995 1340 (long AddAppointment101964452\(LocalDiary *, RpcBuffer&, RpcBuffer&\);) 1340 SB
413 1031 1340 (long DelAppointment222961300\(LocalDiary *, RpcBuffer&, RpcBuffer&\);) 1340 SB
413 1067 1260 (long save_state140478901\(LocalDiary *, RpcBuffer&, RpcBuffer&\);) 1260 SB
413 1103 1280 (long restore_state9807781\(LocalDiary *, RpcBuffer&, RpcBuffer&\);) 1280 SB
413 1139 1140 (long type117319830\(LocalDiary *, RpcBuffer&, RpcBuffer&\);) 1140 SB
413 1211 500 (// Pointer to real object) 500 SB
413 1247 520 (LocalDiary *therealobject;) 520 SB
413 1283 100 (. . .) 100 SB
321 1319 40 (};) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1412 96 (Each ) 103 SB
574 1412 131 (routine ) 138 SB
712 1412 45 (in ) 52 SB
764 1412 63 (the ) 70 SB
834 1412 113 (server ) 120 SB
954 1412 92 (class ) 99 SB
1053 1412 184 (effectively ) 191 SB
1244 1412 68 (has ) 75 SB
1319 1412 63 (the ) 70 SB
1389 1412 97 (same ) 104 SB
1493 1412 57 (set ) 64 SB
1557 1412 44 (of ) 51 SB
1608 1412 199 (arguments. ) 206 SB
1814 1412 77 (The ) 85 SB
1899 1412 79 (first ) 87 SB
1986 1412 39 (is ) 47 SB
2033 1412 19 (a) 19 SB
321 1475 131 (pointer ) 139 SB
460 1475 43 (to ) 51 SB
511 1475 63 (the ) 71 SB
582 1475 110 (object ) 118 SB
700 1475 43 (to ) 51 SB
751 1475 49 (be ) 57 SB
808 1475 221 (manipulated ) 229 SB
1037 1475 114 (which ) 122 SB
1159 1475 39 (is ) 47 SB
1206 1475 122 (passed ) 130 SB
1336 1475 43 (to ) 51 SB
1387 1475 121 (ensure ) 129 SB
1516 1475 76 (that ) 84 SB
1600 1475 63 (the ) 72 SB
1672 1475 177 (semantics ) 186 SB
1858 1475 44 (of ) 53 SB
1911 1475 141 (multiple) 141 SB
321 1538 201 (inheritance ) 214 SB
535 1538 63 (are ) 76 SB
611 1538 138 (obeyed. ) 151 SB
762 1538 77 (The ) 90 SB
852 1538 126 (second ) 139 SB
991 1538 39 (is ) 52 SB
1043 1538 52 (an ) 65 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1108 1549 180 (RpcBuffer) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1288 1538 11 ( ) 24 SB
1312 1538 76 (that ) 89 SB
1401 1538 152 (contains ) 165 SB
1566 1538 54 (all ) 67 SB
1633 1538 44 (of ) 57 SB
1690 1538 63 (the ) 76 SB
1766 1538 72 (call ) 86 SB
1852 1538 200 (information) 200 SB
321 1601 185 (\(incoming ) 186 SB
507 1601 208 (parameters, ) 209 SB
716 1601 59 (for ) 60 SB
776 1601 178 (example\), ) 179 SB
955 1601 73 (and ) 74 SB
1029 1601 63 (the ) 64 SB
1093 1601 93 (third ) 94 SB
1187 1601 39 (is ) 40 SB
1227 1601 52 (an ) 53 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1280 1612 180 (RpcBuffer) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1460 1601 11 ( ) 12 SB
1472 1601 77 (into ) 78 SB
1550 1601 114 (which ) 116 SB
1666 1601 63 (the ) 65 SB
1731 1601 121 (results ) 123 SB
1854 1601 50 (\(if ) 52 SB
1906 1601 85 (any\) ) 87 SB
1993 1601 59 (can) 59 SB
321 1664 1533 (be placed. All operation names in this class are generated by combining the original name ) 1534 SB
1855 1664 86 (with ) 87 SB
1942 1664 30 (a ) 31 SB
1973 1664 79 (hash) 79 SB
321 1727 101 (value ) 104 SB
425 1727 175 (computed ) 178 SB
603 1727 92 (from ) 95 SB
698 1727 63 (the ) 66 SB
764 1727 144 (original ) 147 SB
911 1727 69 (full ) 72 SB
983 1727 170 (operation ) 173 SB
1156 1727 167 (signature ) 170 SB
1326 1727 106 (\(class ) 109 SB
1435 1727 114 (name, ) 117 SB
1552 1727 170 (operation ) 173 SB
1725 1727 114 (name, ) 117 SB
1842 1727 73 (and ) 76 SB
1918 1727 97 (types ) 101 SB
2019 1727 33 (of) 33 SB
321 1790 54 (all ) 56 SB
377 1790 222 (parameters\). ) 224 SB
601 1790 87 (This ) 89 SB
690 1790 136 (scheme ) 138 SB
828 1790 137 (ensures ) 139 SB
967 1790 76 (that ) 78 SB
1045 1790 186 (operations ) 188 SB
1233 1790 195 (overloaded ) 197 SB
1430 1790 45 (in ) 47 SB
1477 1790 63 (the ) 65 SB
1542 1790 144 (original ) 146 SB
1688 1790 92 (class ) 94 SB
1782 1790 70 (can ) 72 SB
1854 1790 49 (be ) 51 SB
1905 1790 147 (correctly) 147 SB
321 1853 151 (resolved ) 154 SB
475 1853 45 (in ) 48 SB
523 1853 63 (the ) 66 SB
589 1853 113 (server ) 117 SB
706 1853 187 (\(otherwise ) 191 SB
897 1853 63 (the ) 67 SB
964 1853 156 (standard ) 160 SB
1124 1853 211 (overloading ) 215 SB
1339 1853 204 (mechanism ) 208 SB
1547 1853 45 (in ) 49 SB
1596 1853 63 (the ) 67 SB
1663 1853 160 (compiler ) 164 SB
1827 1853 114 (would ) 118 SB
1945 1853 65 (not ) 69 SB
2014 1853 38 (be) 38 SB
321 1916 80 (able ) 86 SB
407 1916 43 (to ) 49 SB
456 1916 65 (tell ) 71 SB
527 1916 96 (them ) 103 SB
630 1916 122 (apart\). ) 129 SB
759 1916 87 (This ) 94 SB
853 1916 175 (computed ) 182 SB
1035 1916 90 (hash ) 97 SB
1132 1916 101 (value ) 108 SB
1240 1916 39 (is ) 46 SB
1286 1916 78 (also ) 85 SB
1371 1916 87 (used ) 94 SB
1465 1916 45 (in ) 52 SB
1517 1916 63 (the ) 70 SB
1587 1916 113 (server ) 120 SB
1707 1916 152 (dispatch ) 159 SB
1866 1916 88 (code ) 95 SB
1961 1916 91 (when) 91 SB
321 1979 980 (determining which operation in the server to actually call.) 980 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 2112 127 (B.3.4) 127 SB
471 2112 429 (Server Side Code) 429 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 2229 880 (long ServerDiary::GetNextAppointment31096804) 880 SB
509 2265 1180 (\(LocalDiary *theobject, RpcBuffer& work, RpcBuffer& result\)) 1180 SB
321 2301 20 ({) 20 SB
413 2337 380 (RpcBuffer rvBuffer;) 380 SB
413 2373 620 (long errCode = OPER_INVOKED_OK;) 620 SB
413 2409 600 (/* unpack incoming argument */) 600 SB
413 2445 320 (time_t now = -1;) 320 SB
413 2481 240 (work >> now;) 240 SB
413 2517 540 (/* perform the real call */) 540 SB
413 2553 1300 (AnAppointment returnedValue = theobject->GetNextAppointment\(now\);) 1300 SB
413 2589 440 (/* send back result */) 440 SB
413 2625 520 (rvBuffer << returnedValue;) 520 SB
413 2661 520 (if \(rvBuffer.length\(\) > 0\)) 520 SB
509 2697 380 (result << rvBuffer;) 380 SB
413 2733 300 (return errCode;) 300 SB
321 2769 20 (}) 20 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 2890 83 (B.4) 83 SB
471 2890 616 (Coping With Inheritance) 616 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 3014 57 (To ) 61 SB
532 3014 121 (ensure ) 125 SB
657 3014 76 (that ) 80 SB
737 3014 63 (the ) 67 SB
804 3014 80 (stub ) 85 SB
889 3014 88 (code ) 93 SB
982 3014 59 (for ) 64 SB
1046 3014 88 (each ) 93 SB
1139 3014 92 (class ) 97 SB
1236 3014 70 (can ) 75 SB
1311 3014 49 (be ) 54 SB
1365 3014 166 (compiled ) 171 SB
1536 3014 249 (independently ) 254 SB
1790 3014 92 (from ) 97 SB
1887 3014 71 (any ) 76 SB
1963 3014 44 (of ) 49 SB
2012 3014 40 (its) 40 SB
321 3077 134 (parents ) 148 SB
469 3077 73 (and ) 87 SB
556 3077 47 (so ) 61 SB
617 3077 76 (that ) 90 SB
707 3077 30 (a ) 44 SB
751 3077 131 (change ) 145 SB
896 3077 45 (in ) 59 SB
955 3077 30 (a ) 44 SB
999 3077 84 (base ) 98 SB
1097 3077 92 (class ) 106 SB
1203 3077 90 (need ) 104 SB
1307 3077 65 (not ) 79 SB
1386 3077 196 (necessarily ) 211 SB
1597 3077 95 (force ) 110 SB
1707 3077 30 (a ) 45 SB
1752 3077 223 (regeneration ) 238 SB
1990 3077 62 (and) 62 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (32) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
321 276 245 (recompilation ) 252 SB
573 276 44 (of ) 51 SB
624 276 63 (the ) 70 SB
694 276 80 (stub ) 87 SB
781 276 88 (code ) 95 SB
876 276 59 (for ) 67 SB
943 276 71 (any ) 79 SB
1022 276 136 (derived ) 144 SB
1166 276 103 (class, ) 111 SB
1277 276 63 (the ) 71 SB
1348 276 80 (stub ) 88 SB
1436 276 171 (generator ) 179 SB
1615 276 168 (preserves ) 176 SB
1791 276 63 (the ) 71 SB
1862 276 190 (inheritance) 190 SB
321 339 179 (properties ) 181 SB
502 339 44 (of ) 46 SB
548 339 63 (the ) 65 SB
613 339 99 (input ) 101 SB
714 339 126 (classes ) 128 SB
842 339 45 (in ) 47 SB
889 339 51 (its ) 53 SB
942 339 118 (output ) 120 SB
1062 339 137 (classes. ) 139 SB
1201 339 90 (That ) 92 SB
1293 339 50 (is, ) 52 SB
1345 339 63 (the ) 65 SB
1410 339 113 (server ) 115 SB
1525 339 152 (dispatch ) 154 SB
1679 339 88 (code ) 91 SB
1770 339 245 (\(implemented ) 248 SB
2018 339 34 (in) 34 SB
321 402 73 (this ) 77 SB
398 402 153 (example ) 157 SB
555 402 50 (by ) 54 SB
609 402 63 (the ) 67 SB
676 402 175 (generated ) 179 SB
855 402 131 (routine ) 135 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
990 413 540 (ServerDiary::DispatchToOper) 540 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1530 402 25 (\) ) 29 SB
1559 402 76 (will ) 80 SB
1639 402 84 (only ) 89 SB
1728 402 138 (directly ) 143 SB
1871 402 124 (invoke ) 129 SB
2000 402 52 (the) 52 SB
321 465 186 (operations ) 190 SB
511 465 136 (defined ) 141 SB
652 465 45 (in ) 50 SB
702 465 63 (the ) 68 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
770 476 100 (Diary) 100 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
870 465 11 ( ) 16 SB
886 465 92 (class ) 97 SB
983 465 25 (- ) 30 SB
1013 465 65 (not ) 70 SB
1083 465 71 (any ) 76 SB
1159 465 186 (operations ) 191 SB
1350 465 92 (from ) 97 SB
1447 465 71 (any ) 76 SB
1523 465 92 (class ) 97 SB
1620 465 92 (from ) 97 SB
1717 465 114 (which ) 119 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1836 476 100 (Diary) 100 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1936 465 11 ( ) 16 SB
1952 465 100 (might) 100 SB
321 528 90 (have ) 92 SB
413 528 89 (been ) 92 SB
505 528 147 (derived. ) 150 SB
655 528 38 (If ) 41 SB
696 528 52 (an ) 55 SB
751 528 170 (operation ) 173 SB
924 528 163 (inherited ) 166 SB
1090 528 92 (from ) 95 SB
1185 528 98 (some ) 101 SB
1286 528 84 (base ) 87 SB
1373 528 92 (class ) 95 SB
1468 528 106 (needs ) 109 SB
1577 528 43 (to ) 46 SB
1623 528 49 (be ) 52 SB
1675 528 145 (invoked ) 148 SB
1823 528 63 (the ) 66 SB
1889 528 132 (request ) 135 SB
2024 528 28 (is) 28 SB
321 591 852 (passed to the appropriate base class by the routine ) 852 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1173 602 560 (ServerDiary::DispatchToClass) 560 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1733 591 310 ( \(in this example\).) 310 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 689 1680 (long ServerDiary::dispatchToOper \( LocalDiary * theObject, long funcCode, RpcBuffer&) 1680 SB
321 725 480 (work, RpcBuffer& result\)) 480 SB
321 761 20 ({) 20 SB
413 797 340 (switch \(funcCode\)) 340 SB
413 833 20 ({) 20 SB
413 869 300 (case 119360965:) 300 SB
509 905 940 (return Diary119360965\(theObject, work, result\);) 940 SB
413 941 300 (case 262355078:) 300 SB
509 977 940 (return Diary262355078\(theObject, work, result\);) 940 SB
413 1013 300 (case 186673735:) 300 SB
509 1049 980 (return WhereIs186673735\(theObject, work, result\);) 980 SB
413 1085 280 (case 31096804:) 280 SB
509 1121 1180 (return GetNextAppointment31096804\(theObject, work, result\);) 1180 SB
413 1157 300 (case 101964452:) 300 SB
509 1193 1120 (return AddAppointment101964452\(theObject, work, result\);) 1120 SB
413 1229 300 (case 222961300:) 300 SB
509 1265 1120 (return DelAppointment222961300\(theObject, work, result\);) 1120 SB
413 1301 300 (case 140478901:) 300 SB
509 1337 1040 (return save_state140478901\(theObject, work, result\);) 1040 SB
413 1373 260 (case 9807781:) 260 SB
509 1409 1060 (return restore_state9807781\(theObject, work, result\);) 1060 SB
413 1445 300 (case 117319830:) 300 SB
509 1481 920 (return type117319830\(theObject, work, result\);) 920 SB
413 1517 160 (default:) 160 SB
509 1553 440 (return DISPATCH_ERROR;) 440 SB
413 1589 20 (}) 20 SB
321 1625 20 (}) 20 SB
321 1711 1480 (long ServerDiary::dispatchToClass \( LocalDiary * theObject, long funcCode,) 1480 SB
321 1747 720 ( RpcBuffer& work, RpcBuffer& result\)) 720 SB
321 1783 20 ({) 20 SB
413 1819 300 (long classCode;) 300 SB
413 1891 360 (work >> classCode;) 360 SB
413 1963 360 (switch \(classCode\)) 360 SB
413 1999 20 ({) 20 SB
413 2035 160 (case -1:) 160 SB
509 2071 1140 (return dispatchToOper\(theObject, funcCode, work, result\);) 1140 SB
413 2107 280 (case 53946306:) 280 SB
509 2143 1540 (return ServerLockManager::dispatchToClass\(theObject, funcCode, work, result\);) 1540 SB
413 2179 160 (default:) 160 SB
509 2215 440 (return DISPATCH_ERROR;) 440 SB
413 2251 20 (}) 20 SB
321 2287 20 (}) 20 SB
32 0 0 58 58 0 0 0 54 /Times-Bold /font29 ANSIFont font
321 2408 127 (B.4.1) 127 SB
471 2408 880 (Multiple Inheritance Complications) 880 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2532 77 (The ) 81 SB
552 2532 108 (above ) 112 SB
664 2532 88 (code ) 92 SB
756 2532 42 (at ) 46 SB
802 2532 79 (first ) 83 SB
885 2532 112 (seems ) 116 SB
1001 2532 239 (unnecessarily ) 243 SB
1244 2532 165 (complex, ) 169 SB
1413 2532 164 (however, ) 168 SB
1581 2532 73 (this ) 77 SB
1658 2532 39 (is ) 43 SB
1701 2532 141 (because ) 146 SB
1847 2532 35 (it ) 40 SB
1887 2532 93 (must ) 98 SB
1985 2532 67 (also) 67 SB
321 2595 88 (cope ) 96 SB
417 2595 86 (with ) 94 SB
511 2595 63 (the ) 71 SB
582 2595 246 (complications ) 254 SB
836 2595 191 (introduced ) 199 SB
1035 2595 50 (by ) 59 SB
1094 2595 152 (multiple ) 161 SB
1255 2595 212 (inheritance. ) 221 SB
1476 2595 80 (Had ) 89 SB
1565 2595 87 (C++ ) 96 SB
1661 2595 89 (been ) 98 SB
1759 2595 131 (limited ) 140 SB
1899 2595 43 (to ) 52 SB
1951 2595 101 (single) 101 SB
321 2658 201 (inheritance ) 203 SB
524 2658 85 (then ) 87 SB
611 2658 63 (the ) 65 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
676 2669 300 (DispatchToClass) 300 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
976 2658 11 ( ) 13 SB
989 2658 170 (operation ) 172 SB
1161 2658 114 (would ) 116 SB
1277 2658 65 (not ) 67 SB
1344 2658 90 (have ) 93 SB
1437 2658 89 (been ) 92 SB
1529 2658 152 (required ) 155 SB
1684 2658 73 (and ) 76 SB
1760 2658 63 (the ) 66 SB
1826 2658 127 (default ) 130 SB
1956 2658 60 (act ) 63 SB
2019 2658 33 (of) 33 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 2732 280 (DispatchToOper) 280 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
601 2721 11 ( ) 12 SB
613 2721 114 (would ) 115 SB
728 2721 90 (have ) 91 SB
819 2721 89 (been ) 90 SB
909 2721 43 (to ) 44 SB
953 2721 177 (propagate ) 178 SB
1131 2721 63 (the ) 64 SB
1195 2721 72 (call ) 73 SB
1268 2721 43 (to ) 44 SB
1312 2721 63 (the ) 64 SB
1376 2721 189 (immediate ) 190 SB
1566 2721 118 (parent ) 119 SB
1685 2721 92 (class ) 93 SB
1778 2721 36 (if ) 37 SB
1815 2721 71 (one ) 72 SB
1887 2721 129 (existed ) 130 SB
2017 2721 35 (or) 35 SB
321 2784 1469 (return an error otherwise \(note that this later condition should never occur in practice\).) 1469 SB
471 2889 88 ( The ) 88 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
559 2900 300 (DispatchToClass) 300 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
859 2889 1193 ( routine is responsible for resolving the potential ambiguities on which) 1193 SB
321 2952 131 (routine ) 135 SB
456 2952 43 (to ) 47 SB
503 2952 72 (call ) 76 SB
579 2952 45 (in ) 49 SB
628 2952 63 (the ) 68 SB
696 2952 113 (server ) 118 SB
814 2952 76 (that ) 81 SB
895 2952 70 (can ) 75 SB
970 2952 91 (arise ) 96 SB
1066 2952 102 (when ) 107 SB
1173 2952 152 (multiple ) 157 SB
1330 2952 201 (inheritance ) 206 SB
1536 2952 39 (is ) 44 SB
1580 2952 87 (used ) 92 SB
1672 2952 77 (\(the ) 82 SB
1754 2952 180 (ambiguity ) 185 SB
1939 2952 113 (cannot) 113 SB
321 3015 90 (exist ) 91 SB
412 3015 45 (in ) 46 SB
458 3015 63 (the ) 64 SB
522 3015 144 (original ) 145 SB
667 3015 105 (client ) 106 SB
773 3015 88 (code ) 89 SB
862 3015 173 (otherwise ) 174 SB
1036 3015 63 (the ) 64 SB
1100 3015 87 (C++ ) 88 SB
1188 3015 160 (compiler ) 161 SB
1349 3015 114 (would ) 115 SB
1464 3015 90 (have ) 91 SB
1555 3015 142 (rejected ) 143 SB
1698 3015 60 (it\). ) 61 SB
1759 3015 37 (It ) 38 SB
1797 3015 86 (does ) 88 SB
1885 3015 73 (this ) 75 SB
1960 3015 92 (using) 92 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (33) 42 SB
EJ RS
%%PageTrailer
SS
0 0 18 13 783 1169 300 SM
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
0 0 0 fC
321 276 211 (information ) 214 SB
535 276 88 (built ) 91 SB
626 276 102 (when ) 105 SB
731 276 63 (the ) 66 SB
797 276 105 (client ) 108 SB
905 276 110 (object ) 113 SB
1018 276 39 (is ) 42 SB
1060 276 204 (constructed ) 207 SB
1267 276 73 (and ) 76 SB
1343 276 114 (which ) 117 SB
1460 276 39 (is ) 42 SB
1502 276 203 (transmitted ) 206 SB
1708 276 46 (as ) 50 SB
1758 276 78 (part ) 82 SB
1840 276 44 (of ) 48 SB
1888 276 88 (each ) 92 SB
1980 276 72 (call.) 72 SB
321 339 1050 (Consider the following trivial example of multiple inheritance) 1050 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 437 200 (class Base) 200 SB
321 473 20 ({) 20 SB
321 509 140 (public:) 140 SB
413 545 180 (int f \(\);) 180 SB
321 581 40 (};) 40 SB
321 653 640 (class Derived1 : public Base {};) 640 SB
321 725 640 (class Derived2 : Public Base {};) 640 SB
321 797 1040 (class MostDerived : public Derived1, public Derived2) 1040 SB
321 833 20 ({) 20 SB
321 869 140 (public:) 140 SB
413 905 240 (void anOp\(\);) 240 SB
321 941 20 (}) 20 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 1034 47 (In ) 48 SB
519 1034 73 (this ) 74 SB
593 1034 153 (example ) 154 SB
747 1034 71 (any ) 72 SB
819 1034 150 (instance ) 151 SB
970 1034 44 (of ) 45 SB
1015 1034 63 (the ) 64 SB
1079 1034 92 (class ) 93 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1172 1045 220 (MostDerived) 220 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1392 1034 11 ( ) 12 SB
1404 1034 76 (will ) 77 SB
1481 1034 136 (contain ) 138 SB
1619 1034 72 (two ) 74 SB
1693 1034 166 (instances ) 168 SB
1861 1034 44 (of ) 46 SB
1907 1034 63 (the ) 65 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1972 1045 80 (Base) 80 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
321 1097 92 (class ) 95 SB
416 1097 25 (- ) 28 SB
444 1097 71 (one ) 74 SB
518 1097 45 (in ) 48 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
566 1108 160 (Derived1) 160 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
726 1097 22 (, ) 25 SB
751 1097 73 (and ) 76 SB
827 1097 139 (another ) 142 SB
969 1097 45 (in ) 48 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1017 1108 160 (Derived2) 160 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1177 1097 22 (. ) 25 SB
1202 1097 102 (From ) 105 SB
1307 1097 63 (the ) 66 SB
1373 1097 199 (application ) 202 SB
1575 1097 245 (programmer's ) 248 SB
1823 1097 98 (point ) 102 SB
1925 1097 44 (of ) 48 SB
1973 1097 79 (view) 79 SB
321 1160 73 (this ) 84 SB
405 1160 39 (is ) 50 SB
455 1160 190 (potentially ) 201 SB
656 1160 162 (harmless ) 173 SB
829 1160 73 (and ) 84 SB
913 1160 246 (complications ) 257 SB
1170 1160 84 (only ) 95 SB
1265 1160 91 (arise ) 102 SB
1367 1160 36 (if ) 47 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1414 1171 60 (f\(\)) 60 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1474 1160 11 ( ) 22 SB
1496 1160 39 (is ) 50 SB
1546 1160 111 (called ) 122 SB
1668 1160 92 (from ) 104 SB
1772 1160 52 (an ) 64 SB
1836 1160 170 (operation ) 182 SB
2018 1160 34 (in) 34 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1234 220 (MostDerived) 220 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
541 1223 11 ( ) 14 SB
555 1223 79 (\(say ) 82 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
637 1234 80 (anOp) 80 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
717 1223 25 (\) ) 28 SB
745 1223 97 (since ) 100 SB
845 1223 63 (the ) 66 SB
911 1223 160 (compiler ) 163 SB
1074 1223 124 (cannot ) 127 SB
1201 1223 180 (determine ) 184 SB
1385 1223 145 (unaided ) 149 SB
1534 1223 95 (upon ) 99 SB
1633 1223 114 (which ) 118 SB
1751 1223 44 (of ) 48 SB
1799 1223 63 (the ) 67 SB
1866 1223 186 (sub-objects) 186 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1297 60 (f\(\)) 60 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
381 1286 11 ( ) 13 SB
394 1286 123 (should ) 125 SB
519 1286 49 (be ) 51 SB
570 1286 156 (invoked. ) 158 SB
728 1286 47 (In ) 49 SB
777 1286 73 (this ) 75 SB
852 1286 151 (scenario ) 153 SB
1005 1286 63 (the ) 66 SB
1071 1286 221 (programmer ) 224 SB
1295 1286 93 (must ) 96 SB
1391 1286 168 (explicitly ) 171 SB
1562 1286 128 (qualify ) 131 SB
1693 1286 63 (the ) 66 SB
1759 1286 72 (call ) 75 SB
1834 1286 73 (\(for ) 76 SB
1910 1286 142 (example) 142 SB
321 1349 46 (as ) 50 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
371 1360 260 (Derived1::f\(\)) 260 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
631 1349 36 (\). ) 40 SB
671 1349 87 (This ) 91 SB
762 1349 137 (explicit ) 141 SB
903 1349 224 (qualification ) 229 SB
1132 1349 157 (uniquely ) 162 SB
1294 1349 167 (identifies ) 172 SB
1466 1349 114 (which ) 119 SB
1585 1349 44 (of ) 49 SB
1634 1349 63 (the ) 68 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1702 1360 80 (Base) 80 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1782 1349 11 ( ) 16 SB
1798 1349 197 (sub-objects ) 202 SB
2000 1349 52 (are) 52 SB
321 1412 104 (being ) 110 SB
431 1412 155 (operated ) 161 SB
592 1412 95 (upon ) 102 SB
694 1412 45 (in ) 52 SB
746 1412 63 (the ) 70 SB
816 1412 116 (client. ) 123 SB
939 1412 170 (Naturally ) 177 SB
1116 1412 35 (it ) 42 SB
1158 1412 39 (is ) 46 SB
1204 1412 63 (the ) 70 SB
1274 1412 62 (job ) 69 SB
1343 1412 44 (of ) 51 SB
1394 1412 63 (the ) 70 SB
1464 1412 80 (stub ) 87 SB
1551 1412 171 (generator ) 178 SB
1729 1412 43 (to ) 50 SB
1779 1412 121 (ensure ) 128 SB
1907 1412 76 (that ) 83 SB
1990 1412 62 (this) 62 SB
321 1475 1223 (qualification is also be reflected in the server by the generated stub code.) 1223 SB
471 1580 1052 (However, since the stub generator treats all of these classes as ) 1053 SB
1524 1580 218 (independent ) 219 SB
1743 1580 85 (then ) 86 SB
1829 1580 63 (the ) 64 SB
1893 1580 159 (operation) 159 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 1654 180 (Base::f\(\)) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
501 1643 11 ( ) 14 SB
515 1643 76 (will ) 79 SB
594 1643 49 (be ) 52 SB
646 1643 156 (assigned ) 160 SB
806 1643 84 (only ) 88 SB
894 1643 71 (one ) 75 SB
969 1643 170 (operation ) 174 SB
1143 1643 88 (code ) 92 SB
1235 1643 59 (\(in ) 63 SB
1298 1643 73 (this ) 77 SB
1375 1643 175 (particular ) 179 SB
1554 1643 153 (example ) 157 SB
1711 1643 193 (59307398\) ) 197 SB
1908 1643 73 (and ) 77 SB
1985 1643 35 (it ) 39 SB
2024 1643 28 (is) 28 SB
321 1706 73 (this ) 75 SB
396 1706 101 (value ) 103 SB
499 1706 76 (that ) 78 SB
577 1706 76 (will ) 78 SB
655 1706 49 (be ) 51 SB
706 1706 79 (sent ) 81 SB
787 1706 45 (in ) 47 SB
834 1706 63 (the ) 65 SB
899 1706 89 (RPC ) 91 SB
990 1706 163 (message. ) 165 SB
1155 1706 149 (Without ) 151 SB
1306 1706 52 (an ) 54 SB
1360 1706 161 (auxiliary ) 163 SB
1523 1706 204 (mechanism ) 206 SB
1729 1706 63 (the ) 66 SB
1795 1706 113 (server ) 116 SB
1911 1706 141 (dispatch) 141 SB
321 1769 88 (code ) 94 SB
415 1769 124 (cannot ) 130 SB
545 1769 119 (decide ) 125 SB
670 1769 105 (based ) 111 SB
781 1769 108 (solely ) 114 SB
895 1769 53 (on ) 59 SB
954 1769 170 (operation ) 177 SB
1131 1769 88 (code ) 95 SB
1226 1769 95 (upon ) 102 SB
1328 1769 114 (which ) 121 SB
1449 1769 181 (sub-object ) 188 SB
1637 1769 63 (the ) 70 SB
1707 1769 170 (operation ) 177 SB
1884 1769 123 (should ) 130 SB
2014 1769 38 (be) 38 SB
321 1832 156 (invoked. ) 158 SB
479 1832 57 (To ) 59 SB
538 1832 97 (solve ) 99 SB
637 1832 73 (this ) 75 SB
712 1832 150 (problem ) 152 SB
864 1832 63 (the ) 65 SB
929 1832 80 (stub ) 82 SB
1011 1832 171 (generator ) 173 SB
1184 1832 177 (associates ) 179 SB
1363 1832 30 (a ) 32 SB
1395 1832 90 (hash ) 93 SB
1488 1832 88 (code ) 91 SB
1579 1832 86 (with ) 89 SB
1668 1832 88 (each ) 91 SB
1759 1832 103 (class. ) 106 SB
1865 1832 57 (As ) 60 SB
1925 1832 30 (a ) 33 SB
1958 1832 94 (client) 94 SB
321 1895 80 (stub ) 86 SB
407 1895 110 (object ) 116 SB
523 1895 39 (is ) 45 SB
568 1895 204 (constructed ) 210 SB
778 1895 30 (a ) 36 SB
814 1895 63 (list ) 69 SB
883 1895 44 (of ) 50 SB
933 1895 97 (these ) 103 SB
1036 1895 104 (codes ) 110 SB
1146 1895 39 (is ) 45 SB
1191 1895 217 (dynamically ) 223 SB
1414 1895 88 (built ) 94 SB
1508 1895 73 (and ) 79 SB
1587 1895 113 (stored ) 120 SB
1707 1895 42 (at ) 49 SB
1756 1895 88 (each ) 95 SB
1851 1895 91 (level ) 98 SB
1949 1895 44 (of ) 51 SB
2000 1895 52 (the) 52 SB
321 1958 171 (hierarchy ) 174 SB
495 1958 46 (as ) 49 SB
544 1958 88 (each ) 91 SB
635 1958 200 (constructor ) 203 SB
838 1958 45 (in ) 48 SB
886 1958 63 (the ) 67 SB
953 1958 171 (hierarchy ) 175 SB
1128 1958 39 (is ) 43 SB
1171 1958 156 (invoked. ) 160 SB
1331 1958 69 (For ) 73 SB
1404 1958 71 (any ) 75 SB
1479 1958 104 (given ) 108 SB
1587 1958 92 (class ) 96 SB
1683 1958 63 (the ) 67 SB
1750 1958 63 (list ) 67 SB
1817 1958 143 (consists ) 147 SB
1964 1958 44 (of ) 48 SB
2012 1958 40 (its) 40 SB
321 2021 431 (own code combined with ) 432 SB
753 2021 99 (those ) 100 SB
853 2021 35 (it ) 36 SB
889 2021 39 (is ) 40 SB
929 2021 122 (passed ) 123 SB
1052 2021 46 (as ) 47 SB
1099 2021 52 (an ) 53 SB
1152 2021 183 (argument. ) 184 SB
1336 2021 87 (This ) 88 SB
1424 2021 63 (list ) 64 SB
1488 2021 39 (is ) 40 SB
1528 2021 186 (prepended ) 187 SB
1715 2021 43 (to ) 44 SB
1759 2021 54 (all ) 55 SB
1814 2021 160 (outgoing ) 161 SB
1975 2021 77 (calls) 77 SB
321 2084 73 (and ) 78 SB
399 2084 184 (effectively ) 189 SB
588 2084 76 (acts ) 81 SB
669 2084 46 (as ) 51 SB
720 2084 30 (a ) 35 SB
755 2084 134 (routing ) 139 SB
894 2084 84 (map ) 89 SB
983 2084 158 (allowing ) 163 SB
1146 2084 63 (the ) 68 SB
1214 2084 113 (server ) 118 SB
1332 2084 152 (dispatch ) 158 SB
1490 2084 88 (code ) 94 SB
1584 2084 43 (to ) 49 SB
1633 2084 154 (navigate ) 160 SB
1793 2084 63 (the ) 69 SB
1862 2084 190 (inheritance) 190 SB
321 2147 171 (hierarchy.) 171 SB
471 2252 1402 (Thus in the preceding example, the dynamically built hashcode lists are as follows:) 1402 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 2350 320 (MostDerived : -1) 320 SB
413 2386 420 (Derived1:210816977:-1) 420 SB
509 2422 480 (Base:210816977:297109:-1) 480 SB
413 2458 420 (Derived2:210816978:-1) 420 SB
509 2494 460 (Base:210816978:297109-1) 460 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
471 2587 96 (Thus ) 102 SB
573 2587 36 (if ) 42 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
615 2598 260 (Derived1::f\(\)) 260 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
875 2587 11 ( ) 17 SB
892 2587 39 (is ) 46 SB
938 2587 145 (invoked ) 152 SB
1090 2587 85 (then ) 92 SB
1182 2587 63 (the ) 70 SB
1252 2587 63 (list ) 70 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1322 2598 380 (210816977:297109:-1) 380 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1702 2587 11 ( ) 18 SB
1720 2587 39 (is ) 46 SB
1766 2587 79 (sent ) 86 SB
1852 2587 45 (in ) 52 SB
1904 2587 63 (the ) 70 SB
1974 2587 78 (RPC) 78 SB
321 2650 111 (buffer ) 120 SB
441 2650 105 (along ) 114 SB
555 2650 86 (with ) 95 SB
650 2650 63 (the ) 72 SB
722 2650 88 (code ) 97 SB
819 2650 221 (representing ) 230 SB
1049 2650 63 (the ) 72 SB
1121 2650 170 (operation ) 179 SB
1300 2650 14 (\() 14 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1314 2661 160 (59307398) 160 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1474 2650 36 (\). ) 45 SB
1519 2650 77 (The ) 86 SB
1605 2650 137 (server's ) 147 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1752 2661 300 (DispatchToClass) 300 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
321 2713 131 (routine ) 141 SB
462 2713 142 (extracts ) 152 SB
614 2713 73 (this ) 83 SB
697 2713 63 (list ) 73 SB
770 2713 71 (one ) 81 SB
851 2713 97 (entry ) 107 SB
958 2713 42 (at ) 52 SB
1010 2713 30 (a ) 40 SB
1050 2713 97 (time. ) 107 SB
1157 2713 63 (On ) 73 SB
1230 2713 139 (reading ) 150 SB
1380 2713 63 (the ) 74 SB
1454 2713 79 (first ) 90 SB
1544 2713 144 (element ) 155 SB
1699 2713 14 (\() 14 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1713 2724 180 (210816977) 180 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1893 2713 25 (\) ) 36 SB
1929 2713 35 (it ) 46 SB
1975 2713 77 (calls) 77 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 2787 620 (ServerDerived1::DispatchToClass) 620 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
941 2776 22 (, ) 41 SB
982 2776 114 (which ) 133 SB
1115 2776 142 (extracts ) 161 SB
1276 2776 63 (the ) 82 SB
1358 2776 88 (code ) 107 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1465 2787 120 (297109) 120 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1585 2776 11 ( ) 30 SB
1615 2776 73 (and ) 92 SB
1707 2776 85 (then ) 104 SB
1811 2776 45 (in ) 64 SB
1875 2776 81 (turn ) 100 SB
1975 2776 77 (calls) 77 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
321 2850 540 (ServerBase::DispatchToClass) 540 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
861 2839 22 (. ) 32 SB
893 2839 87 (This ) 97 SB
990 2839 142 (extracts ) 152 SB
1142 2839 63 (the ) 73 SB
1215 2839 88 (code ) 98 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1313 2850 40 (-1) 40 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
1353 2839 11 ( ) 21 SB
1374 2839 73 (and ) 83 SB
1457 2839 82 (thus ) 92 SB
1549 2839 140 (invokes ) 150 SB
1699 2839 63 (the ) 73 SB
32 0 0 33 33 0 0 0 27 /Courier /font0 ANSIFont font
1772 2850 280 (DispatchToOper) 280 SB
32 0 0 42 42 0 0 0 38 /Times-Roman /font32 ANSIFont font
321 2902 1281 (routine which finally calls the operation requested on the correct sub-object.) 1281 SB
32 0 0 42 42 0 0 0 38 /Times-Italic /font31 ANSIFont font
2010 3270 42 (34) 42 SB
EJ RS
%%PageTrailer
%%Trailer
SVDoc restore
end
% TrueType font name key:
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT310000 = 
%    MSTT31c537 = 21efDArialF00000064000002bc0001
%    MSTT31c542 = 21efDArialF00000026000002bc0000
%    MSTT31c54d = 21efDArialF0000003a000002bc0000
%    MSTT31c558 = 21efDTimes New RomanF0000003a000001900000
%    MSTT31c565 = 21efDArialF00000026000001900000
%    MSTT31c570 = 21efDArialF0000003a000001900000
%    MSTT31c57b = 21efDArialF00000064000001900000
%    MSTT31c586 = 21efDTimes New RomanF0000002a000001900000
%    MSTT31c593 = 21efDTimes New RomanF00000044000001900000
%    MSTT31c5a0 = 21efDTimes New RomanF00000026000001900000
%    MSTT31c5ad = 21efDTimes New RomanF00000000000001900000
%    MSTT31c5ba = 21efDArialF00000064000002bc0000
%    MSTT31c5c5 = 21efDTimes New RomanF0000003a000002bc0000
%    MSTT31c5d2 = 21efDTimes New RomanF0000002a000001900001
%    MSTT31c5df = 21efDTimes New RomanF0000004b000002bc0000
%    MSTT31c5ec = 21efDTimes New RomanF0000002a000002bc0000
%    MSTT31c5f9 = 21efDCourier NewF00000021000001900000
%    MSTT31c605 = 21efDTimes New RomanF00000016000001900000
%    MSTT31c612 = 21efDTimes New RomanF00000032000001900000
%    MSTT31c61f = 21efDTimes New RomanF0000002a000002bc0001
%    MSTT31c636 = 21efDTimes New RomanF0000004b000001900000
%%DocumentSuppliedResources: procset Win35Dict 3 1

%%DocumentNeededResources: font Courier
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-BoldOblique
%%+ font Palatino-Roman
%%+ font Symbol
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Times-Roman

%%EOF
