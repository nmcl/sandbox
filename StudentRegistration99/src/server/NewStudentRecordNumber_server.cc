/*
 * Automatically Generated by:
 * Arjuna Stub Generator Version 5.5.3 - $Date: 1996/09/10 15:38:44 $
 *
 * Do Not Edit By Hand
 *
 */

#ifdef STUB
#  pragma @NoRename
#endif

#include <StubGen/ServerRpc.h>

#define NEWSTUDENTRECORDNUMBER_SERVER

#include "NewStudentRecordNumber_stub.h"

ServerNewStudentRecordNumber::ServerNewStudentRecordNumber () : theRealObject(0),_constructArgs_(),_constructOpcode_(0),_constructRefCount_(0),_constructResult_()
{}

ServerNewStudentRecordNumber::~ServerNewStudentRecordNumber ()
{
}

void ServerNewStudentRecordNumber::serve ( int argc, char **argv )
{
ServerRpc ServerRPC;
Int32 opcode, errcode;

ServerRPC.initialise(argc, argv);

for (;;)
{
RpcBuffer work;
RpcBuffer result;

ServerRPC.getWork(opcode, work);
errcode = dispatchToClass(theRealObject, opcode, work, result);
ServerRPC.sendResult(errcode, result);
}
}

Int32 ServerNewStudentRecordNumber::dispatchToClass ( LocalNewStudentRecordNumber * theObject, Int32 funcCode, RpcBuffer& work, RpcBuffer& result)
{
Int32 classCode;

work >> classCode;

switch (classCode)
{
case -1:
return dispatchToOper(theObject, funcCode, work, result);
case 53946306:
return ServerLockManager::dispatchToClass(theObject, funcCode, work, result);
default:
return DISPATCH_ERROR;
}
}

Int32 ServerNewStudentRecordNumber::dispatchToOper ( LocalNewStudentRecordNumber * theObject, Int32 funcCode, RpcBuffer& work, RpcBuffer& result)
{
switch (funcCode)
{
case 197604361:
return NewStudentRecordNumber197604361(theObject, work, result);
case 69029060:
return NewStudentRecordNumber69029060(theObject, work, result);
case 235758822:
return NewStudentRecordNumber235758822(theObject, work, result);
case 28897865:
return setNumber28897865(theObject, work, result);
case 193966489:
return getNumber193966489(theObject, work, result);
case 125127561:
return getThenIncreaseNumber125127561(theObject, work, result);
case 169145798:
return hasRemoteState169145798(theObject, work, result);
case 26673606:
return useStoreLocation26673606(theObject, work, result);
case 142033461:
return save_state142033461(theObject, work, result);
case 200938517:
return restore_state200938517(theObject, work, result);
case 267827174:
return type267827174(theObject, work, result);
default:
return DISPATCH_ERROR;
}
}

Int32 ServerNewStudentRecordNumber::NewStudentRecordNumber197604361 (LocalNewStudentRecordNumber * _theObject_, RpcBuffer& _work_, RpcBuffer& _result_)
{
Int32 _errCode_ = OPER_INVOKED_OK;
int _constructedHere_ = 0;
RpcBuffer _savedArgs_ = _work_;
SOutCome* res = 0;
_work_ >> res;
int number = -1;
_work_ >> number;
if (_work_.readState() == BUFFER_GOOD)
{
if ((_constructRefCount_ > 0) && ((_constructOpcode_ != 197604361) || (_constructArgs_ != _savedArgs_)))
_errCode_ = ALREADY_CONSTRUCTED;
else
{
if (_constructRefCount_ > 0)
{
_result_ = _constructResult_;
}
else
{
_constructedHere_ = 1;
theRealObject = new LocalNewStudentRecordNumber(*res, number);
}
}
if (_constructedHere_)
{
_result_ << res;
}
if (_errCode_ == OPER_INVOKED_OK)
{
_constructRefCount_++;
if (_constructRefCount_ == 1)
{
_constructResult_ = _result_;
_constructArgs_ = _savedArgs_;
_constructOpcode_ = 197604361;
}
}
}
else
_errCode_ = PARAMETER_ERROR;

_work_.rewrite();

if(_work_.shouldPack(res))
delete res;
return _errCode_;
}


Int32 ServerNewStudentRecordNumber::NewStudentRecordNumber69029060 (LocalNewStudentRecordNumber * _theObject_, RpcBuffer& _work_, RpcBuffer& _result_)
{
Int32 _errCode_ = OPER_INVOKED_OK;
int _constructedHere_ = 0;
RpcBuffer _savedArgs_ = _work_;
SOutCome* res = 0;
_work_ >> res;
Uid* myUid = 0;
_work_ >> myUid;
if (_work_.readState() == BUFFER_GOOD)
{
if ((_constructRefCount_ > 0) && ((_constructOpcode_ != 69029060) || (_constructArgs_ != _savedArgs_)))
_errCode_ = ALREADY_CONSTRUCTED;
else
{
if (_constructRefCount_ > 0)
{
_result_ = _constructResult_;
}
else
{
_constructedHere_ = 1;
theRealObject = new LocalNewStudentRecordNumber(*res, *myUid);
}
}
if (_constructedHere_)
{
_result_ << res;
}
if (_errCode_ == OPER_INVOKED_OK)
{
_constructRefCount_++;
if (_constructRefCount_ == 1)
{
_constructResult_ = _result_;
_constructArgs_ = _savedArgs_;
_constructOpcode_ = 69029060;
}
}
}
else
_errCode_ = PARAMETER_ERROR;

_work_.rewrite();

if(_work_.shouldPack(res))
delete res;
if(_work_.shouldPack(myUid))
delete myUid;
return _errCode_;
}


Int32 ServerNewStudentRecordNumber::NewStudentRecordNumber235758822 (LocalNewStudentRecordNumber * _theObject_, RpcBuffer& _work_, RpcBuffer& _result_)
{
Int32 _errCode_ = OPER_INVOKED_OK;

if (--_constructRefCount_ == 0)
{
delete _theObject_;
_theObject_ = 0;
theRealObject = 0;
_constructOpcode_ = 0;
}

return _errCode_;
}


Int32 ServerNewStudentRecordNumber::setNumber28897865 (LocalNewStudentRecordNumber * _theObject_, RpcBuffer& _work_, RpcBuffer& _result_)
{
Int32 _errCode_ = OPER_INVOKED_OK;
SOutCome* res = 0;
_work_ >> res;
int number = -1;
_work_ >> number;
if (_work_.readState() == BUFFER_GOOD)
{
_theObject_->setNumber(*res, number);
_result_ << res;
}
else
_errCode_ = PARAMETER_ERROR;

_work_.rewrite();

if(_work_.shouldPack(res))
delete res;
return _errCode_;
}


Int32 ServerNewStudentRecordNumber::getNumber193966489 (LocalNewStudentRecordNumber * _theObject_, RpcBuffer& _work_, RpcBuffer& _result_)
{
Int32 _errCode_ = OPER_INVOKED_OK;
SOutCome* res = 0;
_work_ >> res;
int* number = 0;
_work_ >> number;
if (_work_.readState() == BUFFER_GOOD)
{
_theObject_->getNumber(*res, *number);
_result_ << res;
_result_ << number;
}
else
_errCode_ = PARAMETER_ERROR;

_work_.rewrite();

if(_work_.shouldPack(res))
delete res;
if(_work_.shouldPack(number))
delete number;
return _errCode_;
}


Int32 ServerNewStudentRecordNumber::getThenIncreaseNumber125127561 (LocalNewStudentRecordNumber * _theObject_, RpcBuffer& _work_, RpcBuffer& _result_)
{
Int32 _errCode_ = OPER_INVOKED_OK;
SOutCome* res = 0;
_work_ >> res;
int* number = 0;
_work_ >> number;
if (_work_.readState() == BUFFER_GOOD)
{
_theObject_->getThenIncreaseNumber(*res, *number);
_result_ << res;
_result_ << number;
}
else
_errCode_ = PARAMETER_ERROR;

_work_.rewrite();

if(_work_.shouldPack(res))
delete res;
if(_work_.shouldPack(number))
delete number;
return _errCode_;
}


Int32 ServerNewStudentRecordNumber::hasRemoteState169145798 (LocalNewStudentRecordNumber * _theObject_, RpcBuffer& _work_, RpcBuffer& _result_)
{
RpcBuffer _rvBuffer_;
Int32 _errCode_ = OPER_INVOKED_OK;

Boolean _returnedValue_ = _theObject_->hasRemoteState();
_rvBuffer_ << _returnedValue_;
if (_rvBuffer_.length() > 0)
_result_ << _rvBuffer_;
return _errCode_;
}


Int32 ServerNewStudentRecordNumber::useStoreLocation26673606 (LocalNewStudentRecordNumber * _theObject_, RpcBuffer& _work_, RpcBuffer& _result_)
{
RpcBuffer _rvBuffer_;
Int32 _errCode_ = OPER_INVOKED_OK;

Boolean _returnedValue_ = _theObject_->useStoreLocation();
_rvBuffer_ << _returnedValue_;
if (_rvBuffer_.length() > 0)
_result_ << _rvBuffer_;
return _errCode_;
}


Int32 ServerNewStudentRecordNumber::save_state142033461 (LocalNewStudentRecordNumber * _theObject_, RpcBuffer& _work_, RpcBuffer& _result_)
{
RpcBuffer _rvBuffer_;
Int32 _errCode_ = OPER_INVOKED_OK;
ObjectState* Par_0_ = 0;
_work_ >> Par_0_;
ObjectType Par_1_;
_work_ >> Par_1_;
if (_work_.readState() == BUFFER_GOOD)
{
Boolean _returnedValue_ = _theObject_->save_state(*Par_0_, Par_1_);
_rvBuffer_ << _returnedValue_;
_result_ << Par_0_;
if (_rvBuffer_.length() > 0)
_result_ << _rvBuffer_;
}
else
_errCode_ = PARAMETER_ERROR;

_work_.rewrite();

if(_work_.shouldPack(Par_0_))
delete Par_0_;
return _errCode_;
}


Int32 ServerNewStudentRecordNumber::restore_state200938517 (LocalNewStudentRecordNumber * _theObject_, RpcBuffer& _work_, RpcBuffer& _result_)
{
RpcBuffer _rvBuffer_;
Int32 _errCode_ = OPER_INVOKED_OK;
ObjectState* Par_0_ = 0;
_work_ >> Par_0_;
ObjectType Par_1_;
_work_ >> Par_1_;
if (_work_.readState() == BUFFER_GOOD)
{
Boolean _returnedValue_ = _theObject_->restore_state(*Par_0_, Par_1_);
_rvBuffer_ << _returnedValue_;
_result_ << Par_0_;
if (_rvBuffer_.length() > 0)
_result_ << _rvBuffer_;
}
else
_errCode_ = PARAMETER_ERROR;

_work_.rewrite();

if(_work_.shouldPack(Par_0_))
delete Par_0_;
return _errCode_;
}


Int32 ServerNewStudentRecordNumber::type267827174 (LocalNewStudentRecordNumber * _theObject_, RpcBuffer& _work_, RpcBuffer& _result_)
{
RpcBuffer _rvBuffer_;
Int32 _errCode_ = OPER_INVOKED_OK;

const TypeName _returnedValue_ = _theObject_->type();
_rvBuffer_ << _returnedValue_;
if (_rvBuffer_.length() > 0)
_result_ << _rvBuffer_;
return _errCode_;
}


