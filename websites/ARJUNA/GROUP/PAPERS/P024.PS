%!PS-Adobe-2.0%%Title: Configuring III - Numbered%%Creator: PrintMonitor%%CreationDate: Tuesday, June 8, 1993%%Pages: (atend)%%BoundingBox: ? ? ? ?%%PageBoundingBox: 28 30 566 811%%For: Stuart Wheater%%DocumentProcSets: "(AppleDict md)" 71 0%% © Copyright Apple Computer, Inc. 1989-92 All Rights Reserved.%%EndComments%%BeginProcSet: "(AppleDict md)" 71 0
userdict/dcheckload 2 copy known{pop pop} %DMM {{{pop exec}{save 3 dict begin/rb 6050 string def exch /es exch def %DMM {currentfile rb readline not{stop}if es eq{exit}if}loop end restore pop} %DMM ifelse}bind put}ifelse %DMM{} ( %endappledict) %DMM/dmd710 where dup{exch pop}if not %DMMdcheckload/statusdict where{pop}{userdict /statusdict 10 dict put}ifelse %DMMstatusdict begin %DMM/product where{pop}{/product () def}ifelse %DMM/revision where{pop}{/revision 0 def}ifelse %DMM/version where{pop}{/version (0) def}ifelse %DMMend %DMM{ %DMMuserdict/LW{save statusdict/product get(LaserWriter)anchorsearchexch pop{dup length 0 eq{pop 1}{( Plus)eq{2}{3}ifelse}ifelse}{0}ifelse exch restore}bind putuserdict/patchOK known not{systemdict dup/eexec known exch/cexec known and dup{pop %DMMsave LW dup 1 ne exch 2 ne and false<1861AEDAE118A9F95F1629C0137F8FE656811DD93DFBEA65E947502E78BA12284B8A58EF0A32E272778DAA2ABEC72A84102D591E11D96BA61F57877B895A752D9BEAAC3DFD7D3220E2BDE7C036467464E0E836748F1DE7AB6216866F130CE7CFCEC8CE050B870C11881EE3E9D70919>{eexec}stopped{dup type/stringtype eq{pop}if}if and exch restore}if%DMMuserdict/patchOK 3 -1 roll put} if%DMM userdict/downloadOK known not{userdict/downloadOK{vmstatus exch sub exch pop 120000 gt patchOK and}bind put%DMM }if%DMM userdict/type42known known not{userdict/type42known systemdict/resourcestatus known{42/FontType resourcestatus{pop pop true}{false}ifelse }{false}ifelse put%DMM }iftype42known not downloadOK and {userdict begin /*charpath /charpath load def/charpathflag false def/charpath{userdict/charpathflag true put userdict/*charpath get exec userdict/charpathflag false put}bind def end}if%DMM userdict/checkload known not{userdict/checkload{{pop exec} {save 3 dict begin/mystring 128 %DMM%DMM 6050 string def/endstring 128 string def{currentfile mystring readhexstring not{stop}if endstring eq{exit}if}loop /mystring 512 string def%DMMexch/endstring exch def{currentfile mystring readline not{stop}if endstring eq{exit}if}loop end restore pop}ifelse}bind put%DMM }if
userdict/LW+{LW 2 eq}bind put%DMM userdict/ok known not{userdict/ok{systemdict/statusdict known dup{LW 0 gt and}if}bind put%DMM }if} bind %DMMsystemdict/setobjectformat known{0 setobjectformat}ifsystemdict/currentpacking known{currentpacking true setpacking}if/dmd710 272 %DMM%DMM /md 270 dict def dmd710 %DMM%DMM md beginexch dup /initud exch def exec %DMM/av 71 def/T true def/F false def/mtx matrix def/s75 75 string def/sa8 8 string def/sb8 8 string def/scl 1 def %DMM/sc8 8 string def/sd8 8 string def/s1 ( ) def/pxs 1 def/pys 1 def/ns false def1 0 mtx defaultmatrix dtransform exch atan/pa exch def/nlw .24 def/ppr [-32 -29.52 762 582.48] def/pgr [0 0 0 0] def/pgs 1 def/por true def/xb 500 array def/so true def/tso true def/fillflag false def/pnm 1 def/fmv true def/sfl false def/ma 0 def/invertflag false def/dbinvertflag false def/xflip false def/yflip false def/noflips true def/scaleby96 false def/fNote true def/fBitStretch true def/4colors false def/fg (Rvd\001\001\000\000\177) def/bdf{bind def}bind def/xdf{exch def}bdf/xl{neg exch neg translate}bdf/fp{pnsh 0 ne pnsv 0 ne and}bdf/nop{}bdf/lnop[/nop load]cvx bdf/vrb[{fp{fg 6 get 0 ne{gsave stroke grestore}{gsave 1 setlinewidth pnsh pnsv scale stroke grestore}ifelse}if newpath}bind/eofill loaddup/newpath load2 indexdup{clip newpath}bind{}binddup2 copy]def/sgd systemdict/setpagedevice known{{2 dict begin/PreRenderingEnhance exch def/Policies 1 dict dup/PreRenderingEnhance 1 put def currentdict end setpagedevice}}{{pop}}ifelse bdf/svsc systemdict/currentcolorscreen known{{currentcolorscreen/dkspf xdf/dkrot xdf/dkfreq xdf/dyspf xdf/dyrot xdf/dyfreq xdf/dmspf xdf/dmrot xdf/dmfreq xdf/dcspf xdf/dcrot xdf/dcfreq xdf}}{{currentscreen/spf xdf/rot xdf/freq xdf}}ifelse bdf/doop{vrb exch get exec}bdf/psu{/udf xdf/tso xdf /fNote xdf/fBitStretch xdf/scaleby96 xdf/yflip xdf/xflip xdf/invertflag xdf/dbinvertflag invertflag statusdict begin version cvr 47.0 ge product (LaserWriter) eq not and end invertflag and {not}if defxflip yflip or{/noflips false def}if/pgs xdf 2 index dup 100 div /scl xdf %DMM .72 mul exch div/pys xdf div .72 mul/pxs xdf ppr astore pop pgr astore pop/por xdf sn and/so xdf}bdf/tab{userdict /11x17 known{userdict begin /11x17 load exec end}{statusdict /setpage known{statusdict begin 792 1224 1 setpage end}{statusdict /setpageparams known{statusdict begin 792 1224 0 1 setpageparams end}if}ifelse}ifelse}bdf/a3Size{userdict /a3 known{userdict begin /a3 load exec end}{statusdict /setpageparams known{statusdict begin 842 1191 0 1 setpageparams end}if}ifelse}bdf
/txpose{fNote{smalls}{bigs}ifelse pgs get exec pxs pys scale ppr aload pop por{noflips{pop exch neg exch translate pop 1 -1 scale}ifxflip yflip and{pop exch neg exch translate 180 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg translate}if xflip yflip not and{pop exch neg exch translate pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0 translate}if yflip xflip not and{ppr 1 get neg ppr 0 get neg translate}if}{noflips{translate pop pop 270 rotate 1 -1 scale}if xflip yflip and{translate pop pop 90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg translate}ifxflip yflip not and{translate pop pop 90 rotate ppr 3 get ppr 1 get neg sub neg 0 translate}if yflip xflip not and{translate pop pop 270 rotate ppr 2 get ppr 0 get neg sub neg 0 exch translate}if}ifelsestatusdict begin/waittimeout where{pop waittimeout 300 lt{statusdict/waittimeout 300 put}if}if end scaleby96{ppr aload pop 4 -1 roll add 2 div 3 1 roll add 2 div 2 copy translate .96 dup scale neg exch neg exch translate}if}bdf/fr{4 copy pgr aload pop 3 -1 roll add 3 1 roll exch add 6 2 roll 3 -1 rollsub 3 1 roll exch sub 3 -1 roll exch div 3 1 roll div exch scale pop pop xl}bdf/obl{{0.212557 mul}{pop 0}ifelse}bdf/sfd{ps fg 5 -1 roll get mul 100 div 0 ps 5 -1 roll obl ps neg 0 0 6a astore makefont setfont}bdf/fnt{findfont sfd}bdf/bt{sa 3 1 roll 3 index and put}bdf/sa(\000\000\000\000\000\000\000\000\000\000)def/fs{0 1 bt 1 2 bt 2 4 bt 3 8 bt 4 16 bt 5 32 bt 6 64 bt 7 128 bt sa exch 8 exch put}bdf/mx1 matrix def/mx2 matrix def/mx3 matrix def/bu{currentpoint 4colors{currentcmykcolor}{currentrgbcolor}ifelse currentlinewidth currentlinecap currentlinejoin currentdash exch aload length fg 5 sfl{1}{0}ifelse put pnsv pnsh 2t aload pop 3a aload pop mx2 aload pop mx1 aload pop mtx currentmatrix aload popmx3 aload pop ps pm restore/ps xdf mx3 astore pop}bdf/bn{/pm save def mx3 setmatrix newpath 0 0 moveto ct dup 39 get 0 exch getinterval cvx exec mtx astore setmatrix mx1 astore pop mx2 astore pop 3a astore pop 2t astore pop/pnsh xdf/pnsv xdf gw/sfl fg 5 get 0 ne def array astore exch setdash setlinejoin setlinecap setlinewidth 4colors{mysetcmykcolor}{setrgbcolor}ifelse moveto}bdf/fc{save vmstatus exch sub 50000 lt{(%%[|0|]%%)=print flush}if pop restore}bdf/tc{32768 div add 3 1 roll 32768 div add 2t astore pop}bdf/3a [0 0 0] def/2t 2 array def/tp{3a astore pop}bdf/tt{mx2 currentmatrix pop currentpoint 2 copy 2t aload pop qa 2 copy translate 3a aload pop exch dup 0 eq{pop}{1 eq{-1 1}{1 -1}ifelse scale}ifelse rotate pop neg exch neg exch translate moveto}bdf/te{mx2 setmatrix}bdf/th{3 -1 roll div 3 1 roll exch div 2 copy mx1 scale pop scale/sfl true def}bdf/tu{1 1 mx1 itransform scale/sfl false def}bdf/ts{1 1 mx1 transform scale/sfl true def}bdf/fz{/ps xdf}bdf
/dv{dup 0 ne{div}{pop}ifelse}bdf/pop4{pop pop pop pop}bdf/it{sfl{mx1 itransform}if}bdf/gm{exch it moveto}bdf/rm{it rmoveto}bdf/lm{currentpoint sfl{mx1 transform}if exch pop sub 0 exch it rmoveto}bdf/fm{statusdict/manualfeed known}bdf/se{statusdict exch/manualfeed exch put}bdf/mf{dup/ma exch def 0 gt{fm se/t1 5 st ok ma 1 gt and{/t2 0 st/t3 0 ststatusdict/manualfeedtimeout 3600 put}if}if}bdf/jn{/statusdict where exch pop{statusdict exch /jobname exch put}if}bdf/pen{pnm mul/pnsh xdf pnm mul/pnsv xdf pnsh setlinewidth}bdf/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/dh{fg 6 1 put array astore dup {1 pxs div mul scl mul %DMM exch}forall astore exch pop exch pop exch setdash}bdf/ih[currentdash]def/rh{fg 6 0 put ih aload pop setdash}bdf/dl{gsave nlw pys div setlinewidth 0 setgray}bdf
/dlin{exch currentpoint currentlinewidth 2 div duptranslate newpath moveto lineto currentpoint stroke grestore moveto}bdf/lin{fg 6 get 0 ne{exch lineto currentpoint 0 doop moveto}{exch currentpoint/pnlv xdf/pnlh xdf gsave newpath/@1 xdf/@2 xdf fp{pnlh @2 lt{pnlv @1 ge{pnlh pnlv moveto @2 @1 lineto pnsh 0 rlineto0 pnsv rlineto pnlh pnsh add pnlv pnsv add lineto pnsh neg 0 rlineto}{pnlh pnlv moveto pnsh 0 rlineto @2 pnsh add @1 lineto 0 pnsv rlinetopnsh neg 0 rlineto pnlh pnlv pnsv add lineto}ifelse}{pnlv @1 gt{@2 @1 moveto pnsh 0 rlineto pnlh pnsh add pnlv lineto 0 pnsv rlinetopnsh neg 0 rlineto @2 @1 pnsv add lineto}{pnlh pnlv moveto pnsh 0 rlineto0 pnsv rlineto @2 pnsh add @1 pnsv add lineto pnsh neg 0 rlineto0 pnsv neg rlineto}ifelse}ifelseclosepath fill}if @2 @1 grestore moveto}ifelse}bdf/gw{/pnm fg 3 get fg 4 get div def}bdf/lw{fg exch 4 exch put fg exch 3 exch put gw pnsv pnsh pen}bdf/barc{/@1 xdf/@2 xdf/@3 xdf/@4 xdf/@5 xdf/@6 xdf/@7 xdf/@8 xdf gsave@5 @7 add 2 div @6 @8 add 2 div translate newpath 0 0 moveto@5 @7 sub @6 @8 sub mtx currentmatrix pop scale @1{newpath}if0 0 0.5 @4 @3 arc @4 @3 sub abs 360 ge{closepath}ifmtx setmatrix @2 doop grestore}bdf/ar{dup 0 eq barc}bdf/ov{0 exch 360 exch true barc}bdf/rc{dup/@t xdf 0 eq{4 copy 3 -1 roll eq 3 1 roll eq and{pnsv 2 div sub exch pnsh 2 div sub exch 4 2 roll pnsv 2 div add exch pnsh 2 div add exch/@t 1 def}if}if currentpoint 6 2 roll newpath 4 copy 4 2 roll exch moveto 6 -1 roll lineto lineto lineto closepath @t doop moveto}bdf/mup{dup pnsh 2 div le exch pnsv 2 div le or}bdf/rr{/@1 xdf 2. div/@2 xdf 2. div/@3 xdf/@4 xdf/@5 xdf/@6 xdf/@7 xdf@7 @5 eq @6 @4 eq @2 mup or or{@7 @6 @5 @4 @1 rc}{@4 @6 sub 2. div dup @2 lt{/@2 xdf}{pop}ifelse@5 @7 sub 2. div dup @2 lt{/@2 xdf}{pop}ifelse@1 0 eq{/@2 @2 pnsh 2 div 2 copy gt{sub def}{0 pop4}ifelse}ifcurrentpoint newpath@4 @6 add 2. div @7 moveto@4 @7 @4 @5 @2 arcto pop4@4 @5 @6 @5 @2 arcto pop4@6 @5 @6 @7 @2 arcto pop4@6 @7 @4 @7 @2 arcto pop4closepath @1 doop moveto}ifelse}bdf
/pr{gsave newpath/pl{exch moveto/pl{exch lineto}def}def}bdf/pl{exch lineto}bdf/ep{dup 0 eq{{moveto}{exch lin}{}{(%%[|1|]%%)= flush}pathforallpop grestore}{doop grestore}ifelse currentpoint newpath moveto}bdf/gr{64. div setgray}bdf/savescreen{ns not{/ns true def systemdict/currentcolorscreen known{currentcolorscreen/pkspf xdf/pkrot xdf/pkfreq xdf/pyspf xdf/pyrot xdf/pyfreq xdf/pmspf xdf/pmrot xdf/pmfreq xdf/pcspf xdf/pcrot xdf/pcfreq xdf}{currentscreen/sspf xdf/srot xdf/sfreq xdf}ifelse}if}bdf/restorescreen{/ns false def systemdict/setcolorscreen known{pcfreq pcrot/pcspf load pmfreq pmrot/pmspf load pyfreq pyrot/pyspf loadpkfreq pkrot/pkspf load setcolorscreen}{sfreq srot/sspf load setscreen}ifelse}bdf/pat{savescreen sa8 copy pop 9.375 pa por not{90 add}if{1 add 4 mul cvi sa8 exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}setscreen exch not{gr}{pop}ifelse}bdf/sg{restorescreen gr}bdf/cpat{savescreen 10 2 roll 7 -1 roll sa8 copy pop 9.375 pa por not{90 add}if{1 add 4 mul cvi sa8 exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}8 -1 roll sb8 copy pop 9.375 pa por not{90 add}if{1 add 4 mul cvi sb8exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}9 -1 roll sc8 copy pop 9.375 pa por not{90 add}if{1 add 4 mul cvi sc8 exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}10 -1 roll sd8 copy pop 9.375 pa por not{90 add}if{1 add 4 mul cvi sd8exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}psuedo1 dsc 4{4 -1 roll 1 exch 64 div sub}repeat mysetcmykcolor pop pop}bdfsystemdict/setcolorscreen known{/psuedo1 lnop bdf/dsc/setcolorscreen load def}{/psuedo1{16{pop}repeat sa8 copy pop 9.375 pa por not{90 add}if{1 add 4 mul cvi sa8 exch get exch 1 add 4 mul cvi 7 sub bitshift 1 and}}bdf/bwsc{setscreen dup gr 0 exch 0 exch 64 exch 64 exch 64 exch}bdf/dsc/bwsc load def}ifelsesystemdict/setcmykcolor known{/mysetcmykcolor /setcmykcolor load def}{/mysetcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}bdf}ifelse/dc{transform round .5 sub exch round .5 sub exch itransform}bdf/sn{userdict/smooth4 known}bdf/x8{3 bitshift}bdf/x4{2 bitshift}bdf/d4{-2 bitshift}bdf/d8{-3 bitshift}bdf/rb{15 add -4 bitshift 1 bitshift}bdf/db{/@7 save def/@1 xdf/@2 xdf/@3 xdf/@4 xdf/@5 xdf/@6 @5 @3 4 add mul defdc translate scale/xdbit 1 1 idtransform abs/ydbit exch def abs def{0 0 1 ydbit add 1 10 rc clip}if@1 0 eq @1 4 eq or{currentrgbcolor 1 setgray ydbit 0 1 ydbit add 1 2 rc setrgbcolor}if@1 3 eq @1 7 eq or{1 setgray}{currentrgbcolor 2 index eq exch 2 index eq and exch pop{0 setgray}if}ifelse/@9 @1 0 eq @1 1 eq @1 3 eq or or dbinvertflag xor def/@13 @6 def@2 fBitStretch or{/@10 @4 x4 def/@11 @3 x4 def/@12 @10 rb def/@13 @12 @11 mul def/@15 1 1 dtransform abs/calcY 1 index def round cvi/@14 exch defabs/calcX 1 index def round cvi scaleby96 not{1 add}if def/@16 @15 rb def/@17 @16 @14 mul def}ifsn @13 60000 lt and @2 fBitStretch or and{mtx currentmatrix dup 1 get exch 2 get 0. eq exch 0. eq and @17 60000 lt and fBitStretch and{@16 3 bitshift @14 @9 [calcX 0 0 calcY 0 0]{@17 string @13 stringcurrentfile @6 string readhexstring pop 1 index @4 @3 @5 @12 @2 smooth4@10 @11 @12 dup string 5 index @15 @14 @16 dup string stretch}imagemask}{@12 x8 @11 @9 [@10 0 0 @11 0 0]{@13 stringcurrentfile @6 string readhexstring pop 1 index @4 @3 @5 @12 @2 smooth4}imagemask}ifelse}{@5 3 bitshift @3 4 add @9 [@4 0 0 @3 0 2]{currentfile @6 string readhexstring pop}imagemask}ifelse@7 restore}bdf
systemdict/setcmykcolor known{/psuedo lnop bdf/di/colorimage load def}{/routines[{.3 mul add 1}bind{.59 mul add 2}bind{.11 mul add round cvi str exch i exch put/i i 1 add def 0 0}bind]def/psuedo{/i 0 def 0 exch 0 exch{exch routines exch get exec}forall pop pop str}bdf/bwi{pop pop image}bdf/di/bwi load def}ifelse/cdb{/@7 save def/@1 xdf/@2 xdf/@3 xdf/@4 xdf/@5 xdfsystemdict/setcmykcolor known not{dc}if translate scale /@6 xdf/@18 @5 dup 60000 ge{pop 60000}if string def @6 not{/str @18 0 @18 length 3 idiv getinterval def}if @4 @3 8 [@4 0 0 @3 0 0]@6{{currentfile @18 readhexstring pop}image}{{currentfile @18 readhexstring pop psuedo}false 3 di}ifelse @7 restore}bdf/wd 16 dict def/mfont 14 dict def/mdf{mfont wcheck not{/mfont 14 dict def}if mfont begin xdf end}bdf/cf{{1 index/FID ne{def}{pop pop}ifelse}forall}bdf/rf{/@1 exch def/@2 exch defFontDirectory @2 known{cleartomark pop}{findfont dup begin dup length @1 add dict begincf{/Encoding macvec def}{Encoding dup length array copy/Encoding exch defcounttomark 2 idiv{Encoding 3 1 roll put}repeat}ifelsepopexec currentdict end end @2 exch definefont pop}ifelse}bdf/bmbc{exch begin wd begin/cr xdfsaveCharTable cr 6 mul 6 getinterval{}forall/bitheight xdf/bitwidth xdf.96 div/width xdfGkernmax add/XOffset xdf Gdescent add/YOffset xdf/rowbytes xdfrowbytes 255 eq{0 0 0 0 0 0 setcachedevice}{Gnormsize dup scalewidth 0 XOffset YOffset bitwidth XOffset add bitheight YOffset addsetcachedevicerowbytes 0 ne{XOffset YOffset translate newpath 0 0 movetobitwidth bitheight scalesn{/xSmt bitwidth x4 def/ySmt bitheight x4 def/rSmt xSmt rb defrSmt x8 ySmt true[xSmt 0 0 ySmt neg 0 ySmt]{rSmt ySmt mul string CharData cr get1 index bitwidth bitheight rowbytes rSmt tso smooth4}}{rowbytes 3 bitshift bitheight 4 add true[bitwidth 0 0 bitheight neg 0 bitheight 2 add]{CharData cr get}}ifelseimagemask}if}ifelserestoreend end}bdf
/bb{.96 exch div/Gnormsize mdf 2 index/Gkernmax mdf 1 index/Gdescent mdf3 index div 4 1 roll2 index div 1. 5 2 rollexch div 4 1 roll4 array astore/FontBBox mdf}bdf/cdf{mfont/CharData get 3 1 roll put}bdf/bf{mfont begin/FontType 3 def/FontMatrix [1 0 0 1 0 0] def/Encoding macvec def/MFontType 0 def/BuildChar/bmbc load defendmfont definefont pop}bdf/wi LW 1 eq{{gsave 0 0 0 0 0 0 0 0 moveto lineto lineto lineto closepath clip stringwidth grestore}bind}{/stringwidth load}ifelse def/aps{0 get 124 eq}bdf/xc{s75 cvs dup}bdf/xp{put cvn}bdf/scs{xc 3 67 put dup 0 95 xp}bdf/sos{xc 3 79 xp}bdf/sbs{xc 1 66 xp}bdf/sis{xc 2 73 xp}bdf/sob{xc 2 79 xp}bdf/sss{xc 4 83 xp}bdf/dd{exch 1 index add 3 1 roll add exch}bdf/smc{moveto dup show}bdf/ndf2{udf{dup /FontType get 0 eq{/FDepVector get{dup /FontType get 0 eq{ndf2}{dup /df2 known{begin df2 0 null put end}{pop}ifelse}ifelse}forall}{/df2 known{dup begin df2 0 null put end}if}ifelse}{pop}ifelse}bdf/kwn{FontDirectory 1 index known{findfont dup ndf2 exch pop}}bdf/gl{1 currentgray sub setgray}bdf/newmm{dup /FontType get 0 eq{dup maxlength dict begin{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall currentdict enddup /FDepVector 2 copy get[exch 6 index exch 6 index exch{newmm 3 1 roll}forall pop pop] put dup}{/mfont 10 dict def mfont begin/FontMatrix [1 0 0 1 0 0] def/FontType 3 def/Encoding macvec def/df 1 index def/df2 1 array def/FontBBox [0 0 1 1] def/StyleCode 2 index def/mbc{bcarray StyleCode get}def/BuildChar{exch begin	wd begin/cr exch def/cs s1 dup 0 cr put def df /MFontType known not{df2 0 get null eq{df dup length 2 add dict begin{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall/StrokeWidth 1 0 FontMatrix idtransform pop dup nlw mul pys div ps div exch 0.012 mul 2 copy le{exch}if pop def/PaintType 2 def currentdict end/q exch definefont df2 exch 0 exch put}if}if mbc exec end end}def end mfont}ifelse3 index exch definefont exch pop}bdf
/mb{dup sbs kwn{0 2 index findfont newmm exch pop exch pop exch pop}ifelse sfd}bdf/mo{dup sos kwn{2 2 index findfont newmm exch pop exch pop exch pop}ifelse sfd}bdf/ms{dup sss kwn{4 2 index findfont newmm exch pop exch pop exch pop}ifelse sfd}bdf/ou{dup sos kwn{mfont/df2 known{mfont begin df2 0 null put end}if 3 2 index findfont newmm exch pop exch pop exch pop}ifelse sfd}bdf/su{dup sss kwn{mfont/df2 known{mfont begin df2 0 null put end}if 5 2 index findfont newmm exch pop exch pop exch pop}ifelse sfd}bdf/ao{/fmv true def ou}bdf/as{/fmv true def su}bdf/vo{/fmv false def ou}bdf/vs{/fmv false def su}bdf/c{currentrgbcolor dup 4 1 roll eq 3 1 roll eq and/gray xdf}bdf/bcarray[{/da .03 def df setfont gsave cs wi 1 index 0 ne{exch da add exch}if grestore setcharwidthcs 0 0 smc da 0 smc da da smc 0 da moveto show}bind dup{/da 1 ps div def df setfont gsave cs wi 1 index 0 ne{exch da add exch}if grestore setcharwidthcs 0 0 smc da 0 smc da da smc 0 da smc c gray{gl}{1 setgray}ifelse da 2. div dup moveto show}bind{df setfont gsave cs wi grestore setcharwidth c gray{gl}{currentrgbcolor 1 setgray}ifelse cs 0 0 smc df2 0 get setfontgray{gl}{4 1 roll setrgbcolor}ifelse 0 0 moveto show}bind{/da 1 ps div def/ds .05 def/da2 da 2. div def df setfont gsave cs wi 1 index 0 ne{exch ds add da2 add exch}if grestore setcharwidthcs ds da2 add .01 add 0 smc 0 ds da2 sub translate 0 0 smc da 0 smc da da smc 0 da smc c gray{gl}{1 setgray}ifelse da 2. div dup moveto show}bind{/da .05 def df setfont gsave cs wi 1 index 0 ne{exch da add exch}if grestore setcharwidth c cs da .01 add 0 smc 0 da translategray{gl}{currentrgbcolor 1 setgray 4 -1 roll}ifelse 0 0 smc gray{gl}{4 1 roll setrgbcolor}ifelse df2 0 get setfont 0 0 moveto show}bind]def
/st{1000 mul usertime add dup 2147483647 gt{2147483647 sub}if def}bdf/the{usertime sub dup 0 lt exch -2147483648 gt and}bdf/6a 6 array def/2a 2 array def/3q 3 array def/qs{3 -1 roll sub exch 3 -1 roll sub exch}bdf/qa{3 -1 roll add exch 3 -1 roll add exch}bdf/qm{3 -1 roll 1 index mul 3 1 roll mul}bdf/qn{6a exch get mul}bdf/qA .166667 def/qB .833333 def/qC .5 def/qx{6a astore popqA 0 qn qB 2 qn add   qA 1 qn qB 3 qn addqB 2 qn qA 4 qn add   qB 3 qn qA 5 qn addqC 2 qn qC 4 qn add   qC 3 qn qC 5 qn add}bdf/qp{6 copy 12 -2 roll pop pop}bdf/qc{exch qp qx curveto}bdf/qi{{exch 4 copy 2a astore aload pop qa .5 qm newpath moveto}{exch 2 copy 6 -2 roll 2 qm qs 4 2 roll}ifelse}bdf/qq{{qc 2a aload pop qx curveto}{exch 4 copy qs qa qx curveto}ifelse}bdf/pt{currentpoint newpath moveto}bdf/qf{/fillflag true def}bdf/ec{dup 4 and 0 ne{closepath}if 1 and 0 ne{0 doop}if grestore currentpoint newpath moveto/fillflag false def}bdf/eu{currentpoint fp{0 ep}{grestore newpath}ifelse moveto/fillflag false def}bdf/bp{currentpoint newpath 2 copy moveto}bdf/ef{gsave fillflag{gsave eofill grestore}if}bdf/sm{0 exch{@1 eq{1 add}if}forall}bdf/lshow{4 1 roll exch/@1 exch def{1 index wi pop sub 1 index sm dv 0 @1 4 -1 roll widthshow}{1 index wi pop sub1 index dup sm 10 mul exch length 1 sub add dv dup 10. mul 0 @1 4 -1 roll 0 6 -1 roll awidthshow}ifelse}bdf
/setTxMode{sa 9 2 index put exch not{3 eq{1}{0}ifelse setgray}{pop}ifelse}bdf/SwToSym{{}mark false/Symbol/|______Symbol 0 rf 0 sa 6 get 0 ne{pop 1}{sa 7 get 0 eq{pop 2}if}ifelsesa 1 get 0 ne/|______Symbolsa 4 get 0 ne{vs}{sa 3 get 0 ne{vo}{fnt}ifelse}ifelse}bdf/mc{0 3 1 roll transform neg exch pop}bdf/ul{dup 0 ne sa 2 get 0 ne and{gsave 0 0/UnderlinePosition kif{mc}{ps -10 div}ifelse/UnderlineThickness kif{mc}{ps 15 div}ifelseabs setlinewidth neg rmovetosa 4 get 0 ne{gsave currentlinewidth 2. div dup rmoveto currentpoint newpath moveto2 copy rlineto stroke grestore}ifsa 3 get sa 4 get or 0 ne{gsave currentrgbcolor dup 4 1 roll eq 3 1 roll eq and{gl}{1 setgray}ifelse 2 copy rlineto stroke grestore rlineto strokepath nlw pys div setlinewidth}{rlineto}ifelsestroke grestore}{pop}ifelse}bdf/sgt{2 copy known{get true}{pop pop false}ifelse}bdf/kif{currentfont dup/FontMatrix get exch/FontInfo sgt{true}{currentfont/df sgt{dup/FontInfo sgt{3 1 roll/FontMatrix get mtx concatmatrix exch true}{pop pop pop false}ifelse}{pop pop false}ifelse}ifelse{3 -1 roll sgt{exch true}{pop false}ifelse}{false}ifelse}bdf
/blank/Times-Roman findfont/CharStrings get/space get def/macvec 256 array def/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USmacvec 0 32 getinterval astore popmacvec 32/Times-Roman findfont/Encoding get32 96 getinterval putinterval macvec dup 39/quotesingle put 96/grave put/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronmacvec 128 128 getinterval astore pop
{}mark true/Courier/|______Courier 0 rf{/Metrics 21 dict begin/zero 600 def/one 600 def/two 600 def/three 600 def/four 600 def/five 600 def/six 600 def/seven 600 def/eight 600 def/nine 600 def/comma 600 def/period 600 def/dollar 600 def/numbersign 600 def/percent 600 def/plus 600 def/hyphen 600 def/E 600 def/parenleft 600 def/parenright 600 def/space 600 defcurrentdict end def currentdict/UniqueID known{/UniqueID 16#800000 def}if/FontBBox FontBBox 4 array astore def}mark true/Helvetica/|______Seattle 1 rf
/oldsettransfer/settransfer load def/concatprocs{/proc2 exch cvlit def/proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putinterval newproc cvx}def/settransfer{currenttransfer concatprocs oldsettransfer}def/PaintBlack{%DMM {1 exch sub}settransfergsave newpath clippath 1 setgray fill grestore}def/od{(Rvd\001\001\000\000\177) fg copy pop txpose1 0 mtx defaultmatrix dtransform exch atan/pa exch defnewpath clippath mark{transform{itransform moveto}}{transform{itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf pop ct 39 0 put10 fz 0 fs 2 F/|______Courier fnt invertflag{%DMM PaintBlack {1 exch sub}settransfer %DMM }ifstatusdict/processcolors known{statusdict begin processcolors end 4 eq{/4colors true def}if}if}bdf/cd{}bdf/op{ invertflag{PaintBlack}if %DMM /sfl false def systemdict/currentcolorscreen known{dcfreq dcrot/dcspf load dmfreq dmrot/dmspf load dyfreq dyrot/dyspf loaddkfreq dkrot/dkspf load setcolorscreen}{freq rot/spf load setscreen}ifelse savescreen/ns false def/pm save def}bdf/cp{not{userdict/#copies 0 put}if ma 0 gt{{t1 the{exit}if}loop}if{/copypage load exec}{/showpage load exec}ifelse pm restore}bdf/px{0 3 1 roll tp tt}bdf/psb{/us save def}bdf/pse{us restore}bdf/ct 40 string def/nc{currentpoint initclip newpath gc{dup type dup/arraytype eq exch/packedarraytype eq or{exec}if}forall clip newpath moveto}def/kp{ct 0 2 index length 2 index 39 2 index put getinterval copy cvx exec mx3 currentmatrix pop}bdfendLW 1 eq userdict/a4small known not and{/a4small[[300 72 div 0 0 -300 72 div -120 3381]280 3255{statusdict/jobstate (printing) put 0 setblinkmarginsexch 196 add exch 304 add 8 div round cvi frametoroketstatusdict/jobstate (busy) put1 setblink}/framedevice load60 45{dup mul exch dup mul add 1.0 exch sub}/setscreen load{}/settransfer load/initgraphics load/erasepage load]cvxstatusdict begin bind end readonly def}ifdmd710 %DMM%DMM md begin/bigs[lnop userdict/letter known{/letter load}{lnop}ifelse userdict/legal known{/legal load}{lnop}ifelse userdict/a4 known{/a4 load}{lnop}ifelse userdict/b5 known{/b5 load}{lnop}ifelse lnop lnop lnop /tab load/a3Size load]def/smalls[lnop userdict/lettersmall known{/lettersmall load}{userdict/note known{/note load}{lnop}ifelse}ifelseuserdict/legal known{/legal load}{lnop}ifelse userdict/a4small known{/a4small load}{lnop}ifelse userdict/b5 known{/b5 load}{userdict/note known{/note load}{lnop}ifelse}ifelse lnop lnop lnop /tab load/a3Size load]def endsystemdict/currentpacking known{setpacking}if{currentfile eexec} ( %endeexec) ok userdict/stretch known not and checkload
373A767D4B7FD94FE5903B7014B1B8D3BED02632C855D56F458B118ACF3AF73FC4EF5E81F5749042B5F9CF1016D093B75F250B7D8280B2EACE05A37037F7BDF6E12226D7D4E2DF2C52FAFD5FD40FE72A0D3AC4BD485D8369D4C87636E920D1DAF222D92155A9CB1667E715F0B82799B37CC8F5B32B74B39CF494536DC39C7EF04A7BCB29E2CEC79073CADCCFB23B4AA1363F876F5121B618071B7B4EB1E5DE75FAA2368A3E5DB2B198623AFE92AE9484270FE7F57A850E88C0D3EEA156611C91D8E480D4370B025CCA6929A2BF40AD3D01B2CB7EE6DFB46E12A830542337F7819B67F9765210F76DB06F34DA5B13A11759305C582E16D2B854939F6D9121F2A4F285282F5DCD3D15896D121E3D6F5BE79E087451BB0ED233CDBEF090D3B4AC2DC34B97E70C61D95FB072B8C12D2ABD843520949A39DCF99E2C1AA8FBCD025E47E0A82A8D96E75BAF40F52AD402495BBD4DE0F356C8B14E764874E639C9F045A0D1908EC6456EB6C5B8A6F826192F767EF2C55A21C58F5F9CC1F59247B55F2387828C7FE89D5E7D8484D1BC86CB6673BDBE4FE17DD9BDE95224FE645136F41330BF155A4DDE1B0A32233BF471CE58FBC660DC7E641B0A0D30018454E2191C414A3011FF3FED1C0D88FE1FF9F75DCC456D097947226FBEC92509146D3A4CFFC0471B31C53222ED9DD88566F60F6C0D705AD79DACF53B070026F083ED28B5CF757AAA0A169F6F320A75E9D2ED50ABD939AF85B6346C2ADB25D168F10508E1516D194C635E6B187FADEA0829DBF0390C0F003F0265E215BC96CA3CC13D4A8E01570BE193CA75A620728CD275ACF1986EFFB3A13419FE55EA7C4467B7E7EEDC1FC29C9F8C46A557D2CCDB914EF7B93E7530D555DFC2398AFC68CAD991F062EF85BAA1
884EC166C7C5DF8543666D8C41BE267D706BD1588F1F662F705CAE4D29DC38EF66BFAA89470D8A099B6F1B4587F7B024412276106FCD3EB5AE17A5D1DF1781992DC40EA0A992F706F701304CEA9D9073E7A74F1E687D81C3E5841D31CF86855BAAAD9B5D30317C75150A857C6B114735315CDD1AEF36C26BBB0645499406DEE2F24B3B1C72FEC97C7BA31AA2CDAB25418BB1DC4C7E4757F1D625087B0FD0300C03A65F2A72CE734925735277E034CDCF599129679F70CC8B66E03878851DB75041F275E1E5761F3EC753BE1359CA364A22047AE4886217F9259FE19FF5B116E8019B98B143114B313E8BEF87EC949D85C82E0812E6F50525E73890AF362CC8EE8A85F4197E6AC18638EF12E56A808D439AF1BFD363F140314BF4E534485C42F1856688CC35288E8D770120A420FB9F1FCF8AE8BD6D6156CC23E6C51119FE4DE1B68C9DF3487E9974BF9ED31F8D3CE93FF101867319F2FF492D5D398B4F09A66F2F55BCAB34B99173B7EE89039D00DD21A7B3A52E9F028F8301B5FC12D409412E064513BC579AAC498F577EA8ECD1FE3E42DC3CC320786C7B00194FEDF344402C33FC492D4BA86992B01683F440220FFE756BC88A94223D316078D69D33560E8EAB76B24CB7AA4320CF435593D76F624324ABE00B5587A4F283C725EA24567133F25F472B5E2E4474DDB5A16AC5F2DF32350395D3E3892FE361F4D5C9A610C654C9227614FBBAFF3356A90A2266E00F66234061075491571A65616211257F16
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
 %endeexec
{currentfile eexec} ( %endeexec) ok userdict/smooth4 known not and checkload
F94E00EE41A71C59E5CAEED1EDBCF23D1DBA1EE99B9BB356492923BD8B1BA83A87CEB0E07377A31FD6241E814681118E17DC7CACE570399506E6E441B871B6043831BD03EFC11DBBD8001EE2FF8CFBD485065D455A2E15AC36F1A84AD8789FA6461199C7CD14CB9FD64D4B06452B7FC0A8FC263F70F1CCB893295D4DE70ADAB771C0F84396FA98C60B11DA02ABA157298DF0A23621853BEF167443A985ADC09BEFFD51CB4D29179E2B34609EF38A49DA61F4BFC256A3DE0732D7D29754A194857B9C9E9971227AA1DD0611FBB10E44E5FF66C062D9C24ED3290529330BC317825E876929582DB0E39B9FC5EFD20CC1D4F94920EB9C534D0DA90DE70D25BC7287319CF28602B3F46633C242CAFC8905E960317E3C2FA20AB8DB06ADBAF292FC7BA2CA14EE65DF28B99CC11666B70AD33E8E1D57D63D4B89ECC615AE5747C1CA752C833D8D6DE54CD4A0350B44310555CE3BD2C615ADD27B634CDB350AF3A432CE78AACD2909A5B586F666CD87919A36DB1CBE86B3CE281DFD01CD7E1B8A18A4B415CECBFF79A5C4390A15EA77D14D6BE12BAB5A8268C3F286D0590060647CABED674443CD258F11415E866AB330A251691B61F2422A61AFE59B6B4FBDCF85ED9BA0F8E483C034089E6877FF5923698D3A0DC0EED6B9CFD32DF0839BC4EA5F6D1FCB6DD0920391E57E84745131D02D100179F4E0A68EC0A5FF6680A6F463D038B04AF63FFA13D743B995A26A743C26D387209023C91DE43DF047A16F328AC9DDC08573B38BE9EA341EA16C78EC32F3A1B36B90D95A50610F4D050EC1C33497F3F3A81A1B4C8BEF0BA84EE2FAA32DC112DAC490AF53E1749C4A0D866CAF7B893E52383B0D38065C333FB122B700D7246F7EE87D942AE3DB5C1DD77E9E76C80CC5AD

406C317E58EC563E7C26149A2A3C643ADFB39A8DD92974C6D2A2A9D7B71CDF3FEBBF32BB02E7B45CF53AAEAD5E963A4AA4AF9A149A08A4EC303D5F2369977E93F54897EEAD31B06C5845D63F49D65F8E5573962241A57CCD717CE6CA8C784A11192943616EA059B51BC38429E18D0121FCBB6FBD5D909B0D89E616C66DEF6A0F165A7030BD911A1B120468329CBB006C8D37720E531CF31E878CB4AAAC137633675C3D546F5162487AB35F470C042BDEB945E0F2532BF92AA6FD53434440221ECD3533A7AA89900CB19EFE2CD872DF8B7969AF0D3B72BF31DC5DD69CA6460966F61AB17CB507964098DBA3AF122EEC3128A9BAFE1034493F372B36BD1351205E9043A67C544402D8BCE24358C8A5CE33867A00794CF7097D59C88279A11EE9C854E7E7AAE881F9828C569D208F5F33375F59E9A3818CFA38AAD0CBFBA32F9F44A8BB79DE4C40E3886457C16DA4A27953AA1E99472E35F2323F0BAA5E37DC28CBA46FEFB73B190016055ADD4D27615D748499A0E1C4B8C7EC339C1C4D95A813A85918A8D01EEB485DDCDCEA6EA3F2C2A9D85C139CD90CCB352634F9AFE836BCAC0C274E352BA2071B5269D5DE4CCDE3FF990CBA974980C7332AE1545A9C60D5D1459D3AE95C1AC065733AF14FADB440A110DD539563B8D850CD0704C52F3F7CCCB53630D776560CBD22D8FF08F5B354487A171AEC15F5F54DE9CAB668BCAC573E788D92762EF63E76087005F4AC2D02E0CAC173C11BE62ACE5DC4D3374F2F9746C9981E125FF9AB8CAE76D13039E2C54DFD708E028A619EA1ED78E6B46F06DF0D0B74BBEDD8C190C7C0CEBDE8F7A4888CC36575313478DD2CFE392E9BB7B2416955D44B7024A3BA43FBF37293B386D64746D7748895411D243FAEC50638F2AA33
337D7FA018ADDAC5835A0DDFAE99AD6299DFB4CA6872C59853E3AC12FC9E3D26629C5B49CF844C87B3C4BFBE3074E3A1CE6984758C20C661084381CD6B4582D84F19C0000B5FC0DCB42B567E396031601C095D7016283EBE5F13CD8A3A374A74DDBBABD36081149F8BC242085F2F7297CC97FD3B8BAD206D8AC9707A39ECCC7963B522E08DA391A1EF12DD4D746DBDDDCC0834F88160CF189A9645567CEC2F023A571AF0DFD15DB85B744C28C000DF53B05F8F210841F6E87A04F20C777B7C0BE6182BE2E90226E5301A12532A745F2FAAA81637CF11B78CD2B99A4D18B862D6C5DBD31793FB16A2D9AAD376D4484D75AA833D0068B1D34DB74E3302480854E3B5484D8A47E39A89A2FA927BC3641EA7F8E004FDE4C2F08D40D99F1ACB47CAF6887629BF6DFE12968D297596D28CE0CF148B12E7DCB49FB94F5ADBD214C3A6CE1E249831BA9EB8A189F2CE1ABE39A7B537253E369A508A2AF2ADB9463F9B56BBBFF31D535FF997F537C6675C196E7ECBD493F652FA7CC6D9C1CA3379BFDB5AF7513C6E834054494296B91A6EE800114363D5D5D0759F41B4DECB653B9DE3E94583579EF549ED5F3FAFB12661ABC0C57A332406517ED3454EDED34B386C60F78DC976266E0EAF54FC245FB0E3EFC8016236436B599C1C97A8C5E0AC8F7836161873C71F01ED9CC25C236420F41FD8277993D3959205912FA0927B59E3DAE7377D82079447D6E41EE5AEC0DFFF79AF8F4ED47F17EE708FEA45877860D56F8CBCE65A061E8E1CA4A5FBAF0E13429A7F0ADB6F178FA449F46CC539BBC0107E3A53B1C362A04B20E6D721E7E6E1E4976A11DDC98C7614D22B53DFBB6DAE533AC9BE882021A735C30DAA4A44AED09F49A390E8CFF59BD9C30667AF21B03EC5CEBD5C2C
3AA2769E8D714191A48E7DDF50B13D1560E82EFB65FCE601AE9E8C351FBA1DED80B7351314E7F9F9A784BFE3759B7E322A84E7B51F9DC5F5D9C8050CD79B27C0A4B0DD68A3C27A948AD6858E35B960D2DEA838C479CAEA83B1A912174ACB2100E55E7A14892D7A9B3711FF0B20065C1995B49E1F23464A92DD140642E3A7B1973849E64D1A3CF6
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
 %endeexec

 %endappledict
%%EndProcSet
%%BeginProcSet: "dmm-nup" 3 0userdict/dcheckload 2 copy known{pop pop}{{{pop exec}{save 3 dict begin/rb 6050 string def exch /es exch def {currentfile rb readline not{stop}if es eq{exit}if}loop end restore pop} ifelse}bind put}ifelse{} ( %enddmmnupdict)vmstatus pop pop 0 gt userdict /DMM-nup-pre known not ordcheckloadsystemdict/setpacking known{currentpacking true setpacking}ifuserdict/DMM-nup-pre{systemdict beginuserdict begin/DMM-nup-dict 60 dict defDMM-nup-dict begin/T true def/F false def/xdf{exch def}bind def/dfont xdf/draft xdf/pbgray xdf/noclip xdf/flipit xdf/lscape xdf/xpose xdf/lps-pp xdf/outlinefont{5 dict begin/strokeweight exch def/newfontname exch def/basefontname exch def/basefontdict basefontname findfont def/outfontdict basefontdict maxlength 2 add dict defbasefontdict{exch dup/FID ne{exch outfontdict 3 1 roll put}{pop pop}ifelse}foralloutfontdict/BaseFontName basefontname putoutfontdict/FontNamenewfontname putoutfontdict/PaintType 2 putoutfontdict/StrokeWidth strokeweight putnewfontname outfontdict definefont popend}bind defuserdict/DMM-outlinefont/outlinefont load put/draft-span-pct 60 def/draftbar{FontDirectory/DMM-DraftFont known{/DMM-DraftFont findfont/BaseFontName 2 copy known{get dfont exec ne}{T}ifelse}{T}ifelse{dfont exec/DMM-DraftFont 0.2 outlinefont}ifuserdict/DMM-draft known{/draft userdict/DMM-draft get def}ifgsave/DMM-DraftFont findfont dup setfontdraft-span-pct 100 div dup 1 exch sub 2 divlp-wid dup mul lp-hgt dup mul add sqrtlp-hgt lp-wid atan rotatedup 3 -1 roll mul 0 movetomul draft exec stringwidth pop div dup 3 1 roll scalefont setfont-.35 mul 0 exch rmovetodraft exec showgrestore}bind deflps-pp 1 eq{/realshowpage/showpage load defuserdict/showpage{DMM-nup-dict begingsavedraft exec length 0 gt{initgraphicsnewpath clippath pathbbox newpath3 -1 roll add/lp-hgt exch defadd/lp-wid exch defflipit{lp-wid lp-hgt translate 180 rotate}if
draftbar}ifgrestorerealshowpageend}bind put/finish{userdict begin/showpage/realshowpage load defend}bind defend}{userdict/DMM-nup-state 10 dict dup begin put/pp-num 0 def/lp-num 0 def/Pstate matrix def/Lstate matrix def/oldLstate matrix def/Cstate matrix def/Tstate matrix def/ppstr 15 string def/did-showpage F defend/statusdict where{pop}{userdict/statusdict 1 dict put}ifelsestatusdict/product known{statusdict/product get (Ghostscript) anchorsearchexch pop dup{exch pop}if}{F}ifelse/ghost xdf/errordictbug F defghost{systemdict/version get exec token{exch pop}{0}ifelsedup 2.2 lt{pop/errordictbug T def/gs-copydict 20 dict defgs-copydict begin/arraytype{dup length array copy}bind def/booleantype{}def/dicttype{dup maxlength dict copy}bind def/filetype{}def/fonttype{}def/integertype{}def/marktype{}def/nametype{}def/nulltype{}def/operatortype{}def/packedarraytype{dup length packedarray copy}bind def/realtype{}def/savetype{}def/stringtype{dup length string copy}bind defenduserdict/save{/DMM-nup-state where{dup/DMM-nup-dict get/gs-copydict get begin/DMM-nup-state get dup maxlength dict exch{2 index 3 1 roll dup type exec put}forallend}{null}ifelsesystemdict/save get exec2 array astore}bind putuserdict/restore{dup type/arraytype ne{systemdict/restore get exec}{aload 0 null putsystemdict/restore get execdup null ne{/DMM-nup-state where{/DMM-nup-state 3 -1 roll put}if}{pop}ifelse}ifelse}bind put}{pop save pop}ifelse}if{/realinitclip/initclip load def/realinitmatrix/initmatrix load def/realinitgraphics/initgraphics load def/realshowpage/showpage load def/realrestore/restore load def/realgrestore/grestore load def/realgsave/gsave load def/realerasepage/erasepage load defstatusdict/setpapertray 2 copy known{get/realsetpapertray exch def}{pop pop}ifelse/setpagedevice dup where{exch get/realsetpagedevice xdf}{pop}ifelse/currentpagedevice dup where{exch get/realcurrentpagedevice xdf}{pop}ifelse
}execuserdict/initclip{DMM-nup-dict dup/realinitclip get exec/noclip get not{DMM-nup-dict/errordictbug get{{currentpoint}stopped{0 0}if}{errordict/nocurrentpoint geterrordict/nocurrentpoint{pop 0 0}putcurrentpointerrordict/nocurrentpoint 5 -1 roll put}ifelsecurrentlinewidthDMM-nup-state/Tstate get currentmatrixDMM-nup-state/Pstate get setmatrix0.3 setlinewidthDMM-nup-state/Lstate get setmatrixnewpathDMM-nup-dict/lp-wid getDMM-nup-dict/lp-hgt get0 exch movetodup 0 rlineto0 lineto0 0 linetoclosepathclipnewpathsetmatrixsetlinewidthmoveto}if}bind putuserdict/initmatrix{DMM-nup-state/Lstate get setmatrix}bind putuserdict/initgraphics{DMM-nup-dict/realinitgraphics get exec initmatrix initclip}bind putuserdict/erasepage{DMM-nup-dict/realgsave get execinitclip1 setgraynewpath clippath fillDMM-nup-dict/realgrestore get exec}bind putuserdict/showpage{DMM-nup-dict begin T lshowpage end}bind putuserdict/restore{DMM-nup-state/pp-num get exchDMM-nup-state/lp-num get exchDMM-nup-dict/realrestore get execDMM-nup-state/lp-num 2 copy get 4 1 roll 2 index put eq exchDMM-nup-state/pp-num 2 copy get 4 1 roll 2 index put eq and not{DMM-nup-dict beginF lshowpageend}if}bind putuserdict/grestore{DMM-nup-dict/realgrestore get execDMM-nup-state/did-showpage get{DMM-nup-state begin oldLstate Lstate copy pop endDMM-nup-dict begin F lshowpage end}if}bind putuserdict/gsave{DMM-nup-state/did-showpage false putDMM-nup-dict/realgsave get exec}bind put{/setpagedevice where{popuserdict/setpagedevice{DMM-nup-state begin pp-num 0 eq lp-num 0 eq and endDMM-nup-dict begin{realsetpagedevice realinitgraphics setpaper ppdict begin pp-w pp-h endtrue}{dup/PageSize known dup{exch/PageSize get aload pop 3 -1 roll}if}ifelse{setpage}{pop}ifelse end}bind put}if/currentpagedevice where{popuserdict/currentpagedevice{DMM-nup-dict beginrealcurrentpagedevicedup/PageSize known{
dup length dict copy dup/PageSize [ lp-wid lp-hgt ] put readonly}ifend}bind put}if}exec/finish{DMM-nup-state beginlp-num 0 gt{emitppage}ifenduserdict begin/initclip/realinitclip load def/initmatrix/realinitmatrix load def/initgraphics/realinitgraphics load def/showpage/realshowpage load def/restore/realrestore load def/grestore/realgrestore load def/gsave/realgsave load def/erasepage/realerasepage load defstatusdict/setpapertray 2 copy known{/realsetpapertray load put}{pop pop}ifelseuserdict/setpagedevice 2 copy known{/realsetpagedevice load put}{pop pop}ifelseuserdict/currentpagedevice 2 copy known{/realcurrentpagedevice load put}{pop pop}ifelseend}bind def/lshowpage{DMM-nup-state beginTstate currentmatrix Lstate Cstate invertmatrix Cstate concatmatrix popdup/did-showpage xdfdup{Lstate oldLstate copy popdraft exec length 0 gt{initgraphicsdraftbar}if/lp-num lp-num 1 add deflp-num lps-pp eq{emitppage}ifPstate setmatrixlporiginitgraphicsrealgsave}{Pstate setmatrixlporiginitclip}ifelseCstate concatendfixnasties{realgrestore}if}bind def/nulljobname (\(From out of the blue\274\)) def/pagetext (Page ) def/emitppage{/lp-num 0 def/pp-num pp-num 1 add defpbgray exec dup 0.0 ge exch 1.0 le and{realgsavePstate setmatrixrealinitclip{}settransfer pbgray exec setgraynewpath0.3 setlinewidth0 1 lp-row{lp-hgt lp-scl mul mul 0 exch movetolp-col lp-wid lp-scl mul mul 0 rlineto}for0 1 lp-col{lp-wid lp-scl mul mul 0 moveto0 lp-row lp-hgt lp-scl mul mul rlineto}forstrokeDMM-nup-dict/hfont known not{DMM-nup-dict/hfont dfont put}ifDMM-nup-dict/nohead known{nohead exec}{F}ifelse not{lscape{90 rotate 0}{lp-row lp-hgt mul}ifelselp-scl mul 3 add 0 exch movetohfont exec findfont 8 scalefont setfontrealgsavenulljobname execstatusdict/jobname known{statusdict/jobname get dup type/stringtype eq{exch}ifpop}ifshowrealgrestorelscape{lp-row lp-hgt}{lp-col lp-wid}ifelselp-scl mul mul 0 rmovetopp-numppstr cvs dup stringwidth neg exch neg exch rmoveto
currentpoint 3 -1 roll show movetopagetext exec dup stringwidth neg exch neg exch rmoveto show}ifrealgrestore}ifrealshowpage}bind def/lporig{lp-scl dup scalexpose lscape xor{lp-num lp-col mod lp-wid mul lp-num lp-col idiv}{lp-num lp-row idiv lp-wid mul lp-num lp-row mod}ifelselscape{lp-row 1 sub exch sub}if1 add neg lp-row add lp-hgt mul translateLstate currentmatrix pop}bind def/fixnasties{[ /TeXDict/TeXdict/TexDict/Texdict/texdict ] {dup where{exch getdup/Mtrx known{/Mtrx get currentmatrix}if}if pop}forall}bind def/setlayout{dup 16 gt exch 0 lt or{/lps-pp 1 def}if[ {} 1 1 1 2 2 2 2 2 3 3 3 3 3 3 3 4 ] lps-pp get exec[ {} 1 2 3 2 3 3 4 4 3 4 4 4 5 5 5 4 ] lps-pp get execppdict begin/lp-col-orig xdf/lp-row-orig xdflps-pp 0 eq{DMM-nup-dict/lps-pp lp-row-orig lp-col-orig mul put}ifend}bind def/setpaper{ppdict beginnewpath clippath pathbbox newpath pipppp-w pp-h gt{0 pp-h translate -90 rotate pi-lly pi-llx pi-ury pi-urx pipp}ifpp-matrix currentmatrix poppbgray exec dup 0.0 ge exch 1.0 le and{/pi-mar 12 def/pp-mar 36 def}{/pi-mar 0 def/pp-mar 36 def}ifelse/li-llx pi-llx pi-mar add defli-llx pp-mar lt{/li-llx pp-mar def}if/li-lly pi-lly pi-mar add defli-lly pp-mar lt{/li-lly pp-mar def}if/li-urx pi-urx pi-mar sub defli-urx pp-w pp-mar sub gt{/li-urx pp-w pp-mar sub def}if/li-ury pi-ury pi-mar sub defli-ury pp-h pp-mar sub gt{/li-ury pp-h pp-mar sub def}if/li-w li-urx li-llx sub def/li-h li-ury li-lly sub defend/lp-wid -1 def/lp-hgt -1 def}bind def/setpage{ppdict begin/lp-h xdf/lp-w xdflp-h -1 eq lp-w -1 eq and{save exchrealinitgraphicsstatusdict/papertray get exec exchrealsetpapertraynewpath clippath pathbbox6 -2 roll realsetpapertrayrealrestore3 -1 roll add/lp-h xdf add/lp-w xdf}iflp-w lp-wid sub abs 5.0 gt lp-h lp-hgt sub abs 5.0 gt orend{DMM-nup-state beginlp-num 0 gt{emitppage}ifendppdict beginlp-row-orig lp-col-origlp-w lp-h gt end{/lp-row xdf/lp-col xdf}{/lp-col xdf/lp-row xdf}ifelse
ppdict beginDMM-nup-dict/portpp lp-w lp-col mul lp-h lp-row mul le put/ll-w/ll-h portpp{exch}iflp-w lp-col mul deflp-h lp-row mul defDMM-nup-dict/lp-sclli-h ll-h div li-w ll-w div 2 copy gt{exch}if pop putpp-matrix setmatrixportpp not lscape and{pp-w pp-h translate 180 rotate}ifli-w ll-w lp-scl mul sub 2 div li-llx addli-h ll-h lp-scl mul sub 2 div li-lly addtranslateportpp not{ll-w lp-scl mul 0 translate 90 rotate}ifDMM-nup-dict/lp-wid lp-w putDMM-nup-dict/lp-hgt lp-h putendDMM-nup-state beginPstate currentmatrix poplporiginitclipflipit{lp-wid lp-hgt translate 180 rotate}ifend}if}bind def{/ppdict 30 dict defppdict begin/pp-matrix matrix def/pipp{/pi-ury xdf/pi-urx xdf/pi-lly xdf/pi-llx xdf/pp-w pi-urx pi-llx add def/pp-h pi-ury pi-lly add def}bind defendlps-pp setlayoutsetpaperppdict begin pp-w pp-h end setpage}execend8 dict begin{/in{72 mul}bind def/mm{72 25.4 div mul}bind def/str 40 string def/ft{exch str cvs length dup str exch (tray) putinterval4 add str exch 0 exch getinterval cvnstatusdict 1 index known{statusdict exch[ {DMM-nup-state begin pp-num 0 eq lp-num 0 eq and endDMM-nup-dict begin}/exec load[ /-realtray-{exec realinitgraphics setpaperppdict begin pp-w pp-h end}/exec load ] cvx[ /-w-/-h- ] cvx{ifelse setpage end}/exec load ]dup 2 get 0 4 index 4 index get putdup 3 get 0 6 -1 roll putintervalcvx put}{pop pop}ifelse}bind def/pa{2 copyuserdict 3 1 roll[ {DMM-nup-dict begin}/exec load/-w-/-h-{setpage end}/exec load ]dup 2 4 -1 roll putintervalcvx putft}bind def/pn{1 index where{pop pa}{pop pop}ifelse}bind def}exec{/setpaper [ -1 -1 ] ft/letter [ 8.5 in 11 in ] pa/legal [ 8.5 in 14 in ] pa/executivepaper [ 7.25 in 10.5 in ] pn/11x17 [ 11 in 17 in ] pa/ledger [ 11 in 17 in ] pn}exec
{/a0 [ 841 mm 1189 mm ] pn/a1 [ 594 mm 841 mm ] pn/a2 [ 420 mm 594 mm ] pn/a3 [ 297 mm 420 mm ] pa/a4 [ 210 mm 297 mm ] pa/a5 [ 148 mm 210 mm ] pn/a6 [ 105 mm 148 mm ] pn/a7 [ 74 mm 105 mm ] pn/a8 [ 52 mm 74 mm ] pn/a9 [ 37 mm 52 mm ] pn/a10 [ 26 mm 37 mm ] pn}exec{/b0 [ 1000 mm 1414 mm ] pn/b1 [ 707 mm 1000 mm ] pn/b2 [ 500 mm 707 mm ] pn/b3 [ 353 mm 500 mm ] pn/b4 [ 250 mm 353 mm ] pn/b5 [ 176 mm 250 mm ] pa/b6 [ 125 mm 176 mm ] pn/b7 [ 88 mm 125 mm ] pn/b8 [ 62 mm 88 mm ] pn/b9 [ 44 mm 62 mm ] pn/b10 [ 31 mm 44 mm ] pn}exec{/c0 [ 914.4 mm 1300.5 mm ] pn/c1 [ 650.2 mm 914.4 mm ] pn/c2 [ 457.2 mm 650.2 mm ] pn/c3 [ 325.1 mm 457.2 mm ] pn/c4 [ 228.6 mm 325.1 mm ] pn/c5 [ 162.6 mm 228.6 mm ] pn/c6 [ 114.3 mm 162.6 mm ] pn/c7 [ 81.3 mm 114.3 mm ] pn}execend{/lettersmall/letter load def/note/letter load def/a4small/a4 load defstatusdict/setpage known{statusdict/setpage{pop DMM-nup-dict begin setpage end}bind put}ifstatusdict/setpageparams known{statusdict/setpageparams{pop pop DMM-nup-dict begin setpage end}bind put}if}exec/md where{/md get type/dicttype eq{md/cp known{md/cp{pop{copypage}{showpage}ifelse pm restore}put}ifmd/nc known{md/nc{currentpoint initclip newpath moveto}put}ifmd/bigs known md/smalls known or{md begin[ lnop/letter load/legal load/a4 load/b5 load lnop lnop lnop/11x17 load/a3 load ] dup/bigs xdf/smalls xdfend}if}if}if}ifelseend end}putuserdict/DMM-nup-post{DMM-nup-dict begin finish end}bind putsystemdict/setpacking known{setpacking}if
 %enddmmnupdict
%%EndProcSet
%%IncludeProcSet: "(AppleDict md)" 71 0/dmd710 where{/md /dmd710 load put md /initud get exec}if %DMM%%BeginProcSet: "(DMMAppleFix md)" 2 1/showpage load type /operatortype ne{md begin/cp{pop{copypage}{showpage}ifelse pm restore}def/nc{currentpoint initclip newpath moveto}bind def/smalls[smalls{pop lnop}forall]def/bigs[bigs{pop lnop}forall]def/jn{/statusdict where exch pop{statusdict /jobname 2 copy known dup{not 3 copy pop get dup type /stringtype eq{length 0 gt{not}if}{pop}ifelse}if {pop pop pop}{3 -1 roll put}ifelse}if}bind defend}if%%EndProcSet
%%IncludeProcSet: "dmm-nup" 3 0md beginmd /od 2 copy getuserdict /DMM-nup-pre known{md /cd 2 copy get {DMM-nup-post} bind concatprocs put{userdict /#copies 2 copy known {2 copy get 3 1 roll 1 put}{pop pop 1} ifelseinvertflag /invertflag F def /dbinvertflag F defpor notduptso not /tso so defdup {-1}{0} ifelse() /Helvetica-BoldDMM-nup-pre}}{{userdict /#copies 1 put /invertflag F def /dbinvertflag F def /tso so def}} ifelsebind exch concatprocs putend
%%EndProlog%%BeginDocumentSetupmd beginF sgdsvscT T 0 0 781 538 -30 -28 811 566 100 72 72 3 F F F F T T T F psu(Stuart Wheater; document: Configuring III - Numbered)jn0 mfod%%EndDocumentSetup%%Page: ? 1op0 0 781 538 fr0 0 xl1 1 pen62 60 gm(nc 0 0 781 538 6 rc)kpF 1 setTxMode1 fsbu fc%%BeginFont: Times-Bold%%IncludeFont: Times-Boldbn%%EndFontbu fc{}mark T /Times-Bold /|______Times-Bold 0 rfbn18 fzbu fc2 F /|______Times-Bold fntbn3.06243 0. 32 0.30624 0.(Configuring Distributed Applications using Object)awidthshow80 62 gm3.01727 0. 32 0.30172 0.(Decomposition in an Atomic Action Environment)awidthshow0 -3 rm0 fsbu fc%%BeginFont: Times-Roman%%IncludeFont: Times-Romanbn%%EndFontbu fc{}mark T /Times-Roman /|______Times-Roman 0 rfbn9 fzbu fc2 F /|______Times-Roman fntbn(*)show108 225 gm12 fzbu fc2 F /|______Times-Roman fntbn-0.12303 0.(Stuart M. Wheater)ashow123 228 gm-0.18879 0.(Daniel L. McCue)ashow153 213 gm-0.06570 0.(Computing Laboratory,)ashow168 182 gm-0.03900 0.(University of Newcastle upon Tyne.)ashow195 245 gm1 fsbu fc2 F /|______Times-Bold fntbn0.33514 0.(Abstract)ashow222 44 gm0 fsbu fc2 F /|______Times-Roman fntbn-0.02030 0.(A common technique for constructing reliable distributed applications is to use atomic actions)ashow237 44 gm1.56463 0. 32 0.15646 0.(for controlling operations on persistent objects.  Atomic actions are used to ensure that)awidthshow252 44 gm1.48849 0. 32 0.14884 0.(inconsistencies in application state do not arise when failures occur or when concurrent)awidthshow267 44 gm0.02136 0. 32 0.00213 0.(activities operate on shared objects.  Within such an application, objects provide a convenient)awidthshow282 44 gm-0.06164 0.(unit for distribution and concurrency-control.  The properties of atomic actions and objects can)ashow297 44 gm1.57714 0. 32 0.15771 0.(be exploited together to configure distributed applications, without affecting the correct)awidthshow312 44 gm0.36026 0. 32 0.03602 0.(functioning of the application.  This leads to the possibility of changing the configuration of)awidthshow327 44 gm2.04910 0. 32 0.20491 0.(concurrency and distribution of the distributed application to improve availability and)awidthshow342 44 gm0.22109 0. 32 0.02210 0.(performance.  These changes in concurrency and distribution can be achieved by varying the)awidthshow357 44 gm0.49194 0. 32 0.04919 0.(object decomposition within the application.  In this paper, we show how some kinds of re-)awidthshow372 44 gm2.64556 0. 32 0.26455 0.(configuration can be achieved without any modification to client applications.  The)awidthshow387 44 gm1.05072 0. 32 0.10507 0.(observations are a result of constructing reliable distributed applications using the Arjuna)awidthshow402 44 gm-0.03881 0.(system, which provides tools and libraries for programming with atomic actions and persistent)ashow417 44 gm0.04013 0. 32 0.00401 0.(objects in C++.)awidthshow444 44 gm1 fs14 fzbu fc2 F /|______Times-Bold fntbn2.50003 0.(1.)ashow444 80 gm0.61503 0.(Introduction)ashow468 44 gm0 fs12 fzbu fc2 F /|______Times-Roman fntbn1.96548 0. 32 0.19654 0.(One of the major concerns in the construction of reliable applications in a distributed)awidthshow483 44 gm-0.06700 0.(environment to do with the maintenance of the consistency of an application's state, despite the)ashow498 44 gm2.40768 0. 32 0.24076 0.(failure of components \(hardware or software\).  One technique, which has been used)awidthshow513 44 gm-0.04241 0.(successfully for constructing particular classes of reliable distributed applications, is the use of)ashow528 44 gm2 fsbu fc%%BeginFont: Times-Italic%%IncludeFont: Times-Italicbn%%EndFontbu fc{}mark T /Times-Italic /|______Times-Italic 0 rfbnbu fc2 F /|______Times-Italic fntbn0.18280 0. 32 0.01828 0.(atomic actions)awidthshow0 fsbu fc2 F /|______Times-Roman fntbn0.10787 0. 32 0.01078 0.( [1].  Applications which have been found suitable for the use of atomic action)awidthshow543 44 gm0.82305 0. 32 0.08230 0.(are those which must process complex operations on persistent data concurrently, such as:)awidthshow558 44 gm-0.06938 0.(banking systems and airline seat reservation systems.)ashow585 44 gm0.00564 0. 32 0.00056 0.(One way of structuring applications using atomic actions, which has been advocated by many)awidthshow600 44 gm0.02655 0. 32 0.00265 0.(research projects, for example, Argus [2], Arjuna [3], Avalon/C++ [4], Clouds [5] and ANSA)awidthshow615 44 gm0.92025 0. 32 0.09202 0.([6], is for atomic actions to operate on persistent objects.  Persistent objects being objects)awidthshow630 44 gm-0.13989 0.(which still exist after the application which created them has terminated.)ashow657 44 gm0.39230 0. 32 0.03923 0.(When constructing such an application, two of the most critical sets of design decisions that)awidthshow672 44 gm-0.17269 0.(need to be made are:)ashow-4126 -4124 gm0 gr-4125 -4123 lin6 25 lw700 44 gm700 187 lin25 6 lw1 1 lw728 44 gmF 1 setTxMode9 fzbu fc2 F /|______Times-Roman fntbn(*)show0 3 rm10 fzbu fc2 F /|______Times-Roman fntbn-0.00767 0.( Appeared in the Proceedings of the IEE Workshop on Configurable Distributed Systems, London, March 1992)ashowF T cp%%Page: ? 2op30 28 811 566 fr0 0 xl1 1 pen81 72 gm(nc 30 28 811 566 6 rc)kpF 1 setTxMode0 fs12 fzbu fc2 F /|______Times-Roman fntbn-0.33006 0.(i\))ashow81 108 gm2 fsbu fc2 F /|______Times-Italic fntbn-0.19636 0.(Atomic action structure)ashow0 fsbu fc2 F /|______Times-Roman fntbn(:)show81 252 gm3.42407 0. 32 0.34240 0.(How should the operations of the application be)awidthshow96 72 gm0.53573 0. 32 0.05357 0.(decomposed into atomic actions?  Should a number of atomic actions be grouped within an)awidthshow111 72 gm0.66787 0. 32 0.06678 0.(enclosing atomic action \(nesting\)?  Which atomic actions can be run concurrently?  Which)awidthshow126 72 gm-0.11958 0.(atomic actions must finish before others can be started?)ashow153 72 gm-0.33203 0.(ii\))ashow153 108 gm2 fsbu fc2 F /|______Times-Italic fntbn-0.16041 0.(Object decomposition)ashow0 fsbu fc2 F /|______Times-Roman fntbn(:)show153 252 gm0.56472 0. 32 0.05647 0.(How should the application's state be decomposed into)awidthshow168 72 gm1.18179 0. 32 0.11817 0.(objects? Which objects should be decomposed into sub-objects?  What operations do the)awidthshow183 72 gm0.74752 0. 32 0.07475 0.(objects have?  Should a sub-object be independently concurrency-controlled, or should the)awidthshow198 72 gm0.98800 0. 32 0.09880 0.(concurrency-control applied to the container object also control access to \(all of the\) sub-)awidthshow213 72 gm-0.12074 0.(objects?  On which node should each object reside?)ashow240 72 gm-0.00193 0.(Some aspects of the behaviour of such applications, such as performance and availability, can)ashow255 72 gm0.88851 0. 32 0.08885 0.(be altered by changing the atomic action structure and/or the object decomposition. These)awidthshow270 72 gm-0.11294 0.(alterations in the configuration of the application should not affect the correct functioning of the)ashow285 72 gm0.08956 0. 32 0.00895 0.(application.  However, apart from minor changes in the scope of an atomic action, the atomic)awidthshow300 72 gm-0.01605 0.(action structure cannot generally be changed without altering the semantics of the application.)ashow315 72 gm0.31829 0. 32 0.03182 0.(Hence, there is little scope for re-configuration by modification of the action structure.  This)awidthshow330 72 gm2.44415 0. 32 0.24441 0.(paper is focused on describing the kinds of changes that can be made to the object)awidthshow345 72 gm-0.03018 0.(decomposition of the application, which do not alter the correct functioning of the application.)ashow360 72 gm0.63766 0. 32 0.06376 0.(These changes to the object decomposition can be used to reconfigure the concurrency and)awidthshow375 72 gm2.07504 0. 32 0.20750 0.(distribution of the application thereby improving its overall availability, reliability, or)awidthshow390 72 gm-0.05702 0.(performance.)ashow417 72 gm1 fs14 fzbu fc2 F /|______Times-Bold fntbn2.50003 0.(2.)ashow417 108 gm4.33105 0. 32 0.43310 0.(Atomic actions)awidthshow441 72 gm0 fs12 fzbu fc2 F /|______Times-Roman fntbn-0.13389 0.(Distributing applications creates new opportunities which are not always available in centralised)ashow456 72 gm1.38275 0. 32 0.13827 0.(applications.  Such applications can be designed to utilize the concurrency inherent in a)awidthshow471 72 gm0.02075 0. 32 0.00207 0.(distributed environment.  Also, distributed applications can take advantage of the fact that the)awidthshow486 72 gm1.62918 0. 32 0.16291 0.(failure of a single hardware component is unlikely to cause the complete failure of the)awidthshow501 72 gm-0.08601 0.(distributed environment.)ashow528 72 gm0.58563 0. 32 0.05856 0.(These opportunities con also give rise to problems for the designers of an application.  The)awidthshow543 72 gm0.28488 0. 32 0.02848 0.(concurrency within an application must be managed to ensure the application's state remains)awidthshow558 72 gm0.13259 0. 32 0.01325 0.(consistent.  Component faults that cause part of the distributed environment to fail could also)awidthshow573 72 gm-0.07849 0.(give rise to inconsistencies in an application's state unless steps were taken to prevent them.)ashow600 72 gm-0.06620 0.(Atomic actions provide a mechanism which addresses these two problems.  Atomic actions aid)ashow615 72 gm-0.14190 0.(maintenance of a consistent application state due to their properties of:)ashow637 72 gm2 fsbu fc2 F /|______Times-Italic fntbn-0.23274 0.(Serialisability)ashow0 fsbu fc2 F /|______Times-Roman fntbn(:)show637 180 gm0.15441 0. 32 0.01544 0.(Concurrently executing atomic actions do not interfere with each other)awidthshow652 180 gm0.65902 0. 32 0.06590 0.(\(i.e., their concurrent execution will produce the same effect as some)awidthshow667 180 gm-0.08464 0.(serial order execution\).)ashow684 72 gm2 fsbu fc2 F /|______Times-Italic fntbn-0.28186 0.(Failure atomicity)ashow0 fsbu fc2 F /|______Times-Roman fntbn(:)show684 180 gm0.23559 0. 32 0.02355 0.(Atomic actions will either terminate normally \()awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.06549 0.(commit)ashow0 fsbu fc2 F /|______Times-Roman fntbn0.24246 0. 32 0.02424 0.(\), producing the)awidthshow699 180 gm-0.10037 0.(intended effects or producing no effects \()ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.11077 0.(abort)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.14903 0.(\).)ashow716 72 gm2 fsbu fc2 F /|______Times-Italic fntbn-0.12680 0.(Permanence of effect)ashow0 fsbu fc2 F /|______Times-Roman fntbn(:)show716 180 gm-0.04641 0.(Any effects produced by an atomic action which has terminated, are not)ashow731 180 gm-0.10044 0.(lost due to later component failures.)ashowF T cp%%Page: ? 3op30 28 811 566 fr0 0 xl1 1 pen81 72 gm(nc 30 28 811 566 6 rc)kpF 1 setTxMode0 fs12 fzbu fc2 F /|______Times-Roman fntbn0.41748 0. 32 0.04174 0.(Atomic actions can be combined with other fault tolerance mechanisms to cope with a wide)awidthshow96 72 gm-0.01918 0.(range of failures, such as hardware and software design errors, but in the rest of this paper, we)ashow111 72 gm0.36041 0. 32 0.03604 0.(consider the use of atomic actions only to tolerate fail-stop faults i.e., faulty components are)awidthshow126 72 gm0.41702 0. 32 0.04170 0.(silent, and operations performed in isolation in the absence of any faults will be regarded as)awidthshow141 72 gm-0.06365 0.(always producing consistent state changes.)ashow168 72 gm-0.08006 0.(Given that an application is constructed using atomic actions which perform certain operations,)ashow183 72 gm-0.10238 0.(it is sometimes necessary to combine these atomic operation sequences to form larger operation)ashow198 72 gm1.10610 0. 32 0.11061 0.(sequences, which are also required to be atomic [7].  The resulting larger atomic action's)awidthshow213 72 gm-0.06304 0.(effects being some combination of the effects of the atomic actions from which it is composed.)ashow228 72 gm-0.08865 0.(The atomic actions which are contained within the resulting atomic action are said to be )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.10417 0.(nested,)ashow243 72 gm0 fsbu fc2 F /|______Times-Roman fntbn0.58334 0. 32 0.05833 0.(and the resulting action is referred to as the )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.19422 0.(enclosing)ashow0 fsbu fc2 F /|______Times-Roman fntbn0.79269 0. 32 0.07926 0.( atomic action. The enclosing atomic)awidthshow258 72 gm-0.10977 0.(action is sometimes referred to as the )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.12310 0.(parent)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.09918 0.( of the )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.12045 0.(nested)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.09428 0.( or )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.11312 0.(child)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.12092 0.( atomic action. The outermost)ashow273 72 gm-0.15556 0.(atomic action in an atomic action structure is called a )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.15713 0.(top-level)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.17080 0.( atomic action.)ashow300 72 gm-0.07115 0.(Nested atomic actions differ from top-level atomic actions in that the effects of a nested atomic)ashow315 72 gm-0.01225 0.(action will be recovered if the enclosing atomic action aborts, even if the nested atomic action)ashow330 72 gm-0.02316 0.(has committed.  This is required to ensure the failure atomicity of the enclosing atomic action.)ashow345 72 gm0.34637 0. 32 0.03463 0.(Also, to maintain the serialisability of the enclosing atomic action, the locks obtained by the)awidthshow360 72 gm-0.12278 0.(nested atomic actions which commit, must be inherited by their enclosing atomic action.)ashow387 72 gm0.16067 0. 32 0.01606 0.(Figure 1, shows a pictorial representation of an enclosing atomic action )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.06230 0.(A)ashow0 fsbu fc2 F /|______Times-Roman fntbn0.16464 0. 32 0.01646 0.( which contains the)awidthshow402 72 gm-0.04092 0.(nested atomic actions )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.06207 0.(B)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.03950 0.( and )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.06777 0.(C)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.04090 0.(, where atomic action )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.06207 0.(B)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.04351 0.( must be completed before atomic action)ashow417 72 gm2 fsbu fc2 F /|______Times-Italic fntbn-0.09696 0.(C)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.05812 0.( can be started.)ashow343 71 gm(nc 432 179 504 414 6 rc)kp32 gr342 70 lin% P2-v15 - Copyright 1988 Silicon Beach Software, Inc.userdict/md known{currentdict md eq}{false}ifelse{bu}if currentdict/P2_d known not{/P2_b{P2_dbegin}bind def/P2_d 27 dict def userdict/md known{currentdict md eq}{false}ifelse P2_b dup dup/mk exch def{md/pat known md/sg known md/gr known and and}{false}ifelse/pk exch def{md/setTxMode known}{false}ifelse/sk exch def/b{bind def}bind def/sa{matrix currentmatrix P2_tpconcat aload pop}b/sb{matrix currentmatrix exch concat P2_tp matrix invertmatrix concat aloadpop}b/se{matrix astore setmatrix}b/bb{gsave P2_tp concat newpath moveto}b/bc{curveto}b/bl{lineto}b/bx{closepath}b/bp{gsave eofill grestore}b/bf{scale 1 setlinewidth stroke}b/be{grestore}b/p{/gf false def}b/g{/gf true def}b g pk{/_pat/pat load def/_gr/gr load def}{/_gr{64.0 div setgray}b}ifelse sk{/_sTM/setTxMode load def}if/gx{/tg exch def}b 0 gx/x6{av 68 gt{false}if}b end P2_b pk end{/pat{P2_b gf{end pop sg av 68 gt{pop}if}{/_pat load end exec}ifelse}bind def}{/pat{P2_b pop _gr end}bind def}ifelse P2_b sk end{/setTxMode{P2_b/_sTM loadend exec P2_b tg/_gr load end exec}bind def}{/setTxMode{pop P2_b tg/_gr load end exec}binddef}ifelse}if0 0 pen433 180 gm432 179 lin9 90 1 index neg 1 index neg matrix translate 3 1 rollcurrentpoint 2 copy matrix translate 6 1 roll503 413 gm504 414 lin244 162 currentpoint 1 index 6 index sub 4 index 9 index sub div1 index 6 index sub 4 index 9 index sub divmatrix scale 11 1 roll[ 9 1 roll cleartomark3 2 roll matrix concatmatrixexch matrix concatmatrix/P2_tp exch def P2_b mk end{bn}if1 1 pen343 71 gm342 70 lin64 gr432 206 504 386 1 ov0 gr432.5 206.5 503.5 385.5 0 ov64 gr450 233 486 287 1 ov0 gr450.5 233.5 485.5 286.5 0 ov64 gr450 305 486 359 1 ov0 gr450.5 305.5 485.5 358.5 0 ov468 179 gm468 233 lin468 287 gm468 305 lin468 359 gm468 413 linP2_b 0 gx x6 end 1 setTxMode453 292 gmF 1 setTxMode(A)showP2_b 0 gx x6 end 1 setTxMode473 256 gm(B)showP2_b 0 gx x6 end 1 setTxMode471 330 gm(C)show528 275 gm(nc 30 28 811 566 6 rc)kp0.37216 0. 32 0.03721 0.(Figure 1.)awidthshow555 72 gm0.15487 0. 32 0.01548 0.(The design of an application's atomic action structure is mostly governed by the application's)awidthshow570 72 gm1.23275 0. 32 0.12327 0.(requirements and how the application's state has been decomposed into objects [8].  The)awidthshow585 72 gm0.97686 0. 32 0.09768 0.(application's requirements generally leave little scope for reconfiguring the application by)awidthshow600 72 gm-0.12789 0.(changing the atomic action structure.)ashow627 72 gm1 fs14 fzbu fc2 F /|______Times-Bold fntbn2.50003 0.(3.)ashow627 108 gm4.84146 0. 32 0.48414 0.(Object-oriented programming)awidthshow651 72 gm0 fs12 fzbu fc2 F /|______Times-Roman fntbn-0.03051 0.(The basic concept in object-oriented programming is support of the abstraction of )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.03074 0.(objects)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.03746 0.(.  An)ashow666 72 gm1.13327 0. 32 0.11332 0.(object is an entity with some internal state which can only be manipulated using a set of)awidthshow681 72 gm0.94696 0. 32 0.09469 0.(operations provided by the object.  Objects provide a form of )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn1.66870 0. 32 0.16687 0.(data abstraction)awidthshow0 fsbu fc2 F /|______Times-Roman fntbn0.68298 0. 32 0.06829 0.( in that the)awidthshow696 72 gm-0.09802 0.(internal state of the object, and the implementation of the set of operations need not concern the)ashow711 72 gm-0.04428 0.(users of the object; they need only understand the behaviour of its operations.  In many object-)ashow726 72 gm1.83105 0. 32 0.18310 0.(oriented programming languages, the definition of the objects is given using the )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.57073 0.(class)ashow741 72 gm0 fsbu fc2 F /|______Times-Roman fntbn-0.00883 0.(construct.  Thus objects are instances of the corresponding classes.  The classes can be related)ashowF T cp%%Page: ? 4op30 28 811 566 fr0 0 xl1 1 pen81 72 gm(nc 30 28 811 566 6 rc)kpF 1 setTxMode0 fs12 fzbu fc2 F /|______Times-Roman fntbn0.20843 0. 32 0.02084 0.(through inheritance to form higher level abstraction, but this inheritance capability of object-)awidthshow96 72 gm-0.08218 0.(oriented programming languages is of secondary importance to the discussion that follows.)ashow123 72 gm0.44342 0. 32 0.04434 0.(Because the object model completely encapsulates the internal implementation of an object,)awidthshow138 72 gm-0.02334 0.(objects are well suited to constructing reconfigurable applications.  The implementation of the)ashow153 72 gm0.88836 0. 32 0.08883 0.(object can be reconfigured without affecting its users, as long a the interface to the object)awidthshow168 72 gm-0.13043 0.(remains unchanged both syntactically and semantically.)ashow193 72 gm1 fsbu fc2 F /|______Times-Bold fntbn1.99996 0.(3.1.)ashow193 108 gm3.56674 0. 32 0.35667 0.(Object decomposition)awidthshow216 72 gm0 fsbu fc2 F /|______Times-Roman fntbn0.24017 0. 32 0.02401 0.(In the initial stages of designing an application, a designer must decide how the application's)awidthshow231 72 gm-0.04595 0.(state should be decomposed into objects, what operations these objects provide, and how these)ashow246 72 gm1.38885 0. 32 0.13888 0.(objects are decomposed into further objects [9].  These decisions will vary greatly from)awidthshow261 72 gm0.10620 0. 32 0.01062 0.(designer to designer.  What is of more interest as far as configuration is concerned is how the)awidthshow276 72 gm0.11535 0. 32 0.01153 0.(resulting abstractions provided by the objects can be used for reconfigured.  If objects are the)awidthshow291 72 gm0.12771 0. 32 0.01277 0.(units of concurrency-control, distribution, recovery and persistence, the decomposition of the)awidthshow306 72 gm-0.14495 0.(application state into objects constitutes a configuration)ashow327 72 gm1.04019 0. 32 0.10401 0.(Two important properties which can be varied by altering the object decomposition of an)awidthshow342 72 gm2.14080 0. 32 0.21408 0.(application to create a new configuration are its concurrency-control and distribution.)awidthshow357 72 gm0.63934 0. 32 0.06393 0.(Concurrency-control ensures the serialisability of concurrent atomic actions acting upon an)awidthshow372 72 gm0.33813 0. 32 0.03381 0.(object.  Distribution specifies where the object \(and it's sub-objects\) are located.  In the next)awidthshow387 72 gm-0.11819 0.(sections these topics will be examined in more detail.)ashow412 72 gm1 fsbu fc2 F /|______Times-Bold fntbn1.99996 0.(3.2.)ashow412 108 gm3.34777 0. 32 0.33477 0.(Object concurrency-control)awidthshow435 72 gm0 fsbu fc2 F /|______Times-Roman fntbn-0.04110 0.(A simple way to provide serialisability for concurrent atomic actions within an object-oriented)ashow450 72 gm0.53390 0. 32 0.05339 0.(environment, would be for the operations of an object to acquire an appropriate lock on the)awidthshow465 72 gm0.46661 0. 32 0.04666 0.(object.  This approach maintains the encapsulation of many implementation details \(e.g. the)awidthshow480 72 gm-0.09176 0.(type of lock required read or write\) of the object.  The encapsulation of an object means that it's)ashow495 72 gm0.64620 0. 32 0.06462 0.(concurrency-control behaviour \(and it's sub-objects\) can be refined, without affecting other)awidthshow510 72 gm-0.12684 0.(objects in the application.)ashow537 72 gm0.79910 0. 32 0.07991 0.(The concurrency-control, can be implemented so that the object \(and its sub-objects\) are a)awidthshow552 72 gm0.22521 0. 32 0.02252 0.(single concurrency-controlled entity, or implemented as numerous individually concurrency-)awidthshow567 72 gm-0.09114 0.(controlled objects.)ashow594 72 gm0.65917 0. 32 0.06591 0.(For the purposes of explanation, consider a queue object, which contains banking requests,)awidthshow609 72 gm-0.08871 0.(and provides operations to:)ashow631 72 gm(\245)show631 108 gm-0.09109 0.(Remove a request from the head of the queue.)ashow648 72 gm(\245)show648 108 gm-0.11248 0.(Add a request to the tail of the queue.)ashow665 72 gm(\245)show665 108 gm-0.08053 0.(Apply operations to requests within the queue.)ashow687 72 gm0.25482 0. 32 0.02548 0.(For example, the queue could apply an operation which obtained the account numbers of the)awidthshow702 72 gm-0.02334 0.(bank accounts involved in a request, or altered the amounts involved in a request. The internal)ashow717 72 gm0.03356 0. 32 0.00335 0.(sub-objects of the queue are the banking requests in the queue, and the objects which indicate)awidthshow732 72 gm-0.11576 0.(the head and the tail of the queue.)ashowF T cp%%Page: ? 5op30 28 811 566 fr0 0 xl1 1 pen81 72 gm(nc 30 28 811 566 6 rc)kpF 1 setTxMode0 fs12 fzbu fc2 F /|______Times-Roman fntbn0.88760 0. 32 0.08876 0.(The queue object could be implemented so that it and each individual request object were)awidthshow96 72 gm3.69308 0. 32 0.36930 0.(independently concurrency-controlled entities \(depicted in figure 2\).  In such an)awidthshow111 72 gm-0.08187 0.(implementation, the operations of the queue object which operated on the bank requests, would)ashow126 72 gm0.73226 0. 32 0.07322 0.(acquire a read lock on the queue object, then invoke the appropriate operation on the bank)awidthshow141 72 gm-0.10008 0.(request object. The bank request operation would then acquire the appropriate lock on its object)ashow156 72 gm0.06072 0. 32 0.00607 0.(to perform  the operation.  Because such operations would not necessitate acquiring a lock on)awidthshow171 72 gm1.17568 0. 32 0.11756 0.(the head or tail objects within the queue, they could be performed concurrently with, for)awidthshow186 72 gm-0.08137 0.(example, an operation which added a new request to the queue.)ashow194 187 gm(nc 201 248 295 345 6 rc)kp32 gr194 187 lin% P2-v15 - Copyright 1988 Silicon Beach Software, Inc.userdict/md known{currentdict md eq}{false}ifelse{bu}if currentdict/P2_d known not{/P2_b{P2_dbegin}bind def/P2_d 27 dict def userdict/md known{currentdict md eq}{false}ifelse P2_b dup dup/mk exch def{md/pat known md/sg known md/gr known and and}{false}ifelse/pk exch def{md/setTxMode known}{false}ifelse/sk exch def/b{bind def}bind def/sa{matrix currentmatrix P2_tpconcat aload pop}b/sb{matrix currentmatrix exch concat P2_tp matrix invertmatrix concat aloadpop}b/se{matrix astore setmatrix}b/bb{gsave P2_tp concat newpath moveto}b/bc{curveto}b/bl{lineto}b/bx{closepath}b/bp{gsave eofill grestore}b/bf{scale 1 setlinewidth stroke}b/be{grestore}b/p{/gf false def}b/g{/gf true def}b g pk{/_pat/pat load def/_gr/gr load def}{/_gr{64.0 div setgray}b}ifelse sk{/_sTM/setTxMode load def}if/gx{/tg exch def}b 0 gx/x6{av 68 gt{false}if}b end P2_b pk end{/pat{P2_b gf{end pop sg av 68 gt{pop}if}{/_pat load end exec}ifelse}bind def}{/pat{P2_b pop _gr end}bind def}ifelse P2_b sk end{/setTxMode{P2_b/_sTM loadend exec P2_b tg/_gr load end exec}bind def}{/setTxMode{pop P2_b tg/_gr load end exec}binddef}ifelse}if0 0 pen202 249 gm201 248 lin22 14 1 index neg 1 index neg matrix translate 3 1 rollcurrentpoint 2 copy matrix translate 6 1 roll294 344 gm295 345 lin215 201 currentpoint 1 index 6 index sub 4 index 9 index sub div1 index 6 index sub 4 index 9 index sub divmatrix scale 11 1 roll[ 9 1 roll cleartomark3 2 roll matrix concatmatrixexch matrix concatmatrix/P2_tp exch def P2_b mk end{bn}if1 1 pen194 187 gm194 187 lin64 gr208 248 295 345 8.5 8.5 1 rr0 gr208.5 248.5 294.5 344.5 8.5 8.5 0 rr64 gr227 299 234 338 8.5 8.5 1 rr0 gr227.5 299.5 233.5 337.5 8.5 8.5 0 rr64 gr220 306 230 331 1 rc0 gr220.5 306.5 229.5 330.5 0 rcP2_b 0 gx x6 end 1 setTxMode18255 25958 9176 13046 th227 311 gmtu(nc 201 248 228 345 6 rc)kptsF 1 setTxMode10.87005 fzbu fc2 F /|______Times-Roman fntbn3.09829 0. 32 0.30982 0.(Req 1)awidthshowtu(nc 201 248 295 345 6 rc)kp64 gr248 299 255 338 8.5 8.5 1 rr0 gr248.5 299.5 254.5 337.5 8.5 8.5 0 rr64 gr241 306 252 331 1 rc0 gr241.5 306.5 251.5 330.5 0 rcP2_b 0 gx x6 end 1 setTxModets249 311 gmtu(nc 201 248 250 345 6 rc)kptsF 1 setTxMode3.09829 0. 32 0.30982 0.(Req 2)awidthshowtu(nc 201 248 295 345 6 rc)kp64 gr201 255 216 281 1 rc0 gr201.5 255.5 215.5 280.5 0 rcP2_b 0 gx x6 end 1 setTxModets210 259 gmtu(nc 201 248 213 345 6 rc)kptsF 1 setTxMode13.04406 fzbu fc2 F /|______Times-Roman fntbn0.98999 0.(Queue)ashowtu(nc 201 248 295 345 6 rc)kp64 gr227 256 234 291 8.5 8.5 1 rr0 gr227.5 256.5 233.5 290.5 8.5 8.5 0 rr64 gr220 263 230 284 1 rc0 gr220.5 263.5 229.5 283.5 0 rcP2_b 0 gx x6 end 1 setTxModets227 267 gmtu(nc 201 248 228 345 6 rc)kptsF 1 setTxMode10.87005 fzbu fc2 F /|______Times-Roman fntbn1.02278 0.(Head)ashowtu(nc 201 248 295 345 6 rc)kp64 gr248 255 256 291 8.5 8.5 1 rr0 gr248.5 255.5 255.5 290.5 8.5 8.5 0 rr64 gr241 262 252 284 1 rc0 gr241.5 262.5 251.5 283.5 0 rcP2_b 0 gx x6 end 1 setTxModets249 268 gmtu(nc 201 248 250 345 6 rc)kptsF 1 setTxMode0.83183 0.(Tail)ashowtu(nc 201 248 295 345 6 rc)kp0 gr266 316 270 320 1 ov266.5 316.5 269.5 319.5 0 ov259 316 263 320 1 ov259.5 316.5 262.5 319.5 0 ov64 gr281 298 288 338 8.5 8.5 1 rr0 gr281.5 298.5 287.5 337.5 8.5 8.5 0 rr64 gr274 306 284 330 1 rc0 gr274.5 306.5 283.5 329.5 0 rcP2_b 0 gx x6 end 1 setTxModets281 310 gmtu(nc 201 248 282 345 6 rc)kptsF 1 setTxMode4.52697 0. 32 0.45269 0.(Req n)awidthshowtu313 275 gm(nc 30 28 811 566 6 rc)kp12 fzbu fc2 F /|______Times-Roman fntbn0.37216 0. 32 0.03721 0.(Figure 2.)awidthshow340 72 gm0.24871 0. 32 0.02487 0.(Alternatively, the queue object could be implemented so that it and all the individual request)awidthshow355 72 gm1.92077 0. 32 0.19207 0.(objects were a single concurrency-controlled entity \(depicted in figure 3\).  In such an)awidthshow370 72 gm-0.04985 0.(implementation, the operations of the queue object which operated on the bank requests would)ashow385 72 gm0.73226 0. 32 0.07322 0.(acquire a read lock on the queue object, then invoke the appropriate operation on the bank)awidthshow400 72 gm0.15655 0. 32 0.01565 0.(request object, as before. But, when the bank request operation acquires the lock, it would be)awidthshow415 72 gm2.82867 0. 32 0.28286 0.(placed on the queue object, not on the request object.  Because in this alternative)awidthshow430 72 gm0.23315 0. 32 0.02331 0.(implementation such operations would effectively acquire a lock on the head and tail objects)awidthshow445 72 gm-0.01324 0.(within the queue, any update operations, whether they were updating individual bank requests)ashow460 72 gm-0.07647 0.(or updating the queue structure, would be mutually exclusive.)ashow468 202 gm(nc 475 263 555 331 6 rc)kp32 gr468 201 lin% P2-v15 - Copyright 1988 Silicon Beach Software, Inc.userdict/md known{currentdict md eq}{false}ifelse{bu}if currentdict/P2_d known not{/P2_b{P2_dbegin}bind def/P2_d 27 dict def userdict/md known{currentdict md eq}{false}ifelse P2_b dup dup/mk exch def{md/pat known md/sg known md/gr known and and}{false}ifelse/pk exch def{md/setTxMode known}{false}ifelse/sk exch def/b{bind def}bind def/sa{matrix currentmatrix P2_tpconcat aload pop}b/sb{matrix currentmatrix exch concat P2_tp matrix invertmatrix concat aloadpop}b/se{matrix astore setmatrix}b/bb{gsave P2_tp concat newpath moveto}b/bc{curveto}b/bl{lineto}b/bx{closepath}b/bp{gsave eofill grestore}b/bf{scale 1 setlinewidth stroke}b/be{grestore}b/p{/gf false def}b/g{/gf true def}b g pk{/_pat/pat load def/_gr/gr load def}{/_gr{64.0 div setgray}b}ifelse sk{/_sTM/setTxMode load def}if/gx{/tg exch def}b 0 gx/x6{av 68 gt{false}if}b end P2_b pk end{/pat{P2_b gf{end pop sg av 68 gt{pop}if}{/_pat load end exec}ifelse}bind def}{/pat{P2_b pop _gr end}bind def}ifelse P2_b sk end{/setTxMode{P2_b/_sTM loadend exec P2_b tg/_gr load end exec}bind def}{/setTxMode{pop P2_b tg/_gr load end exec}binddef}ifelse}if0 0 pen476 264 gm475 263 lin23 14 1 index neg 1 index neg matrix translate 3 1 rollcurrentpoint 2 copy matrix translate 6 1 roll554 330 gm555 331 lin158 173 currentpoint 1 index 6 index sub 4 index 9 index sub div1 index 6 index sub 4 index 9 index sub divmatrix scale 11 1 roll[ 9 1 roll cleartomark3 2 roll matrix concatmatrixexch matrix concatmatrix/P2_tp exch def P2_b mk end{bn}if1 1 pen468 202 gm468 201 lin64 gr483 263 555 331 8.5 8.5 1 rr0 gr483.5 263.5 554.5 330.5 8.5 8.5 0 rr64 gr494 299 504 323 1 rc0 gr494.5 299.5 503.5 322.5 0 rcP2_b 0 gx x6 end 1 setTxMode31044 18157 15620 9146 th501 304 gmtu(nc 475 263 502 331 6 rc)kptsF 1 setTxMode10.87005 fzbu fc2 F /|______Times-Roman fntbn3.09829 0. 32 0.30982 0.(Req 1)awidthshowtu(nc 475 263 555 331 6 rc)kp64 gr508 299 519 323 1 rc0 gr508.5 299.5 518.5 322.5 0 rcP2_b 0 gx x6 end 1 setTxModets516 304 gmtu(nc 475 263 517 331 6 rc)kptsF 1 setTxMode3.09829 0. 32 0.30982 0.(Req 2)awidthshowtu(nc 475 263 555 331 6 rc)kp64 gr475 270 490 295 1 rc0 gr475.5 270.5 489.5 294.5 0 rcP2_b 0 gx x6 end 1 setTxModets484 273 gmtu(nc 475 263 487 331 6 rc)kptsF 1 setTxMode13.04406 fzbu fc2 F /|______Times-Roman fntbn0.98999 0.(Queue)ashowtu(nc 475 263 555 331 6 rc)kp64 gr494 270 504 291 1 rc0 gr494.5 270.5 503.5 290.5 0 rcP2_b 0 gx x6 end 1 setTxModets501 274 gmtu(nc 475 263 502 331 6 rc)kptsF 1 setTxMode10.87005 fzbu fc2 F /|______Times-Roman fntbn1.02278 0.(Head)ashowtu(nc 475 263 555 331 6 rc)kp64 gr508 269 519 291 1 rc0 gr508.5 269.5 518.5 290.5 0 rcP2_b 0 gx x6 end 1 setTxModets516 275 gmtu(nc 475 263 517 331 6 rc)kptsF 1 setTxMode0.83183 0.(Tail)ashowtu(nc 475 263 555 331 6 rc)kp0 gr530 309 533 313 1 ov530.5 309.5 532.5 312.5 0 ov523 309 526 313 1 ov523.5 309.5 525.5 312.5 0 ov64 gr536 298 547 323 1 rc0 gr536.5 298.5 546.5 322.5 0 rcP2_b 0 gx x6 end 1 setTxModets544 303 gmtu(nc 475 263 545 331 6 rc)kptsF 1 setTxMode4.52697 0. 32 0.45269 0.(Req n)awidthshowtu573 275 gm(nc 30 28 811 566 6 rc)kp12 fzbu fc2 F /|______Times-Roman fntbn0.37216 0. 32 0.03721 0.(Figure 3.)awidthshow598 72 gm1 fsbu fc2 F /|______Times-Bold fntbn1.99996 0.(3.3.)ashow598 108 gm2.73635 0. 32 0.27363 0.(Object distribution)awidthshow621 72 gm0 fsbu fc2 F /|______Times-Roman fntbn-0.00564 0.(Because objects provide data abstraction and encapsulation, object-oriented programming has)ashow636 72 gm-0.00569 0.(advantages when constructing distributed applications.  This is because the interface provided)ashow651 72 gm-0.08605 0.(by objects are a convenient boundary over which to provide service, whether local or remote.)ashow678 72 gm-0.07252 0.(The interface to an object specifies the operations which can be performed upon the object.  To)ashow693 72 gm0.70617 0. 32 0.07061 0.(allow these operations to be invoked remotely by a user of the object, a )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.21809 0.(stub)ashow0 fsbu fc2 F /|______Times-Roman fntbn0.67245 0. 32 0.06724 0.( object can be)awidthshow708 72 gm0.11581 0. 32 0.01158 0.(provided which has the same interface as the original object.  The implementation of the stub)awidthshow723 72 gm-0.04431 0.(object causes a remote procedure call [10] to invoke the operation on the original object which)ashow738 72 gm0.69061 0. 32 0.06906 0.(may reside on a remote node.  Figure 4 depicts a queue object which contains stub request)awidthshow753 72 gm-0.03759 0.(objects \(in grey\).)ashowF T cp%%Page: ? 6op30 28 811 566 fr0 0 xl1 1 pen0 0 gm(nc 0 0 0 0 6 rc)kp65 173 gm(nc 72 234 152 359 6 rc)kp32 gr65 172 lin% P2-v15 - Copyright 1988 Silicon Beach Software, Inc.userdict/md known{currentdict md eq}{false}ifelse{bu}if currentdict/P2_d known not{/P2_b{P2_dbegin}bind def/P2_d 27 dict def userdict/md known{currentdict md eq}{false}ifelse P2_b dup dup/mk exch def{md/pat known md/sg known md/gr known and and}{false}ifelse/pk exch def{md/setTxMode known}{false}ifelse/sk exch def/b{bind def}bind def/sa{matrix currentmatrix P2_tpconcat aload pop}b/sb{matrix currentmatrix exch concat P2_tp matrix invertmatrix concat aloadpop}b/se{matrix astore setmatrix}b/bb{gsave P2_tp concat newpath moveto}b/bc{curveto}b/bl{lineto}b/bx{closepath}b/bp{gsave eofill grestore}b/bf{scale 1 setlinewidth stroke}b/be{grestore}b/p{/gf false def}b/g{/gf true def}b g pk{/_pat/pat load def/_gr/gr load def}{/_gr{64.0 div setgray}b}ifelse sk{/_sTM/setTxMode load def}if/gx{/tg exch def}b 0 gx/x6{av 68 gt{false}if}b end P2_b pk end{/pat{P2_b gf{end pop sg av 68 gt{pop}if}{/_pat load end exec}ifelse}bind def}{/pat{P2_b pop _gr end}bind def}ifelse P2_b sk end{/setTxMode{P2_b/_sTM loadend exec P2_b tg/_gr load end exec}bind def}{/setTxMode{pop P2_b tg/_gr load end exec}binddef}ifelse}if0 0 pen73 235 gm72 234 lin23 14 1 index neg 1 index neg matrix translate 3 1 rollcurrentpoint 2 copy matrix translate 6 1 roll151 359 gm152 359 lin273 173 currentpoint 1 index 6 index sub 4 index 9 index sub div1 index 6 index sub 4 index 9 index sub divmatrix scale 11 1 roll[ 9 1 roll cleartomark3 2 roll matrix concatmatrixexch matrix concatmatrix/P2_tp exch def P2_b mk end{bn}if1 1 pen65 173 gm65 172 lin64 gr80 234 152 302 8.5 8.5 1 rr0 gr80.5 234.5 151.5 301.5 8.5 8.5 0 rr32 gr91.5 270.5 100.5 293.5 0 rc91.5 270.5 101.5 293.5 0 rcP2_b 0 gx x6 end 1 setTxMode31044 16812 15620 8406 th98 275 gmtu(nc 72 234 99 359 6 rc)kptsF 1 setTxMode0 fs10.87005 fzbu fc2 F /|______Times-Roman fntbn3.09829 0. 32 0.30982 0.(Req 1)awidthshowtu(nc 72 234 152 359 6 rc)kp32 gr105.5 270.5 115.5 293.5 0 rc105.5 270.5 115.5 293.5 0 rcP2_b 0 gx x6 end 1 setTxModets113 275 gmtu(nc 72 234 114 359 6 rc)kptsF 1 setTxMode3.09829 0. 32 0.30982 0.(Req 2)awidthshowtu(nc 72 234 152 359 6 rc)kp64 gr72 241 87 266 1 rc0 gr72.5 241.5 86.5 265.5 0 rcP2_b 0 gx x6 end 1 setTxModets81 244 gmtu(nc 72 234 84 359 6 rc)kptsF 1 setTxMode13.04406 fzbu fc2 F /|______Times-Roman fntbn0.98999 0.(Queue)ashowtu(nc 72 234 152 359 6 rc)kp64 gr91 241 101 262 1 rc0 gr91.5 241.5 100.5 261.5 0 rcP2_b 0 gx x6 end 1 setTxModets98 245 gmtu(nc 72 234 99 359 6 rc)kptsF 1 setTxMode10.87005 fzbu fc2 F /|______Times-Roman fntbn1.02278 0.(Head)ashowtu(nc 72 234 152 359 6 rc)kp64 gr105 240 116 262 1 rc0 gr105.5 240.5 115.5 261.5 0 rcP2_b 0 gx x6 end 1 setTxModets113 246 gmtu(nc 72 234 114 359 6 rc)kptsF 1 setTxMode0.83183 0.(Tail)ashowtu(nc 72 234 152 359 6 rc)kp0 gr127 280 130 284 1 ov127.5 280.5 129.5 283.5 0 ov120 280 123 284 1 ov120.5 280.5 122.5 283.5 0 ov32 gr133.5 269.5 143.5 293.5 0 rc133.5 269.5 143.5 293.5 0 rcP2_b 0 gx x6 end 1 setTxModets141 274 gmtu(nc 72 234 142 359 6 rc)kptsF 1 setTxMode4.52697 0. 32 0.45269 0.(Req n)awidthshowtu(nc 72 234 152 359 6 rc)kp64 gr91 335 101 359 1 rc0 gr91.5 335.5 100.5 358.5 0 rcP2_b 0 gx x6 end 1 setTxModets98 340 gmtu(nc 72 234 99 359 6 rc)kptsF 1 setTxMode3.09829 0. 32 0.30982 0.(Req 1)awidthshowtu(nc 72 234 152 359 6 rc)kp64 gr105 335 116 359 1 rc0 gr105.5 335.5 115.5 358.5 0 rcP2_b 0 gx x6 end 1 setTxModets113 340 gmtu(nc 72 234 114 359 6 rc)kptsF 1 setTxMode3.09829 0. 32 0.30982 0.(Req 2)awidthshowtu(nc 72 234 152 359 6 rc)kp0 gr127 345 130 349 1 ov127.5 345.5 129.5 348.5 0 ov120 345 123 349 1 ov120.5 345.5 122.5 348.5 0 ov64 gr133 334 144 359 1 rc0 gr133.5 334.5 143.5 358.5 0 rcP2_b 0 gx x6 end 1 setTxModets141 339 gmtu(nc 72 234 142 359 6 rc)kptsF 1 setTxMode4.52697 0. 32 0.45269 0.(Req n)awidthshowtu98 295 gm(nc 72 234 152 359 6 rc)kp32 gr98 328 linpr98 328 pl100 328 pl98 334 pl95 328 pl98 328 pl1 ep111 295 gm111 328 linpr111 328 pl114 328 pl111 334 pl109 328 pl111 328 pl1 ep140 295 gm140 328 linpr140 328 pl142 328 pl140 334 pl137 328 pl140 328 pl1 ep170 275 gm(nc 30 28 811 566 6 rc)kpF 1 setTxMode12 fzbu fc2 F /|______Times-Roman fntbn0.37216 0. 32 0.03721 0.(Figure 4.)awidthshow197 72 gm-0.10325 0.(The provision of stub objects can be automated by the use of a language specific )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.11614 0.(stub generator)ashow212 72 gm0 fsbu fc2 F /|______Times-Roman fntbn-0.09530 0.(\(for example [11]\).  A stub generator processes the interface of the original object and produces)ashow227 72 gm-0.00233 0.(an implementation of that interface \(the stub\) which )ashow2 fsbu fc2 F /|______Times-Italic fntbn(forwards)show0 fsbu fc2 F /|______Times-Roman fntbn-0.00234 0.( the operation invocations to the)ashow242 72 gm-0.09281 0.(object and reports the results back to the local user.)ashow269 72 gm0.78384 0. 32 0.07838 0.(The management of concurrency-control for a set of related objects and the distribution of)awidthshow284 72 gm1.71112 0. 32 0.17111 0.(objects \(and their sub-objects\) over a network of nodes in a distributed application are)awidthshow299 72 gm0.36651 0. 32 0.03665 0.(important aspects of the configuration of the application.  Different configurations will have)awidthshow314 72 gm0.50811 0. 32 0.05081 0.(different properties even though the overall semantics of the application remain unchanged.)awidthshow329 72 gm0.15472 0. 32 0.01547 0.(The following sections discuss the impact of changes in distribution and concurrency-control)awidthshow344 72 gm-0.11743 0.(and their implementation in a system of objects and actions.)ashow371 72 gm1 fs14 fzbu fc2 F /|______Times-Bold fntbn2.50003 0.(4.)ashow371 108 gm0.68449 0.(Configuration)ashow395 72 gm0 fs12 fzbu fc2 F /|______Times-Roman fntbn0.73181 0. 32 0.07318 0.(When designing any application to a given specification, trade-offs must be made between)awidthshow410 72 gm-0.07572 0.(different attributes for the application, such as performance and availability. If an application is)ashow425 72 gm-0.00865 0.(to be configurable, it will have to be designed so that these attributes can be changed at a later)ashow440 72 gm1.07162 0. 32 0.10716 0.(date, to take account of new priorities or circumstances, while still satisfying the original)awidthshow455 72 gm-0.13783 0.(functional specification of the application.)ashow482 72 gm0.50552 0. 32 0.05055 0.(Suppose all operations provided by a class of objects are performed as atomic actions.  The)awidthshow497 72 gm0.71380 0. 32 0.07138 0.(internal state of such objects would remain consistent, despite concurrency and component)awidthshow512 72 gm0.37246 0. 32 0.03724 0.(failures.  If the entire state of the application were composed of such objects, then the entire)awidthshow527 72 gm0.29464 0. 32 0.02946 0.(state of the application would be guaranteed to be consistent \(given that it has been assumed)awidthshow542 72 gm0.56243 0. 32 0.05624 0.(that the individual operations have been correctly programmed and only produce consistent)awidthshow557 72 gm0.10040 0. 32 0.01004 0.(state changes\).  By making all operations of all objects atomic actions, the location of objects)awidthshow572 72 gm-0.08209 0.(within the distributed environment becomes irrelevant to the users of those objects.  Even if the)ashow587 72 gm0.50292 0. 32 0.05029 0.(node on which an object resides crashes during one of its operations, the object will remain)awidthshow602 72 gm0.05355 0. 32 0.00535 0.(consistent.  The operations of objects can be implemented without worrying about concurrent)awidthshow617 72 gm0.39001 0. 32 0.03900 0.(invocation of other operations on the object, as long as the appropriate locks are acquired to)awidthshow632 72 gm0.41748 0. 32 0.04174 0.(ensure serialisability.  Hence, applications constructed using atomic actions for every object)awidthshow647 72 gm0.58944 0. 32 0.05894 0.(operation invocation will be transparently configurable in terms of their decomposition and)awidthshow662 72 gm-0.02796 0.(distribution.)ashow689 72 gm1 fs14 fzbu fc2 F /|______Times-Bold fntbn2.50003 0.(5.)ashow689 108 gm5.27359 0. 32 0.52735 0.(Configuration trade-offs)awidthshow713 72 gm0 fs12 fzbu fc2 F /|______Times-Roman fntbn-0.06523 0.(Performance and availability are key attributes of an application which are affected by changes)ashow728 72 gm0.08865 0. 32 0.00886 0.(in configuration.  Two aspects of the application's configuration which can be manipulated to)awidthshow743 72 gm-0.17732 0.(alter these attributes are:)ashowF T cp%%Page: ? 7op30 28 811 566 fr0 0 xl1 1 pen81 72 gm(nc 30 28 811 566 6 rc)kpF 1 setTxMode2 fs12 fzbu fc2 F /|______Times-Italic fntbn-0.18557 0.(Concurrency-control)ashow0 fsbu fc2 F /|______Times-Roman fntbn(:)show81 180 gm2.48641 0. 32 0.24864 0.(Whether an object and its sub-objects are a single concurrency-)awidthshow96 180 gm-0.14791 0.(controlled entity or maintain separate concurrency-control information)ashow113 72 gm2 fsbu fc2 F /|______Times-Italic fntbn-0.23733 0.(Distribution)ashow0 fsbu fc2 F /|______Times-Roman fntbn(:)show113 180 gm0.43838 0. 32 0.04383 0.(Where the objects of the application are located within the distributed)awidthshow128 180 gm-0.05915 0.(environment.)ashow150 72 gm0.06881 0. 32 0.00688 0.(Grouping an object and its sub-objects into a single concurrency-controlled entity will reduce)awidthshow165 72 gm-0.10015 0.(the level of concurrent processing possible on the object, because more operations on the object)ashow180 72 gm1.42501 0. 32 0.14250 0.(will be considered to be potentially interfering.  The effect of decreasing the amount of)awidthshow195 72 gm0.70831 0. 32 0.07083 0.(concurrency within an application could be to a reduce the performance of the application.)awidthshow210 72 gm2.87918 0. 32 0.28791 0.(However, this potential performance loss may be compensated for by reducing the)awidthshow225 72 gm1.97265 0. 32 0.19726 0.(considerable overhead involved with providing each individual sub-object with it own)awidthshow240 72 gm-0.00598 0.(concurrency-control.  So, if the operations of an object commonly use most of the sub-objects)ashow255 72 gm-0.10253 0.(and the object is not commonly used concurrently by atomic actions which could interfere, then)ashow270 72 gm0.85403 0. 32 0.08540 0.(there might be performance benefits gained by grouping an object and its sub-objects as a)awidthshow285 72 gm-0.10934 0.(single concurrency-controlled entity.)ashow312 72 gm-0.07492 0.(Apart from the overhead due to providing more advanced concurrency-control, there is another)ashow327 72 gm0.54962 0. 32 0.05496 0.(reason why increasing the potential concurrency within an application may not increase the)awidthshow342 72 gm-0.01266 0.(performance of the application: without appropriate load-balancing and distribution, increases)ashow357 72 gm0.54428 0. 32 0.05442 0.(in "possible" concurrency may not be realised since a set of potentially concurrent accesses)awidthshow372 72 gm0.31127 0. 32 0.03112 0.(may all be scheduled for a single \(uni-\) processor.  This problem can be reduced by locating)awidthshow387 72 gm0.43014 0. 32 0.04301 0.(objects which place large demands on the processor on different processors.  By identifying)awidthshow402 72 gm2.17208 0. 32 0.21720 0.(and relocating such objects, the potential concurrency might be exploited and overall)awidthshow417 72 gm0.56152 0. 32 0.05615 0.(performance of applications might be improved.  However, this solution introduces another)awidthshow432 72 gm-0.08491 0.(source of overhead: the relatively large cost involved in accessing remote objects.  These trade-)ashow447 72 gm-0.08325 0.(offs affecting the performance of applications are difficult to evaluate analytically.  This is why)ashow462 72 gm1.03210 0. 32 0.10321 0.(run-time configuration options are so important - they allow performance tuning after the)awidthshow477 72 gm-0.10060 0.(application has been developed, based on actual data.)ashow504 72 gm0.77697 0. 32 0.07769 0.(An example of an object which could improve the performance of an application by being)awidthshow519 72 gm0.86242 0. 32 0.08624 0.(located away from other objects is a directory service object.  Suppose a directory service)awidthshow534 72 gm0.35476 0. 32 0.03547 0.(object is used to locate other objects within an application.  It is possible that such an object)awidthshow549 72 gm0.70037 0. 32 0.07003 0.(will be constantly performing concurrent look-up operations \(which could be performed as)awidthshow564 72 gm-0.04141 0.(non-interfering atomic actions\).  Such an object would be used throughout an application, so it)ashow579 72 gm-0.07716 0.(may not be possible to locate it "close" to its users.)ashow606 72 gm-0.02276 0.(The location of the objects, within the distributed environment, will also affect the availability)ashow621 72 gm-0.08143 0.(of the application.  An increase in "distributedness" of the application can cause the availability)ashow636 72 gm1.46408 0. 32 0.14640 0.(to decrease because the application becomes dependent on other parts of the distributed)awidthshow651 72 gm0.33782 0. 32 0.03378 0.(environment operating without failure.  This effect can be reduced by replicating the objects)awidthshow666 72 gm0.81710 0. 32 0.08171 0.(\(for example [12]\), but replication will generally introduce overheads which may decrease)awidthshow681 72 gm-0.10224 0.(overall performance.)ashow708 72 gm-0.00965 0.(Applications which are distributed, in an environment which is not fully operational, may still)ashow723 72 gm0.43991 0. 32 0.04399 0.(be able to provide a part of their original functionality.  This means that distributing objects)awidthshow738 72 gm-0.14204 0.(within the application can improve the availability of parts of the application.)ashowF T cp%%Page: ? 8op30 28 811 566 fr0 0 xl1 1 pen84 72 gm(nc 30 28 811 566 6 rc)kpF 1 setTxMode1 fs14 fzbu fc2 F /|______Times-Bold fntbn2.50003 0.(6.)ashow84 108 gm3.47045 0. 32 0.34704 0.(Example application: Theatre seat reservation)awidthshow108 72 gm0 fs12 fzbu fc2 F /|______Times-Roman fntbn0.26275 0. 32 0.02627 0.(One of the distributed applications which has been implemented using the ideas described in)awidthshow123 72 gm-0.03691 0.(this paper is a simple theatre seat reservation system.  We have build this application using the)ashow138 72 gm1.18896 0. 32 0.11889 0.(Arjuna system [3].  The application provides facilities which allow groups of seats to be)awidthshow153 72 gm1.33651 0. 32 0.13365 0.(reserved, unreserved or have their status checked.  This application is designed to allow)awidthshow168 72 gm0.90194 0. 32 0.09019 0.(multiple users \(booking offices\), to perform arbitrary sets of operations, concurrently, and)awidthshow183 72 gm1.47033 0. 32 0.14703 0.(from different locations in the distributed environment.  These groups of invocations of)awidthshow198 72 gm0.30868 0. 32 0.03086 0.(operations can be performed within user created atomic actions, so allowing users to reserve)awidthshow213 72 gm-0.09353 0.(rows of seats or redisplay all the theatre seats "atomically".)ashow240 72 gm0.20004 0. 32 0.02000 0.(The application is implemented using two classes of objects, theatre objects and seat objects.)awidthshow255 72 gm-0.11854 0.(The operations of both theatre objects and seat objects are all performed as atomic actions.  Seat)ashow270 72 gm0.14297 0. 32 0.01429 0.(objects are sub-objects of theatre object, and as such are only accessible via the operations of)awidthshow285 72 gm-0.10884 0.(theatre objects.)ashow312 72 gm-0.08125 0.(Such an object decomposition leads to the possibility of different configurations, for the theatre)ashow327 72 gm-0.07972 0.(seat reservation system.  For example:)ashow354 72 gm-0.33006 0.(i\))ashow354 108 gm0.35034 0. 32 0.03503 0.(The seat objects obtain their concurrency-control from the theatre object, and are co-)awidthshow369 108 gm-0.14849 0.(located with the theatre object.)ashow396 72 gm-0.33203 0.(ii\))ashow396 108 gm1.24267 0. 32 0.12426 0.(The seat objects are individually concurrency-controlled, and are located with the)awidthshow411 108 gm-0.14022 0.(theatre object.)ashow438 72 gm-0.33270 0.(iii\))ashow438 108 gm-0.10638 0.(The seat objects are individually concurrency-controlled, and are distributed.)ashow465 72 gm1.13128 0. 32 0.11312 0.(Each of these configurations has its merits; configurations \(ii\) and \(iii\) being suitable for)awidthshow480 72 gm1.78756 0. 32 0.17875 0.(situations where a theatre object is often used concurrently.  Configuration \(i\) is more)awidthshow495 72 gm0.92163 0. 32 0.09216 0.(appropriate if concurrent use of the theatre object is rare; in such situations the individual)awidthshow510 72 gm1.04324 0. 32 0.10432 0.(concurrency-control of each seat, which is provided by configurations \(ii\) and \(iii\) would)awidthshow525 72 gm0.25756 0. 32 0.02575 0.(impose unnecessary overheads. As far as availability is concerned, configurations \(i\) and \(ii\))awidthshow540 72 gm0.16494 0. 32 0.01649 0.(have advantages over \(iii\) because they depend less on the distributed environment operating)awidthshow555 72 gm0.28747 0. 32 0.02874 0.(correctly.  Due to the overheads involved in distributing the seat object, configuration \(iii\) is)awidthshow570 72 gm1.41067 0. 32 0.14106 0.(likely to have a lower performance than \(ii\); because seat reservation is not a processor)awidthshow585 72 gm-0.11064 0.(intensive operation, remote access overheads are likely to dominate access times.)ashowF T cp%%Page: ? 9op30 28 811 566 fr0 0 xl1 1 pen81 72 gm(nc 30 28 811 566 6 rc)kpF 1 setTxMode0 fs12 fzbu fc2 F /|______Times-Roman fntbn-0.11843 0.(The outline of the interface definition \(in C++\) for the Theatre class is given below:)ashow105 72 gmbu fc%%BeginFont: Courier%%IncludeFont: Courierbn%%EndFontbu fc{}mark T /Courier /|______Courier 0 rfbn10 fzbu fc2 F /|______Courier fntbn(enum SeatStatus { UnReserved, Reserved };)show116 72 gm-0.00102 0.(enum Result     { OK, Failed, AlreadyReserved, NotReserved };)ashow138 72 gm(class Theatre : public . . .)show149 72 gm({)show160 72 gm(private:)show171 108 gm(Seat* seats[MAX_SEAT_NUM];)show182 108 gm(. . .)show193 72 gm(public:)show204 108 gm-0.00102 0.(void GetSeatStatus\(int seat, SeatStatus& status, Result& res\);)ashow215 108 gm(void ReserveSeat\(int seat, Result& res\);)show226 108 gm(void UnreserveSeat\(int seat, Result& res\);)show237 108 gm(. . .)show248 72 gm(};)show274 72 gm12 fzbu fc2 F /|______Times-Roman fntbn2.54547 0. 32 0.25454 0.(The Theatre class interface provides the operations )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.64964 0.(GetSeatStatus)ashow0 fsbu fc2 F /|______Times-Roman fntbn0.62728 0. 32 0.06272 0.(, )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.66865 0.(ReserveSeat)ashow0 fsbu fc2 F /|______Times-Roman fntbn1.96136 0. 32 0.19613 0.( and)awidthshow289 72 gm2 fsbu fc2 F /|______Times-Italic fntbn-0.06193 0.(UnreserveSeat)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.05343 0.(.  Each of these operations takes as an input, the number \()ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.05508 0.(seat)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.05612 0.(\) of the seat which)ashow304 72 gm0.24536 0. 32 0.02453 0.(is to be operated upon.  The outcome of the operation is indicated using the parameter )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.07131 0.(res)ashow0 fsbu fc2 F /|______Times-Roman fntbn0.14953 0. 32 0.01495 0.(, if)awidthshow319 72 gm1.90719 0. 32 0.19071 0.(the operation is completed successfully it is set to )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.94343 0.(OK)ashow0 fsbu fc2 F /|______Times-Roman fntbn2.04895 0. 32 0.20489 0.(, if the operation is completely)awidthshow334 72 gm0.06027 0. 32 0.00602 0.(unsuccessful it is set to )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.02102 0.(Failed)ashow0 fsbu fc2 F /|______Times-Roman fntbn0.06973 0. 32 0.00697 0.(.  If the operations was unsuccessful for a particular reason \(for)awidthshow349 72 gm0.95031 0. 32 0.09503 0.(example, attempting to reserve an already reserved seat\), a special value is returned.  The)awidthshow364 72 gm2 fsbu fc2 F /|______Times-Italic fntbn-0.11213 0.(GetSeatStatus)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.10160 0.( operation also has a parameter which is the status of the seat indicated.)ashow391 72 gm-0.04832 0.(The implementation \(slightly simplified\) of the theatre object's )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.05506 0.(ReserveSeat)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.05000 0.(  operation is given)ashow406 72 gm-0.13206 0.(below:)ashow430 72 gm10 fzbu fc2 F /|______Courier fntbn(void Theatre::ReserveSeat\(int seat, Result& res\))show441 72 gm({)show452 108 gm(AtomicAction A;)show463 108 gm(A.Begin\(\);)show485 108 gm(res = Failed;)show496 108 gm(if \(\(seat >= 0\) && \(seat < MAX_SEAT_NUM\)\))show507 144 gm(if \(setlock\(READ\) == GRANTED\))show518 180 gm(seats[seat]->Reserve\(res\);)show518 360 gm(// Operation on seat object)show540 108 gm(if \(res != Failed\))show551 144 gm(A.End\(\);)show562 108 gm(else)show573 144 gm(A.Abort\(\);)show584 72 gm(})show610 72 gm12 fzbu fc2 F /|______Times-Roman fntbn0.86318 0. 32 0.08631 0.(The theatre object's )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.24327 0.(ReserveSeat)ashow0 fsbu fc2 F /|______Times-Roman fntbn0.93063 0. 32 0.09306 0.( operation uses the atomic action sub-system provided by)awidthshow625 72 gm0.33096 0. 32 0.03309 0.(Arjuna system. To start an atomic action, the operation creates an )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.10040 0.(AtomicAction)ashow0 fsbu fc2 F /|______Times-Roman fntbn0.33996 0. 32 0.03399 0.( object, then)awidthshow640 72 gm1.23474 0. 32 0.12347 0.(invokes that AtomicAction object's )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.30119 0.(Begin)ashow0 fsbu fc2 F /|______Times-Roman fntbn0.88470 0. 32 0.08847 0.( operation. To acquire a lock on the theatre, the)awidthshow655 72 gm-0.00576 0.(operation invokes the setlock operation \(provided by the class from which the Theatre class is)ashow670 72 gm-0.07086 0.(derived\).  For this operation, a )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.08651 0.(read)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.07156 0.( lock is required on the theatre object.  If the lock is granted)ashow685 72 gm-0.10807 0.(the reservation operation of the seat object can be invoked. If the reservation operation has been)ashow700 72 gm0.58410 0. 32 0.05841 0.(successfully completed, the atomic action can be committed by invoking the AtomicAction)awidthshow715 72 gm-0.07083 0.(object's )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.10490 0.(End)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.07743 0.( operation, otherwise the atomic action can aborted using the )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.08900 0.(Abort)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.08355 0.( operation.)ashow742 72 gm0.12008 0. 32 0.01200 0.(The Seat class provides operations which manipulate a single seat, allowing it to be reserved,)awidthshow757 72 gm0.68740 0. 32 0.06874 0.(unreserved, and its status checked. In this implementation, the only information held about)awidthshowF T cp%%Page: ? 10op30 28 811 566 fr0 0 xl1 1 pen81 72 gm(nc 30 28 811 566 6 rc)kpF 1 setTxMode0 fs12 fzbu fc2 F /|______Times-Roman fntbn0.39306 0. 32 0.03930 0.(individual seats is their status, i.e. whether the seat has been reserved or not.  The outline of)awidthshow96 72 gm-0.12492 0.(the interface definition for the Seat class is given below:)ashow120 72 gm10 fzbu fc2 F /|______Courier fntbn(class Seat :public . . .)show131 72 gm({)show142 72 gm(private:)show153 108 gm(SeatStatus seat_status;)show164 72 gm(public:)show175 108 gm(void GetStatus\(SeatStatus& status, Result& res\);)show186 108 gm(void Reserve\(Result& res\);)show197 108 gm(void Unreserve\(Result& res\);)show208 108 gm(. . .)show219 72 gm(};)show245 72 gm12 fzbu fc2 F /|______Times-Roman fntbn-0.06063 0.(Like the operations of the theatre object, the operations of seat objects are performed as atomic)ashow260 72 gm(actions.)show284 72 gm10 fzbu fc2 F /|______Courier fntbn(void Seat::Reserve\(Result& res\))show295 72 gm({)show306 108 gm(AtomicAction A;)show317 108 gm(A.Begin\(\);)show339 108 gm(res = Failed;)show350 108 gm(if \(setlock\(READ\) == GRANTED\))show361 108 gm({)show372 144 gm(if \(seat_status == Reserved\))show383 180 gm(res = AlreadyReserved;)show394 144 gm(else)show405 180 gm(if \(setlock\(WRITE\) == GRANTED\))show416 180 gm({)show427 216 gm(res = OK;)show438 216 gm(seat_status = Reserved;)show449 180 gm(})show460 108 gm(})show482 108 gm(if \(res != Failed\))show493 144 gm(A.End\(\);)show504 108 gm(else)show515 144 gm(A.Abort\(\);)show526 72 gm(})show552 72 gm12 fzbu fc2 F /|______Times-Roman fntbn-0.07267 0.(The distribution of components of the theatre application described here can be reconfigured in)ashow567 72 gm0.40618 0. 32 0.04061 0.(several ways without changing any of the code. Three plausible arrangements with different)awidthshow582 72 gm-0.17794 0.(performance and availability characteristics are:)ashow604 72 gm2 fsbu fc2 F /|______Times-Italic fntbn-0.28585 0.(Centralised)ashow0 fsbu fc2 F /|______Times-Roman fntbn(:)show604 144 gm0.18325 0. 32 0.01832 0.(The theatre object can be co-located with its users \(e.g., booking applications\))awidthshow619 144 gm-0.07057 0.(and with its constituent parts - the seats.)ashow636 72 gm2 fsbu fc2 F /|______Times-Italic fntbn-0.28822 0.(Intermediate)ashow0 fsbu fc2 F /|______Times-Roman fntbn(:)show636 144 gm1.72332 0. 32 0.17233 0.(The theatre object is remote from its users, but co-located with its seats.)awidthshow651 144 gm3.15109 0. 32 0.31510 0.(Applications which use a theatre can be pre-processed, replacing the)awidthshow666 144 gm-0.14790 0.(implementation of the theatre object with a stub object for the theatre object.)ashow683 72 gm2 fsbu fc2 F /|______Times-Italic fntbn-0.34053 0.(Decentralised)ashow0 fsbu fc2 F /|______Times-Roman fntbn(:)show683 144 gm-0.08364 0.(The applications, theatre and seats are all on different nodes.  As above, but seat)ashow698 144 gm0.61981 0. 32 0.06198 0.(objects in the theatre object are replaced with stub code which forwards seat)awidthshow713 144 gm-0.05821 0.(requests to the remote nodes.)ashow735 72 gm0.10406 0. 32 0.01040 0.(The concurrency-control of the application can be reconfigured by changing the behaviour of)awidthshow750 72 gm-0.08192 0.(the )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.08831 0.(setlock)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.08619 0.( operation.  The )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.08831 0.(setlock)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.09130 0.( operation performed by the seat objects could be modified to)ashow765 72 gm-0.10472 0.(place a lock on the containing theatre object.  This new setlock implementation can be provided)ashowF T cp%%Page: ? 11op30 28 811 566 fr0 0 xl1 1 pen81 72 gm(nc 30 28 811 566 6 rc)kpF 1 setTxMode0 fs12 fzbu fc2 F /|______Times-Roman fntbn-0.10408 0.(by deriving the seat objects from a class which implements the setlock operation in this way.  A)ashow96 72 gm2.09014 0. 32 0.20901 0.(more attractive approach would be the initialise the base class, at creation time, with)awidthshow111 72 gm-0.08169 0.(information about how concurrency-control is to be performed.)ashow138 72 gm1 fs14 fzbu fc2 F /|______Times-Bold fntbn2.50003 0.(7.)ashow138 108 gm0.66412 0.(Conclusions)ashow162 72 gm0 fs12 fzbu fc2 F /|______Times-Roman fntbn-0.05461 0.(Constructing an application which is required to be reconfigurable requires that the application)ashow177 72 gm-0.04052 0.(be designed so that aspects of its configuration can be altered, while still satisfying it's original)ashow192 72 gm-0.10357 0.(specification.  This paper has examined the ways in which changes to object decomposition can)ashow207 72 gm-0.08940 0.(create new configurations which alter the performance or availability of the application without)ashow222 72 gm0.07720 0. 32 0.00772 0.(changing its function.  The appropriate use of atomic actions and objects allows these aspects)awidthshow237 72 gm1.41952 0. 32 0.14195 0.(of the application's design to be altered without significant alterations to the application)awidthshow252 72 gm-0.03707 0.(structure or code.)ashow279 72 gm-0.00926 0.(To quantify the relationships between the different configurations, so that stronger guide lines)ashow294 72 gm-0.11778 0.(can be obtained on how distributed applications can be reconfigured to improve the attributes of)ashow309 72 gm0.78338 0. 32 0.07833 0.(the application, will require further work, which is under way.  Also, design of distributed)awidthshow324 72 gm0.64620 0. 32 0.06462 0.(applications which require very high levels of availability or reliability is another aspect of)awidthshow339 72 gm-0.08433 0.(reconfiguring distributed applications which will require further work.)ashow366 72 gm1 fs14 fzbu fc2 F /|______Times-Bold fntbn0.67451 0.(Acknowledgements)ashow393 72 gm0 fs12 fzbu fc2 F /|______Times-Roman fntbn1.72454 0. 32 0.17245 0.(This work has been supported in part by grants from the UK Science and Engineering)awidthshow408 72 gm0.34423 0. 32 0.03442 0.(Research Council and ESPRIT project 2267 \(Integrated Systems Architecture\).  Discussions)awidthshow423 72 gm0.10192 0. 32 0.01019 0.(with Santosh Shrivastava, Graham Parrington, Mark Little and Jo\213o Geada have been helpful)awidthshow438 72 gm-0.08151 0.(in clarifying the ideas put forward here.)ashow465 72 gm1 fs14 fzbu fc2 F /|______Times-Bold fntbn0.74552 0.(References)ashow492 72 gm0 fs12 fzbu fc2 F /|______Times-Roman fntbn1.00003 0.(1.)ashow492 108 gm1.81686 0. 32 0.18168 0.(Gray, J.N., )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn2.30926 0. 32 0.23092 0.(Notes on Data Base Operating Systems)awidthshow0 fsbu fc2 F /|______Times-Roman fntbn2.10693 0. 32 0.21069 0.(, in Operating Systems: An)awidthshow507 108 gm1.81442 0. 32 0.18144 0.(Advanced Course, Lecture Notes in Computing Science, pp. 393-481, Springer-)awidthshow522 108 gm0.15975 0. 32 0.01597 0.(Varlag, 1978.)awidthshow549 72 gm1.00003 0.(2.)ashow549 108 gm0.55557 0. 32 0.05555 0.(Liskov, B., )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.86013 0. 32 0.08601 0.(Distributed Programming in Argus)awidthshow0 fsbu fc2 F /|______Times-Roman fntbn0.67718 0. 32 0.06771 0.(, Communications of the ACM, Vol.)awidthshow564 108 gm0.60485 0. 32 0.06048 0.(31, No.3, pp. 300-312, March 1988.)awidthshow591 72 gm1.00003 0.(3.)ashow591 108 gm1.65542 0. 32 0.16554 0.(Shrivastava, S.K., G.N. Dixon, and G.D. Parrington, )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn1.59210 0. 32 0.15921 0.(An Overview of the Arjuna)awidthshow606 108 gm(Distributed Programming System)show0 fsbu fc2 F /|______Times-Roman fntbn(, IEEE Software, pp. 66-73, January 1991.)show633 72 gm1.00003 0.(4.)ashow633 108 gm0.94146 0. 32 0.09414 0.(Herlihy, M.P. and J.M. Wing, )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn1.28433 0. 32 0.12843 0.(Avalon: Language Support for Reliable Distributed)awidthshow648 108 gm(Systems)show0 fsbu fc2 F /|______Times-Roman fntbn-0.00369 0.(, in Seventeenth Annual Symposium of Fault-Tolerant Computing, Pittsburgh,)ashow663 108 gm0.52398 0. 32 0.05239 0.(July 1987.)awidthshow690 72 gm1.00003 0.(5.)ashow690 108 gm0.65841 0. 32 0.06584 0.(Dasgupta, P., R.J. LeBlanc Jr, and E. Spafford, )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.87371 0. 32 0.08737 0.(The Clouds Project: Designing and)awidthshow705 108 gm0.02487 0. 32 0.00248 0.(Implementing a Fault Tolerant, Distributed Operating System)awidthshow0 fsbu fc2 F /|______Times-Roman fntbn0.02212 0. 32 0.00221 0.(, Technical Report GIT-)awidthshow720 108 gm-0.00610 0.(ICS-85/29, Georgia Institute of Technology, 1985.)ashow747 72 gm1.00003 0.(6.)ashow747 108 gm0.14053 0. 32 0.01405 0.(ANSA, )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.17013 0. 32 0.01701 0.(ANSA Reference Manual)awidthshow0 fsbu fc2 F /|______Times-Roman fntbn0.12207 0. 32 0.01220 0.(, Release 01.00. March 1989.)awidthshowF T cp%%Page: ? 12op30 28 811 566 fr0 0 xl1 1 pen81 72 gm(nc 30 28 811 566 6 rc)kpF 1 setTxMode0 fs12 fzbu fc2 F /|______Times-Roman fntbn1.00003 0.(7.)ashow81 108 gm0.27374 0. 32 0.02737 0.(Moss, J.E.B., )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.34545 0. 32 0.03454 0.(Nested Transactions: An Approach to Reliable Distributed Computing)awidthshow0 fsbu fc2 F /|______Times-Roman fntbn(,)show96 108 gm3.54385 0. 32 0.35438 0.(Technical Report MIT/LCS/TR-260, Massachusetts Institute of Technology,)awidthshow111 108 gm-0.06552 0.(Laboratory for Computing Science,  April 1981.)ashow138 72 gm1.00003 0.(8.)ashow138 108 gm1.06567 0. 32 0.10656 0.(Wheater, S.M., )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn1.27166 0. 32 0.12716 0.(Constructing Reliable Distributed Applications Using Actions and)awidthshow153 108 gm0.01358 0.(Objects)ashow0 fsbu fc2 F /|______Times-Roman fntbn0.05950 0. 32 0.00595 0.(, Ph.D. Thesis, Techical Report TR/316, Computing Laboratory, University of)awidthshow168 108 gm0.05310 0. 32 0.00531 0.(Newcastle upon Tyne, June 1990.)awidthshow195 72 gm1.00003 0.(9.)ashow195 108 gm1.08306 0. 32 0.10830 0.(Kramer, J., J. Magee, and M. Sloman, )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn1.55456 0. 32 0.15545 0.(Constructing distributed systems in Conic)awidthshow0 fsbu fc2 F /|______Times-Roman fntbn(,)show210 108 gm0.15304 0. 32 0.01530 0.(IEEE Transactions on Software Engineering, Vol. 15, No. 6, pp. 663-675, June 1989.)awidthshow237 72 gm0.5 0.(10.)ashow237 108 gm0.48965 0. 32 0.04896 0.(Nelson, B.J., )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn0.71136 0. 32 0.07113 0.(Remote Procedure Call)awidthshow0 fsbu fc2 F /|______Times-Roman fntbn0.63140 0. 32 0.06314 0.(, Ph.D. Thesis, Technical Report CMU-CS-81-)awidthshow252 108 gm-0.06558 0.(119, Department of Computing Science, Carnegie-Mellon University, 1981.)ashow279 72 gm0.5 0.(11.)ashow279 108 gm-0.07391 0.(Parrington, G.D., )ashow2 fsbu fc2 F /|______Times-Italic fntbn-0.08230 0.(Reliable Distributed Programming in C++: The Arjuna Approach)ashow0 fsbu fc2 F /|______Times-Roman fntbn-0.07908 0.(, in)ashow294 108 gm0.04104 0. 32 0.00410 0.(Second Usenix C++ Conference, San Fransisco, April 1990.)awidthshow321 72 gm0.5 0.(12.)ashow321 108 gm1.84783 0. 32 0.18478 0.(Little, M.C. and S.K. Shrivastava, )awidthshow2 fsbu fc2 F /|______Times-Italic fntbn2.32101 0. 32 0.23210 0.(Replicated K-Resilient Objects in Arjuna)awidthshow0 fsbu fc2 F /|______Times-Roman fntbn1.11389 0. 32 0.11138 0.(. in)awidthshow336 108 gm0.88867 0. 32 0.08886 0.(Proceedings of IEEE Workshop on the Management of Replicated Data,  Houston,)awidthshow351 108 gm-0.01249 0.(Texas, IEEE Computer Society Press, November 1990.)ashowF T cp%%Trailercdend%%Pages: 12 0%%EOF