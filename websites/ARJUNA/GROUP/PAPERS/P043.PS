%!PS-Adobe-3.0
%%Title: (icdcs-15)
%%Creator: (Word 5.1: LaserWriter 8 8.1.1)
%%CreationDate: (2:05 pm Tuesday, April 25, 1995)
%%For: (santosh shrivastava)
%%Pages: 11
%%DocumentFonts: Times-Roman Symbol Times-Bold Times-Italic Times-BoldItalic Chicago
%%DocumentNeededFonts: Times-Roman Symbol Times-Bold Times-Italic Times-BoldItalic Chicago
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -12 -12 780 600
%ADO_ImageableArea: 0 0 768 588
%%EndComments
/md 190 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 81 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
%%BeginFile: adobe_psp_derived_styles
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/wi
version(23.0)eq
{
{
gS 0 0 0 0 rC stringwidth gR
}bind
}{
/stringwidth load
}ifelse
def
/$o 1. def
/gl{$o G}bd
/ms{:M S}bd
/condensedmtx[.82 0 0 1 0 0]def
/:mc
{
condensedmtx :mf def
}bd
/extendedmtx[1.18 0 0 1 0 0]def
/:me
{
extendedmtx :mf def
}bd
/basefont Z
/basefonto Z
/dxa Z
/dxb Z
/dxc Z
/dxd Z
/dsdx2 Z
/bfproc Z
/:fbase
{
dup/FontType get 0 eq{
dup length dict begin
dup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall
/FDepVector exch/FDepVector get[exch/:fbase load forall]def
}/bfproc load ifelse
/customfont currentdict end definefont
}bd
/:mo
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
basefont setfont
( )dup 0 4 -1 roll put
dup wi
setcharwidth
0 0 :M
gS
gl
dup show
gR
basefonto setfont
show
end
}def
}store :fbase
}bd
/:mso
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxa 1 ps div def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxa add exch
}if
setcharwidth
dup 0 0 ms
dup dxa 0 ms
dup dxa dxa ms
dup 0 dxa ms
gl
dxa 2. div dup ms
end
end
}def
}store :fbase
}bd
/:ms
{
/bfproc{
dup dup length 2 add dict
begin
{
1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse
}forall
/PaintType 2 def
/StrokeWidth .012 0 FontMatrix idtransform pop def
/customfont currentdict
end
definefont
8 dict begin
/basefonto xdf
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxb .05 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dxb add
}if
exch setcharwidth
dup dxb .01 add 0 ms
0 dxb :T
gS
gl
dup 0 0 ms
gR
basefonto setfont
0 0 ms
end
end
}def
}store :fbase
}bd
/:mss
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxc 1 ps div def
/dsdx2 .05 dxc 2 div add def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
exch dup 0 ne
{
dsdx2 add
}if
exch setcharwidth
dup dsdx2 .01 add 0 ms
0 .05 dxc 2 div sub :T
dup 0 0 ms
dup dxc 0 ms
dup dxc dxc ms
dup 0 dxc ms
gl
dxc 2 div dup ms
end
end
}def
}store :fbase
}bd
/:msb
{
/bfproc{
7 dict begin
/basefont xdf
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding StandardEncoding def
/BuildChar
{
exch begin
sD begin
/dxd .03 def
basefont setfont
( )dup 0 4 -1 roll put
dup wi
1 index 0 ne
{
exch dxd add exch
}if
setcharwidth
dup 0 0 ms
dup dxd 0 ms
dup dxd dxd ms
0 dxd ms
end
end
}def
}store :fbase
}bd
/italicmtx[1 0 -.212557 1 0 0]def
/:mi
{
italicmtx :mf def
}bd
/:v
{
[exch dup/FontMatrix get exch
dup/FontInfo known
{
/FontInfo get
dup/UnderlinePosition known
{
dup/UnderlinePosition get
2 index 0
3 1 roll
transform
exch pop
}{
.1
}ifelse
3 1 roll
dup/UnderlineThickness known
{
/UnderlineThickness get
exch 0 3 1 roll
transform
exch pop
abs
}{
pop pop .067
}ifelse
}{
pop pop .1 .067
}ifelse
]
}bd
/$t Z
/$p Z
/$s Z
/:p
{
aload pop
2 index mul/$t xs
1 index mul/$p xs
.012 mul/$s xs
}bd
/:m
{gS
0 $p rm
$t lw
0 rl stroke
gR
}bd
/:n
{
gS
0 $p rm
$t lw
0 rl
gS
gl
stroke
gR
strokepath
$s lw
/setstrokeadjust where{pop
currentstrokeadjust true setstrokeadjust stroke setstrokeadjust
}{
stroke
}ifelse
gR
}bd
/:o
{gS
0 $p rm
$t 2 div dup rm
$t lw
dup 0 rl
stroke
gR
:n
}bd
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
1 dict dup /ManualFeed false put setpagedevice
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *PageSize Letter

    1 dict
    dup /Policies 2 dict dup /PageSize 2 put dup /MediaType 0 put put
        setpagedevice
        2 dict
    dup /PageSize [612 792] put
    dup /ImagingBBox null put
    setpagedevice
%%EndFeature
}featurecleanup
(santosh shrivastava)setjob
/pT[1 0 0 -1 12 780]def/mT[1 0 0 -1 12 780]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Roman
%%IncludeFont: Symbol
%%IncludeFont: Times-Bold
%%IncludeFont: Times-Italic
%%IncludeFont: Times-BoldItalic
%%IncludeFont: Chicago
/f0_1/Times-Roman :mre
/f0_12 f0_1 12 scf
/f0_10 f0_1 10 scf
/f0_9 f0_1 9 scf
/f0_8 f0_1 8 scf
/f1_1/Symbol :bsr
240/apple pd
:esr /f1_10 f1_1 10 scf
/f2_1/Times-Bold :mre
/f2_14 f2_1 14 scf
/f2_10 f2_1 10 scf
/f2_9 f2_1 9 scf
/f3_1 f1_1 def
/f3_10 f3_1 10 scf
/f4_1/Times-Italic :mre
/f4_10 f4_1 10 scf
/f4_9 f4_1 9 scf
/f5_1 f1_1 :mi
/f5_10 f5_1 10 scf
/f6_1/Times-BoldItalic :mre
/f6_10 f6_1 10 scf
/f7_1 f3_1 :mi
/f7_10 f7_1 10 scf
/f8_1 f4_1 :v def
/f9_1/Chicago findfont :ff def /f9_10 f9_1 10 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(santosh shrivastava; page: 1 of 11)setjob
%%EndPageSetup
gS 0 0 588 768 rC
289 51 :M
f0_10 sf
(1)S
98 102 :M
f2_14 sf
3.589 .359(Newtop: A Fault-Tolerant Group Communication Protocol)J
145 119 :M
f0_10 sf
.018 .002(Paul D Ezhilchelvan)J
f0_9 sf
0 -3 rm
(\240)S
0 3 rm
f0_10 sf
.016 .002(, Raimundo A Mac\220do)J
f0_9 sf
0 -3 rm
(\340)S
0 3 rm
f0_10 sf
.014 .001( and Santosh K Shrivastava)J
f0_9 sf
0 -3 rm
(\240)S
0 3 rm
147 139 :M
(\240)S
f0_10 sf
0 3 rm
.045 .004(Department of Computing Science, University of Newcastle upon Tyne)J
0 -3 rm
219 153 :M
.02 .002(Newcastle upon Tyne NE1 7RU, UK)J
169 173 :M
f0_9 sf
(\340)S
f0_10 sf
0 3 rm
.009 .001(Federal University of Bahia, CDC/DCC, Campus de Ondina,)J
0 -3 rm
222 187 :M
-.033(40.170-110, Salvador, Bahia, Brazil)A
46 224 :M
f2_10 sf
.613(Abstract:)A
f0_10 sf
2.601 .26( A general purpose group communication)J
46 235 :M
.932 .093(protocol suite called Newtop is described. It is assumed)J
46 246 :M
.227 .023(that processes can simultaneously belong to many groups,)J
46 257 :M
2.936 .294(group size could be large, and processes could be)J
46 268 :M
4.935 .494(communicating over the Internet. Asynchronous)J
46 279 :M
.807 .081(communication environment is therefore assumed where)J
46 290 :M
4.088 .409(message transmission times cannot be accurately)J
46 301 :M
2.293 .229(estimated, and the underlying network may well get)J
46 312 :M
3.66 .366(partitioned, preventing functioning processes from)J
46 323 :M
2.091 .209(communicating with each other. Newtop can provide)J
46 334 :M
.62 .062(causality preserving total order delivery to members of a)J
46 345 :M
.798 .08(group, ensuring that total order delivery is preserved for)J
46 356 :M
1.107 .111(multi-group processes. Both symmetric and asymmetric)J
46 367 :M
.392 .039(order protocols are supported, permitting a process to use)J
46 378 :M
2.195 .22(say symmetric version in one group and asymmetric)J
46 389 :M
.207 .021(version in other.)J
46 400 :M
f2_10 sf
1.387 .139(Key words:)J
f0_10 sf
1.254 .125( group communication, group membership,)J
46 411 :M
2.327 .233(fault tolerance, network protocol, multicast protocol,)J
46 422 :M
-.098(causal order, total order.)A
46 445 :M
f2_10 sf
3.985 .398(1. Introduction)J
64 466 :M
f0_10 sf
1.458 .146(Many fault-tolerant distributed applications can be)J
46 477 :M
2.677 .268(structured as one or more groups of processes that)J
46 488 :M
1.373 .137(cooperate by multicasting messages to each other. The)J
46 499 :M
.373 .037(building of such applications is considerably simplified if)J
46 510 :M
.647 .065(the members of a group have a mutually consistent view)J
46 521 :M
.971 .097(of the order in which events \(such as message delivery,)J
46 532 :M
-.076(process failures\) have taken place. Design and development)A
46 543 :M
2.758 .276(of fault-tolerant group communication protocols for)J
46 554 :M
.431 .043(distributed systems satisfying certain order properties has)J
46 565 :M
4.333 .433(been therefore an active area of research \(e.g.,)J
46 576 :M
.431 .043([4][6]12][17]\). We present a contribution to this area that)J
46 587 :M
.02 .002(makes use of the concept of logical clocks [10].)J
64 598 :M
1.339 .134(We begin by describing the motivation behind our)J
46 609 :M
.503 .05(work and describe the novel features. In section three we)J
46 620 :M
.442 .044(present the basic system model and definitions and in the)J
46 631 :M
.957 .096(fourth section we develop the main concepts behind)J
f4_10 sf
.125 .013( )J
f0_10 sf
.337(the)A
46 642 :M
2.099 .21(total order protocol Newtop \(NEWcastle Total Order)J
46 653 :M
.437 .044(Protocol\) by considering a static failure-free environment)J
46 664 :M
.537 .054(where group membership changes do not occur. We then)J
46 675 :M
-.012(remove this restriction in section five and describe ways of)A
46 686 :M
-.003(making Newtop dynamic and fault-tolerant in the presence)A
46 697 :M
1.13 .113(of process crashes, departures and arrivals and network)J
306 224 :M
1.573 .157(partitions. In section six we compare and contrast our)J
306 235 :M
2.16 .216(approach with some of the best known fault-tolerant)J
306 246 :M
(multicast protocols. Section seven concludes the paper.)S
306 269 :M
f2_10 sf
5.359 .536(2. Motivation)J
324 290 :M
f0_10 sf
.496 .05(We are interested in a general purpose protocol suite)J
306 301 :M
1.126 .113(that is suitable in a variety of settings. We assume that)J
306 312 :M
1.849 .185(processes can simultaneously belong to many groups,)J
306 323 :M
2.936 .294(group size could be large, and processes could be)J
306 334 :M
.367 .037(communicating over the Internet. We therefore model the)J
306 345 :M
2.531 .253(communication environment as asynchronous, where)J
306 356 :M
4.088 .409(message transmission times cannot be accurately)J
306 367 :M
2.293 .229(estimated, and the underlying network may well get)J
306 378 :M
3.66 .366(partitioned, preventing functioning processes from)J
306 389 :M
.027 .003(communicating with each other.)J
324 400 :M
.208 .021(A multicast made by a process can be interrupted due)J
306 411 :M
2.198 .22(to the crash of that process; this can result in some)J
306 422 :M
.223 .022(connected destinations not receiving the message. Process)J
306 433 :M
2.068 .207(crashes should ideally be handled by a fault tolerant)J
306 444 :M
1.184 .118(protocol in the following manner: when a process does)J
306 455 :M
1.309 .131(crash, all functioning processes must promptly observe)J
306 466 :M
1.835 .183(that crash event and agree on the order of that event)J
306 477 :M
.383 .038(relative to other events in the system. In an asynchronous)J
306 488 :M
.116 .012(environment this is impossible to achieve: when processes)J
306 499 :M
.474 .047(are prone to failures, it is impossible to guarantee that all)J
306 510 :M
.964 .096(non-faulty processes will reach agreement in finite time)J
306 521 :M
2.297 .23([8]. This impossibility stems from the inability of a)J
306 532 :M
.628 .063(process to distinguish slow processes from crashed ones.)J
306 543 :M
.19 .019(Asynchronous protocols can circumvent this impossibility)J
306 554 :M
.607 .061(result by permitting processes to )J
f4_10 sf
.162(suspect)A
f0_10 sf
.708 .071( process crashes)J
306 565 :M
-.028([5] and by reaching agreement only among those processes)A
306 576 :M
.158 .016(which they do not suspect to have crashed. Despite efforts)J
306 587 :M
2.668 .267(to minimise incorrect suspicions by processes, it is)J
306 598 :M
3.535 .353(possible for a subgroup of mutually unsuspecting)J
306 609 :M
1.76 .176(processes to wrongly agree \(though rare it may be in)J
306 620 :M
1.65 .165(practice\) on a functioning and connected process as a)J
306 631 :M
.543 .054(crashed one, leading to a 'virtual' partition. Thus, there is)J
306 642 :M
.742 .074(always a possibility for a group of processes to partition)J
306 653 :M
3.609 .361(themselves \(either due to virtual or real network)J
306 664 :M
4.501 .45(partitioning\) into several subgroups of mutually)J
306 675 :M
-.024(unsuspecting processes.)A
324 686 :M
1.811 .181( A multicast protocol that delivers messages in a)J
306 697 :M
.029 .003(causality preserving total order to all functioning members)J
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(santosh shrivastava; page: 2 of 11)setjob
%%EndPageSetup
-12 -12 :T
gS 12 12 588 768 rC
58 99 :M
f0_10 sf
.917 .092(of a group is an important component of the underlying)J
58 110 :M
.081 .008(communication system. Further, like other researchers, we)J
58 121 :M
.38 .038(believe that applications will benefit if member processes)J
58 132 :M
.247 .025(are permitted simultaneously to belong to multiple groups)J
58 143 :M
1.288 .129([4, 9]. We give an example below \(another example is)J
58 154 :M
.099 .01(given in the fuller version of this paper [7]\).)J
58 165 :M
f4_10 sf
1.33 .133(Online server migration)J
f0_10 sf
.938 .094(: Replica management is a well)J
58 176 :M
.268 .027(known application of total order protocols. Assume that it)J
58 187 :M
1.031 .103(is necessary to migrate a member of a replicated server)J
58 198 :M
1.426 .143(group to some other machine. The task is complicated)J
58 209 :M
.589 .059(because each server replica maintains substantial amount)J
58 220 :M
.409 .041(of state \(say several megabytes of data\), but it is required)J
58 231 :M
.664 .066(that the migration process must not cause any noticeable)J
58 242 :M
2.809 .281(disruption in service or compromise availability. A)J
58 253 :M
.55 .055(possible solution will work as follows. Assume group g)J
0 2 rm
(1)S
0 -2 rm
58 265 :M
.113 .011(\(fig. 1\(a\)\) to be the server group, and P)J
0 2 rm
(2)S
0 -2 rm
.108 .011( is to be migrated.)J
58 277 :M
1.153 .115(A server process P)J
0 2 rm
.37(3)A
0 -2 rm
1.074 .107( is created at the intended location.)J
58 289 :M
.918 .092(This process initiates the formation of a new group, g)J
0 2 rm
.309(2)A
0 -2 rm
(,)S
58 301 :M
2.067 .207(containing P)J
0 2 rm
.452(1)A
0 -2 rm
.735 .073(, P)J
0 2 rm
.452(2)A
0 -2 rm
1.079 .108( and itself \(fig. 1 \(b\)\). Within g)J
0 2 rm
.452(2)A
0 -2 rm
.735 .073(, P)J
0 2 rm
(1)S
0 -2 rm
58 313 :M
.041 .004(and P)J
0 2 rm
(2)S
0 -2 rm
.04 .004( use some specific protocol for updating the state of)J
58 325 :M
.582(P)A
0 2 rm
.524(3)A
0 -2 rm
1.113 .111( \(e.g., P)J
0 2 rm
.524(1)A
0 -2 rm
1.226 .123( updates the state, but if P)J
0 2 rm
.524(1)A
0 -2 rm
1.093 .109( fails, P)J
0 2 rm
.524(2)A
0 -2 rm
1.609 .161( takes)J
58 337 :M
.724 .072(over\); at the same time, P)J
0 2 rm
.269(1)A
0 -2 rm
.518 .052( and P)J
0 2 rm
.269(2)A
0 -2 rm
.925 .092( remain responsive to)J
58 349 :M
.315 .032(clients by servicing requests directed to g)J
0 2 rm
.098(1)A
0 -2 rm
.317 .032(; eventually P)J
0 2 rm
(1)S
0 -2 rm
58 361 :M
1.698 .17(departs from g)J
0 2 rm
.495(1)A
0 -2 rm
1.008 .101(, and P)J
0 2 rm
.495(2)A
0 -2 rm
1.338 .134( departs from both g)J
0 2 rm
.495(1)A
0 -2 rm
.931 .093( and g)J
0 2 rm
.495(2)A
0 -2 rm
(,)S
58 374 :M
1.778 .178(leaving g)J
0 2 rm
.457(2)A
0 -2 rm
1.167 .117( to be the surviving group with P)J
0 2 rm
.457(1)A
0 -2 rm
.88 .088( and P)J
0 2 rm
.457(3)A
0 -2 rm
f0_9 sf
0 -3 rm
.412(*)A
0 3 rm
f0_10 sf
(.)S
58 386 :M
1.952 .195(This specific solution also suggests the possibility of)J
58 397 :M
.701 .07(using multiple groups for developing a general approach)J
58 408 :M
.19 .019(for performing online software upgrades in a system \(e.g.,)J
58 419 :M
.136 .014(replace component P)J
0 2 rm
(2)S
0 -2 rm
.052 .005( by P)J
0 2 rm
(3)S
0 -2 rm
(\).)S
.75 G
99 440 159 110 rC
30 82 115 485 @j
0 G
29 81 115 485 @f
.938 G
82 89 216 485.5 @j
0 G
81 88 216 485.5 @f
.75 G
30 82 210 485 @j
0 G
29 81 210 485 @f
gS
.82 .887 scale
130.552 541.098 :M
f0_12 sf
(P1)S
173.256 552.371 :M
(P3)S
134.213 518.552 :M
(g1)S
219.621 545.607 :M
(g2)S
284.287 551.244 :M
(P3)S
248.903 521.934 :M
(g1)S
132.992 615.499 :M
-.156(\(a\))A
252.564 615.499 :M
(\(b\))S
131.772 564.771 :M
(P2)S
245.243 544.48 :M
(P1)S
245.243 562.517 :M
(P2)S
gR
gR
gS 12 12 588 768 rC
123 560 :M
f2_10 sf
1.145 .114(Fig. 1: )J
f0_10 sf
2.884 .288(Multiple groups)J
76 571 :M
1.733 .173(The observations concerning failures and network)J
58 582 :M
1.385 .138(partitions made earlier have motivated us to develop a)J
58 593 :M
3.817 .382(membership service for Newtop that can support)J
58 604 :M
.755 .076(concurrent existence of multiple subgroups, leaving it to)J
58 615 :M
2.699 .27(applications to decide on the eventual fate of such)J
58 626 :M
1.695 .17(subgroups. Newtop provides causality preserving total)J
58 637 :M
2.632 .263(order delivery to members of a group, and permits)J
58 648 :M
1.103 .11(processes to belong to many groups, ensuring that total)J
58 659 :M
1.481 .148(order delivery is preserved even for such processes. It)J
58 670 :M
.544 .054(permits a multi-group process to use both symmetric and)J
58 681 :M
2.265 .226(asymmetric total order protocols in different groups.)J
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
58 694.24 -.24 .24 201.24 694 .24 58 694 @a
76 705 :M
f0_9 sf
.696(*)A
0 3 rm
2.198 .22( It is assumed that communication level changes in)J
0 -3 rm
94 718 :M
.758 .076(group names can be hidden from applications.)J
318 99 :M
f0_10 sf
1.805 .18(Despite this, Newtop is not complex; it offers a very)J
318 110 :M
.931 .093(simple method for dealing with multiple process groups)J
318 121 :M
.255 .026(and has low message space overhead \(the protocol related)J
318 132 :M
.391 .039(information contained in a multicast message is small\). If)J
318 143 :M
1.584 .158(order is not required, Newtop can provide just atomic)J
318 154 :M
.932 .093(delivery, ensuring that all the functioning members of a)J
318 165 :M
2.142 .214(group are delivered a multicast. In addition, Newtop)J
318 176 :M
3.788 .379(supports dynamic formation of new groups. This)J
318 187 :M
1.643 .164(formation protocol exploits the fact that processes are)J
318 198 :M
.423 .042(permitted to belong to several groups. This in turn means)J
318 209 :M
.353 .035(that there is no need for supporting an explicit facility for)J
318 220 :M
1.864 .186(joining a group \(as similar effect can be obtained by)J
318 231 :M
.841 .084(processes forming a new group and exiting the previous)J
318 242 :M
-.031(ones\).)A
336 253 :M
.327 .033(Existing protocols do not simultaneously meet all the)J
318 264 :M
.145 .015(facilities outlined above. This has motivated us to develop)J
318 275 :M
-.026(Newtop.)A
318 298 :M
f2_10 sf
3.97 .397(3. Basic Concepts)J
336 319 :M
f0_10 sf
1.1 .11(A )J
f4_10 sf
.649(group)A
f0_10 sf
1.927 .193( is defined as a collection of distributed)J
318 330 :M
.349 .035(processes in which a member process communicates with)J
318 341 :M
4.279 .428(other members only by multicasting to the full)J
318 352 :M
2.139 .214(membership of the group. A given process can be a)J
318 363 :M
2.253 .225(member of more than one group. We assume that a)J
318 374 :M
.769 .077(process execution consists of a sequence of events, each)J
318 385 :M
1.268 .127(event corresponding to the execution of an action by a)J
318 396 :M
2.922 .292(process. We will adopt )J
f4_10 sf
.896(send)A
0 2 rm
.543(i)A
0 -2 rm
.904(\(m\))A
f0_10 sf
.815 .081(, )J
f4_10 sf
.806(receive)A
0 2 rm
.543(i)A
0 -2 rm
.904(\(m\))A
f0_10 sf
2.548 .255( and)J
318 408 :M
f4_10 sf
.006(delivery)A
0 2 rm
(i)S
0 -2 rm
(\(m\))S
f0_10 sf
.024 .002( to denote the events of sending, receiving and)J
318 420 :M
.231 .023(delivering a message )J
f4_10 sf
.098(m)A
f0_10 sf
.129 .013(  by a process P)J
0 2 rm
.06 .006(i )J
0 -2 rm
.37 .037(respectively. \(We)J
318 432 :M
.743 .074(will drop suffix i if the identity of the process executing)J
318 443 :M
.803 .08(the action is not important.\) We distinguish the event of)J
318 454 :M
f4_10 sf
.118(receiving)A
f0_10 sf
.374 .037( a multicast message from the event of )J
f4_10 sf
.114(delivery)A
f0_10 sf
(,)S
318 465 :M
.689 .069(since a received message may have to be delayed before)J
318 476 :M
.64 .064(delivery in order to satisfy some ordering constraint. We)J
318 487 :M
-.018(will use the )A
f4_10 sf
-.022(happened before)A
f0_10 sf
-.018(  relation [10], denoted as ')A
f1_10 sf
(\256)S
f0_10 sf
(',)S
318 498 :M
1.188 .119(on )J
f4_10 sf
.566(send)A
f0_10 sf
.961 .096( and )J
f4_10 sf
.497(delivery)A
f0_10 sf
.281 .028( )J
f0_8 sf
0 -3 rm
.225 .022( )J
0 3 rm
f0_10 sf
1.678 .168(events in a given set of system)J
318 509 :M
.079 .008(events. \(If )J
f4_10 sf
.114 .011(send\(m\) )J
f5_10 sf
.058(\256)A
f4_10 sf
.114 .011( send\(m'\))J
f0_10 sf
.05 .005( then )J
f4_10 sf
.027(send)A
0 2 rm
(i)S
0 -2 rm
.069 .007(\(m\) )J
f5_10 sf
.058(\256)A
f4_10 sf
.082 .008( send)J
0 2 rm
(i)S
0 -2 rm
.031(\(m'\))A
318 521 :M
f0_10 sf
.851 .085(for some P)J
0 2 rm
.164(i)A
0 -2 rm
.327 .033( or )J
f4_10 sf
1.301 .13(delivery\(m\) )J
f5_10 sf
.582(\256)A
f4_10 sf
1.143 .114( send\(m'\))J
f0_10 sf
1.07 .107(\). For simplicity,)J
318 533 :M
.206 .021(we will denote )J
f4_10 sf
.07(send\(m\))A
f0_10 sf
.034 .003(  )J
f1_10 sf
.149(\256)A
f0_10 sf
( )S
f4_10 sf
.065(send\(m'\))A
f0_10 sf
.084 .008( as )J
f4_10 sf
.08 .008(m  )J
f1_10 sf
.156 .016(\256 )J
f4_10 sf
.071(m')A
f0_10 sf
(.)S
336 544 :M
.621 .062(We assume that processes fail only by crashing, i.e.,)J
318 555 :M
1.368 .137(by stopping to function. Communication failures could)J
318 566 :M
.139 .014(lead to network partitions causing the members of a group)J
318 577 :M
1.125 .112(to be split into disjoint subgroups, with the functioning)J
318 588 :M
1.289 .129(members in one subgroup unable to communicate with)J
318 599 :M
1.805 .18(the functioning members in the other sub-groups)J
f4_10 sf
.248(.)A
f0_10 sf
1.352 .135( We)J
318 610 :M
3.092 .309(assume the existence of a message transport layer)J
318 621 :M
5.431 .543(permitting uncorrupted and sequenced message)J
318 632 :M
-.037(transmission between a sender and destination processes, if)A
318 643 :M
-.058(the processes are alive and the destination processes are not)A
318 654 :M
.505 .05(partitioned from the sender. We assume an asynchronous)J
318 665 :M
2.101 .21(communication environment, so no assumption about)J
318 676 :M
.132 .013(message transmission time will be made.)J
336 687 :M
.776 .078(Let G)J
0 2 rm
.14(i)A
0 -2 rm
.541 .054( be the set of groups P)J
0 2 rm
.14(i)A
0 -2 rm
.647 .065( belongs to: G)J
0 3 rm
.14(i)A
0 -3 rm
.413 .041( = {g)J
0 3 rm
.253(x)A
0 -3 rm
.207 .021( |)J
318 700 :M
.082(P)A
0 3 rm
(i)S
0 -3 rm
( )S
f1_10 sf
.105(\316)A
f0_10 sf
.092 .009( g)J
0 3 rm
.073(x)A
0 -3 rm
.213 .021(}. Let us consider the membership of P)J
0 2 rm
(i)S
0 -2 rm
.154 .015( in a given)J
318 713 :M
2.362 .236(group g)J
0 3 rm
.651(x)A
0 -3 rm
1.002 .1(, g)J
0 3 rm
.651(x)A
0 -3 rm
.296 .03( )J
f1_10 sf
.929(\316)A
f0_10 sf
1.055 .105( G)J
0 3 rm
.362(i)A
0 -3 rm
1.203 .12( and let g)J
0 3 rm
.651(x)A
0 -3 rm
1.66 .166( be initially made up of)J
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(santosh shrivastava; page: 3 of 11)setjob
%%EndPageSetup
-12 -12 :T
gS 12 12 588 768 rC
58 99 :M
f0_10 sf
.79 .079(processes P)J
0 3 rm
.179(1)A
0 -3 rm
.291 .029(, P)J
0 3 rm
.179(2)A
0 -3 rm
.272 .027(, ... P)J
0 3 rm
.179(n)A
0 -3 rm
.472 .047(. When P)J
0 3 rm
.099(i)A
0 -3 rm
.627 .063( multicasts \(or delivers\))J
58 112 :M
1.259 .126(a message )J
f4_10 sf
.63(m)A
f0_10 sf
.764 .076( with )J
f4_10 sf
.428(m.g)A
f0_10 sf
.568 .057( = g)J
0 3 rm
.436(x)A
0 -3 rm
1.065 .107(, it actually does so only to)J
58 125 :M
.963 .096(\(or from\) those processes which it )J
f4_10 sf
.293(views)A
f0_10 sf
1.152 .115( as functioning)J
58 136 :M
2 .2(members of g)J
0 3 rm
.582(x)A
0 -3 rm
.945 .095(. P)J
0 3 rm
.323(i)A
0 -3 rm
1.717 .172( delivers its own messages also by)J
58 149 :M
.832 .083(executing the protocol in operation. When g)J
0 3 rm
.243(x)A
0 -3 rm
.65 .065( is initially)J
58 164 :M
.452 .045(formed, each functioning P)J
0 3 rm
.065(i)A
0 -3 rm
.303 .03( installs an initial view V)J
0 -3 rm
.116(0)A
0 3 rm
0 3 rm
.08(x,i)A
0 -3 rm
(,)S
58 179 :M
4.444 .444(say, V)J
0 -3 rm
1.392(0)A
0 3 rm
0 3 rm
.954(x,i)A
0 -3 rm
2.338 .234( = {P)J
0 3 rm
1.392(1)A
0 -3 rm
2.261 .226(, P)J
0 3 rm
1.392(2)A
0 -3 rm
2.119 .212(, ... P)J
0 3 rm
1.392(n)A
0 -3 rm
2.527 .253(}. If P)J
0 3 rm
.773(i)A
0 -3 rm
3.221 .322( is unable to)J
58 194 :M
3.22 .322(communicate with some P)J
0 3 rm
.806(k)A
0 -3 rm
.367 .037( )J
f1_10 sf
1.15(\316)A
f0_10 sf
1.306 .131( V)J
0 -3 rm
.806(0)A
0 3 rm
0 3 rm
.553(x,i)A
0 -3 rm
2.087 .209( \(this could be)J
58 207 :M
.569 .057(because P)J
0 3 rm
.17 .017(k )J
0 -3 rm
.48 .048(has crashed or disconnected or departed from)J
58 220 :M
.349(g)A
0 2 rm
.349(x)A
0 -2 rm
.646 .065(\), it)J
0 3 rm
.159 .016( )J
0 -3 rm
.964 .096(installs a new view that does not include P)J
0 3 rm
.349(k)A
0 -3 rm
.914 .091(. Let)J
58 235 :M
.286(V)A
0 -3 rm
.198(0)A
0 3 rm
0 3 rm
.136(x,i)A
0 -3 rm
.372 .037(, V)J
0 -3 rm
.198(1)A
0 3 rm
0 3 rm
.136(x,i)A
0 -3 rm
.372 .037(, V)J
0 -3 rm
.198(2)A
0 3 rm
0 3 rm
.136(x,i)A
0 -3 rm
.488 .049(,... V)J
0 -3 rm
.132(r)A
0 3 rm
0 3 rm
.136(x,i)A
0 -3 rm
.45 .045( be the series of views P)J
0 3 rm
.11(i)A
0 -3 rm
.482 .048( has)J
58 248 :M
.905 .09(thus sequentially installed over a period of time, until it)J
58 259 :M
.602 .06(crashes or leaves the group g)J
0 2 rm
.205(x)A
0 -2 rm
.52 .052(. \(Note that once P)J
0 2 rm
.114(i)A
0 -2 rm
.705 .071( leaves)J
58 271 :M
.467(g)A
0 2 rm
.467(x)A
0 -2 rm
1.37 .137(, it maintains no membership view for g)J
0 2 rm
.467(x)A
0 -2 rm
2.073 .207(.\) Newtop)J
58 283 :M
1.119 .112(provides each P)J
0 3 rm
.172(i)A
0 -3 rm
.484 .048( with a )J
f4_10 sf
1.415 .141(group-view )J
f0_10 sf
1.261 .126(process, denoted as)J
58 296 :M
.729(GV)A
0 3 rm
.346(x,i)A
0 -3 rm
1.082 .108(, for each g)J
0 3 rm
.505(x)A
0 -3 rm
.777 .078(, g)J
0 3 rm
.505(x)A
0 -3 rm
.23 .023( )J
f1_10 sf
.72(\316)A
f0_10 sf
.818 .082( G)J
0 3 rm
.281(i)A
0 -3 rm
1.937 .194(. The group-view process)J
58 309 :M
.186(GV)A
0 3 rm
.088(x,i)A
0 -3 rm
.405 .04( makes judicious use of timeouts for suspecting the)J
58 322 :M
.719 .072(absence of member processes; it executes a )J
f4_10 sf
.251(membership)A
58 333 :M
.628(protocol)A
f0_10 sf
1.933 .193(  with other members of the group to reach)J
58 344 :M
.19 .019(agreement on these suspicions, which if confirmed lead to)J
58 355 :M
-.013(an update of membership view \(installation of a new view\))A
58 366 :M
.292 .029(of P)J
0 3 rm
.069(i)A
0 -3 rm
.282 .028( for group g)J
0 3 rm
.125(x)A
0 -3 rm
(.)S
76 379 :M
.046 .005(In Newtop, a new view will always be a proper subset)J
58 390 :M
.901 .09(of the old view\(s\) since processes do not join the group)J
58 401 :M
.189 .019(they have departed. Processes wishing to join their former)J
58 412 :M
.097 .01(co-members do so by forming a new group. A process can)J
58 423 :M
.504 .05(take part in the formation of a new group while retaining)J
58 434 :M
1.931 .193(its existing memberships. Newtop thus eliminates the)J
58 445 :M
1.28 .128(need to support an explicit facility for process joins as)J
58 456 :M
2.588 .259(provided in current group communication protocols.)J
58 467 :M
2.193 .219(Former members creating a )J
f4_10 sf
.69(new)A
f0_10 sf
1.759 .176( group in Newtop is)J
58 478 :M
.063 .006(equivalent to the former processes of a group rejoining the)J
58 489 :M
.024 .002(same group with )J
f4_10 sf
(new)S
f0_10 sf
.033 .003( identifiers.)J
76 500 :M
1.727 .173(The Newtop membership protocol maintains view)J
58 511 :M
.813 .081(consistency in the presence of \(real or virtual\) partitions)J
58 522 :M
.208 .021(by permitting a group of processes to partition themselves)J
58 533 :M
.462 .046(into two or more sub-groups of connected processes with)J
58 544 :M
.368 .037(the property that: \(i\) the functioning processes within any)J
58 555 :M
2.643 .264(given subgroup will have identical views about the)J
58 566 :M
.459 .046(membership; and \(ii\) the views of processes belonging to)J
58 577 :M
.911 .091(different subgroups are guaranteed to stabilise into non-)J
58 588 :M
(intersecting ones.)S
76 599 :M
.5 .05(When a group partitions into subgroups, members of)J
58 610 :M
2.298 .23(every subgroup will consider themselves as the sole)J
58 621 :M
.707 .071(surviving members of the original \(unpartitioned\) group,)J
58 632 :M
.956 .096(and will not know the existence of other subgroups and)J
58 643 :M
1.406 .141(their memberships. Newtop leaves it to applications to)J
58 654 :M
.455 .045(decide whether or not the applications should continue to)J
58 665 :M
.632 .063(maintain more than one subgroup. This flexibility makes)J
58 676 :M
1.095 .11(Newtop different from 'primary-partition' protocols [14,)J
58 687 :M
1.487 .149(18] that can guarantee continued group operation only)J
58 698 :M
.614 .061(when the group partitions in such a way that exactly one)J
58 709 :M
.643 .064(subgroup can be uniquely identified as the primary. This)J
318 99 :M
1.511 .151(in turn requires at least a majority of processes in the)J
318 110 :M
4.147 .415(group to remain operational and connected; this)J
318 121 :M
.044 .004(requirement may not always be possible to meet.)J
336 132 :M
.744 .074(View updates must satisfy certain conditions so that)J
318 143 :M
1.586 .159(message delivery can be 'atomic' with respect to view)J
318 154 :M
.165 .016(updates. In Newtop, view updates performed by processes)J
318 165 :M
.213 .021(of a group g)J
0 3 rm
.092(x)A
0 -3 rm
.255 .025( satisfy the following )J
f4_10 sf
.473 .047(view consistency)J
f0_10 sf
.303 .03( \(VC\))J
318 178 :M
-.076(properties:)A
336 189 :M
f2_10 sf
1.438 .144(VC1: )J
f0_10 sf
1.344 .134(The sequence of views installed by any two)J
318 200 :M
.291 .029(member processes of g)J
0 3 rm
.081(x)A
0 -3 rm
.233 .023( that never crash nor suspect each)J
318 213 :M
-.06(other are identical )A
f4_10 sf
-.063(\(validity\).)A
336 226 :M
f2_10 sf
1.706 .171(VC2: )J
f0_10 sf
.843 .084(If a P)J
0 2 rm
.507(k)A
0 -2 rm
.23 .023( )J
f1_10 sf
.722(\316)A
f0_10 sf
.82 .082( V)J
0 -3 rm
.337(r)A
0 3 rm
0 3 rm
.347(x,i)A
0 -3 rm
1.222 .122( leaves g)J
0 3 rm
.507(x)A
0 -3 rm
1.261 .126( or crashes or gets)J
318 239 :M
.258 .026(disconnected from P)J
0 2 rm
(i)S
0 -2 rm
.105 .011( and if P)J
0 2 rm
(i)S
0 -2 rm
.151 .015( does not crash, then P)J
0 2 rm
(i)S
0 -2 rm
.158 .016( will)J
318 253 :M
1.489 .149(eventually install V)J
0 -3 rm
.195(r')A
0 3 rm
0 3 rm
.694 .069(x,i )J
0 -3 rm
.765 .076(such that r' > r and P)J
0 3 rm
.38(k)A
0 -3 rm
.173 .017( )J
f1_10 sf
.542(\317)A
f0_10 sf
.616 .062( V)J
0 -3 rm
.195(r')A
0 3 rm
0 3 rm
.391(x,i)A
0 -3 rm
318 266 :M
f4_10 sf
.019(\(liveness\).)A
336 277 :M
f2_10 sf
1.314 .131(VC3: )J
f0_10 sf
1.247 .125(any two member processes of g)J
0 3 rm
.39(x)A
0 -3 rm
.85 .085(  that never)J
318 290 :M
1.952 .195(crash, deliver the same set of messages between two)J
318 303 :M
.22 .022(consecutive views that are identical. That is, V)J
0 -3 rm
(r)S
0 3 rm
0 3 rm
.048(x,i)A
0 -3 rm
( )S
f1_10 sf
.076(\272)A
f0_10 sf
.112 .011( V)J
0 -3 rm
(r)S
0 3 rm
0 3 rm
.071(x,j)A
0 -3 rm
318 318 :M
3.304 .33(and V)J
0 -3 rm
.955(r+1)A
0 3 rm
0 3 rm
.703(x,i)A
0 -3 rm
.466 .047( )J
f1_10 sf
1.126(\272)A
f0_10 sf
1.661 .166( V)J
0 -3 rm
.955(r+1)A
0 3 rm
0 3 rm
1.872 .187(x,j )J
0 -3 rm
f1_10 sf
2.024(\336)A
f0_10 sf
1.643 .164( the set of )J
f4_10 sf
2.24 .224(m, m.g = g)J
0 3 rm
.91(x)A
0 -3 rm
f0_10 sf
(,)S
318 333 :M
.046 .005(delivered by P)J
0 3 rm
(i)S
0 -3 rm
.026 .003( and P)J
0 3 rm
(j)S
0 -3 rm
.022 .002( in V)J
0 -3 rm
(r)S
0 3 rm
0 3 rm
(x)S
0 -3 rm
.04 .004( are identical. VC3 states that)J
318 346 :M
.224 .022(the delivery of a message to the members of a group must)J
318 357 :M
.493 .049(be atomic with respect to a view update by the members.)J
318 368 :M
.304 .03(This atomic property has been called )J
f4_10 sf
.511 .051(virtual synchrony)J
f0_10 sf
.168 .017( in)J
318 379 :M
.323 .032(the ISIS system [4].)J
336 390 :M
.286 .029(Virtual synchrony provided by Newtop is different to)J
318 403 :M
1.18 .118(that of ISIS. Consider P)J
0 3 rm
.22(i)A
0 -3 rm
1.27 .127( multicasting )J
f4_10 sf
.573(m)A
f0_10 sf
.831 .083( in view V)J
0 -3 rm
.264(r)A
0 3 rm
0 3 rm
.272(x,i)A
0 -3 rm
(.)S
318 416 :M
.722 .072(Let this event be denoted as )J
f4_10 sf
.259(send)A
0 3 rm
.157(i)A
0 -3 rm
.214(\(m,r\).)A
f0_10 sf
.777 .078( Suppose that P)J
0 3 rm
(i)S
0 -3 rm
318 431 :M
2.208 .221(delivers )J
f4_10 sf
.887(m)A
f0_10 sf
1.288 .129( in view V)J
0 -3 rm
.315(r')A
0 3 rm
0 3 rm
.421(x,i)A
0 -3 rm
1.372 .137(, for some r' )J
cF f1_10 sf
.137(\263)A
sf
1.372 .137( r; denote this)J
318 444 :M
.593 .059(event as )J
f4_10 sf
.198(delivery)A
0 2 rm
.137(i)A
0 -2 rm
.184(\(m,r'\))A
f0_10 sf
.799 .08(. The virtual synchrony model of)J
318 456 :M
.224 .022(ISIS guarantees r' = r. Newtop can be modified to provide)J
318 467 :M
.231 .023(this closure property, but only at the necessary expense of)J
318 478 :M
1.473 .147(performance, by blocking )J
f4_10 sf
.352(send)A
f0_10 sf
1.188 .119( operations when a new)J
318 489 :M
1.211 .121(view is being installed \(this blocking occurs in ISIS as)J
318 500 :M
(well\).)S
336 511 :M
1.263 .126(In the presence of member crashes and departures,)J
318 522 :M
3.288 .329(Newtop has the following message delivery \(MD\))J
318 533 :M
.966 .097(properties for all )J
f4_10 sf
.494(m)A
f0_10 sf
.417 .042(  and )J
f4_10 sf
.32(m')A
f0_10 sf
.922 .092( multicast with )J
f4_10 sf
.336(m.g)A
f0_10 sf
.317 .032( = )J
f4_10 sf
.289(m'.g)A
f0_10 sf
.507 .051( =)J
318 544 :M
(g)S
0 2 rm
.054 .005(x )J
0 -2 rm
.123 .012(\(in stating them the suffix x will be dropped when only)J
318 556 :M
.47 .047(the group g)J
0 2 rm
.16(x)A
0 -2 rm
.465 .046( is considered\). We will use the notation)J
f4_10 sf
.397 .04( m.s)J
318 568 :M
f0_10 sf
.025 .002(to denote the sender of )J
f4_10 sf
(m)S
f0_10 sf
( .)S
336 579 :M
f2_10 sf
1.023 .102(MD1 )J
f4_10 sf
.217(\(validity\))A
f0_10 sf
.261 .026(: )J
f4_10 sf
.693 .069(for any m and r )J
cF f5_10 sf
.069(\263)A
sf
.693 .069( 0: delivery)J
0 3 rm
.165(i)A
0 -3 rm
.3(\(m,r\))A
318 594 :M
f5_10 sf
.302(\336)A
f4_10 sf
.228 .023(  m.s)J
f0_10 sf
.069 .007( )J
f1_10 sf
.218(\316)A
f0_10 sf
.248 .025( V)J
0 -3 rm
.102(r)A
0 3 rm
0 3 rm
.085(i)A
0 -3 rm
.433 .043(. In words: a process will deliver a message)J
318 609 :M
f4_10 sf
.209(m)A
f0_10 sf
.303 .03( in view V)J
0 -3 rm
.096(r)A
0 3 rm
.303 .03(, only if the sender of )J
f4_10 sf
.209(m)A
f0_10 sf
.222 .022( is in V)J
0 -3 rm
.096(r)A
0 3 rm
(.)S
336 620 :M
f2_10 sf
.39 .039(MD2 )J
f4_10 sf
.086(\(liveness\))A
f2_10 sf
.075(:)A
f0_10 sf
.051 .005( )J
f4_10 sf
.195 .019(for any m and r' )J
cF f5_10 sf
.019(\263)A
sf
.195 .019( r )J
cF f5_10 sf
.019(\263)A
sf
.195 .019( 0: )J
f5_10 sf
.051 .005( )J
f4_10 sf
.103(send)A
0 2 rm
.063(i)A
0 -2 rm
.114(\(m,r\))A
318 632 :M
f5_10 sf
.239(\336)A
f0_10 sf
.055 .005( )J
f4_10 sf
.277 .028( either  send)J
0 2 rm
.067(i)A
0 -2 rm
.345 .034(\(m,r\) )J
f1_10 sf
.239(\256)A
f4_10 sf
.443 .044( delivery)J
0 3 rm
.067(i)A
0 -3 rm
.258 .026(\(m,r'\)  or  send)J
0 2 rm
.067(i)A
0 -2 rm
.345 .034(\(m,r\) )J
f1_10 sf
(\256)S
318 645 :M
f4_10 sf
.335 .033(departure of P)J
0 2 rm
.054(i)A
0 -2 rm
.209 .021( from g)J
0 3 rm
.087(x)A
0 -3 rm
f0_10 sf
.191 .019(. In words: if a P)J
0 2 rm
.054(i)A
0 -2 rm
.197 .02( sends )J
f4_10 sf
.141(m)A
f0_10 sf
.233 .023( in view)J
318 660 :M
.08(V)A
0 -3 rm
(r)S
0 3 rm
0 2 rm
(i)S
0 -2 rm
.158 .016(, then provided it continues to function as a member of)J
318 674 :M
.143(g)A
0 2 rm
.143(x)A
0 -2 rm
.382 .038(, it will eventually deliver )J
f4_10 sf
.207(m)A
f0_10 sf
.341 .034( in some view V)J
0 -3 rm
.073(r')A
0 3 rm
0 2 rm
.079(i)A
0 -2 rm
.199 .02(, r' )J
cF f1_10 sf
.02(\263)A
sf
.199 .02( r.)J
336 688 :M
f2_10 sf
1.236 .124(MD3 )J
f4_10 sf
.286(\(atomicity\))A
f2_10 sf
.348 .035(: )J
f5_10 sf
.574 .057(" )J
f4_10 sf
.437(P)A
0 3 rm
.199(i)A
0 -3 rm
.612 .061(, P)J
0 3 rm
.315 .031(j )J
0 -3 rm
.907 .091(s.t. V)J
0 -3 rm
.278(r)A
0 3 rm
0 3 rm
.315 .031(i )J
0 -3 rm
f5_10 sf
.393(\272)A
f4_10 sf
.514 .051( V)J
0 -3 rm
.278(r)A
0 3 rm
0 3 rm
.315 .031(j )J
0 -3 rm
f5_10 sf
.509 .051(\331 )J
f4_10 sf
.437(V)A
0 -3 rm
.373(r+1)A
0 3 rm
0 3 rm
.315 .031(i )J
0 -3 rm
f5_10 sf
(\272)S
318 703 :M
f4_10 sf
.213(V)A
0 -3 rm
.182(r+1)A
0 3 rm
0 3 rm
.153 .015(j )J
0 -3 rm
.664 .066(: delivery)J
0 3 rm
.097(i)A
0 -3 rm
.497 .05(\(m,r\) )J
f5_10 sf
.376 .038(\333 )J
f4_10 sf
.141(delivery)A
0 3 rm
.097(j)A
0 -3 rm
.132(\(m,r\).)A
f0_10 sf
.5 .05( This property is)J
318 716 :M
.049 .005(equivalent to VC3.)J
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(santosh shrivastava; page: 4 of 11)setjob
%%EndPageSetup
-12 -12 :T
gS 12 12 588 768 rC
76 99 :M
f0_10 sf
.454 .045(Properties MD1 to MD3 together ensure live, atomic)J
58 110 :M
.232 .023(delivery in the presence of dynamic membership changes.)J
58 121 :M
2.503 .25(The additional property MD4 \(and its extension for)J
58 132 :M
.792 .079(multiple groups, MD4'\) ensure causality preserving total)J
58 143 :M
-.15(order message deliveries:)A
76 156 :M
f2_10 sf
1.028 .103(MD4 )J
f4_10 sf
1.097 .11(\(total order, single group\))J
f6_10 sf
.289 .029(: )J
f5_10 sf
.478 .048(" )J
f4_10 sf
.364(P)A
0 3 rm
.166(i)A
0 -3 rm
.509 .051(, P)J
0 3 rm
.262 .026(j )J
0 -3 rm
.755 .075(s.t. V)J
0 -3 rm
.232(r)A
0 3 rm
0 3 rm
.262 .026(i )J
0 -3 rm
f5_10 sf
(\272)S
58 171 :M
f4_10 sf
.159(V)A
0 -3 rm
.101(r)A
0 3 rm
0 3 rm
.115 .011(j )J
0 -3 rm
f5_10 sf
.185 .019(\331 )J
f4_10 sf
.159(V)A
0 -3 rm
.136(r+1)A
0 3 rm
0 3 rm
.115 .011(i )J
0 -3 rm
f5_10 sf
.143(\272)A
f4_10 sf
.187 .019( V)J
0 -3 rm
.136(r+1)A
0 3 rm
0 3 rm
.072(j)A
0 -3 rm
f0_10 sf
.115 .011(: )J
f4_10 sf
.105(delivery)A
0 3 rm
.072(i)A
0 -3 rm
.371 .037(\(m,r\) )J
f5_10 sf
.257(\256)A
f4_10 sf
.476 .048( delivery)J
0 3 rm
.072(i)A
0 -3 rm
.382 .038(\(m',r\) )J
f5_10 sf
(\333)S
58 184 :M
f4_10 sf
.404(delivery)A
0 3 rm
.279(j)A
0 -3 rm
1.429 .143(\(m,r\) )J
f5_10 sf
.991(\256)A
f4_10 sf
1.834 .183( delivery)J
0 3 rm
.279(j)A
0 -3 rm
.375(\(m',r\))A
f0_10 sf
.558 .056(; if )J
f4_10 sf
.404(delivery)A
0 3 rm
.279(i)A
0 -3 rm
.407(\(m,r\))A
f0_10 sf
1.308 .131( and)J
58 197 :M
f4_10 sf
.547(delivery)A
0 3 rm
.377(i)A
0 -3 rm
.476(\(m',r'\))A
f0_10 sf
1.524 .152( occur for a given P)J
0 2 rm
.377(i)A
0 -2 rm
1.16 .116( then )J
f4_10 sf
1.1 .11(m )J
f5_10 sf
1.34(\256)A
f4_10 sf
.812 .081( m' )J
f5_10 sf
(\336)S
58 210 :M
f4_10 sf
-.034(delivery)A
0 3 rm
(i)S
0 -3 rm
-.032(\(m,r\) )A
f5_10 sf
-.053(\256 )A
f4_10 sf
-.034(delivery)A
0 3 rm
(i)S
0 -3 rm
-.03(\(m',r'\))A
f0_10 sf
(.)S
76 223 :M
1.674 .167(Newtop extends the above delivery order also for)J
58 234 :M
1.162 .116(messages multicast in different groups, ensuring a total)J
58 245 :M
.886 .089(delivery order when the same messages are delivered to)J
58 256 :M
.705 .07(processes that simultaneously belong to multiple groups.)J
58 267 :M
.155 .015(Let )J
f5_10 sf
.079(m)A
f0_10 sf
.155 .015( be a message with )J
f5_10 sf
.079(m)A
f4_10 sf
.051(.g)A
f0_10 sf
.089 .009( = g)J
0 2 rm
.068(y)A
0 -2 rm
.106 .011( and )J
f1_10 sf
.075(r)A
f0_10 sf
.146 .015( )J
cF f1_10 sf
.015(\263)A
sf
.146 .015( 0 be an integer:)J
76 279 :M
f2_10 sf
1.814 .181(MD4' )J
f4_10 sf
1.982 .198(\(total order, multiple groups\))J
f6_10 sf
.49 .049(: )J
f5_10 sf
.81 .081(" )J
f4_10 sf
.617(P)A
0 3 rm
.281(i)A
0 -3 rm
.863 .086(, P)J
0 3 rm
.444 .044(j )J
0 -3 rm
.393(s.t.)A
58 294 :M
.825(V)A
0 -3 rm
.525(r)A
0 3 rm
0 3 rm
1.179 .118(x,i )J
0 -3 rm
f5_10 sf
.741(\272)A
f4_10 sf
.969 .097( V)J
0 -3 rm
.525(r)A
0 3 rm
0 3 rm
1.179 .118(x,j )J
0 -3 rm
f5_10 sf
.96 .096(\331 )J
f4_10 sf
.825(V)A
0 -3 rm
.704(r+1)A
0 3 rm
0 3 rm
1.179 .118(x,i )J
0 -3 rm
f5_10 sf
.741(\272)A
f4_10 sf
.969 .097( V)J
0 -3 rm
.704(r+1)A
0 3 rm
0 3 rm
1.179 .118(x,j )J
0 -3 rm
f5_10 sf
.96 .096(\331 )J
f4_10 sf
.825(V)A
f5_10 sf
0 -3 rm
.741(r)A
0 3 rm
f4_10 sf
0 3 rm
1.179 .118(y,i )J
0 -3 rm
f5_10 sf
.741(\272)A
f4_10 sf
.969 .097( V)J
f5_10 sf
0 -3 rm
.741(r)A
0 3 rm
f4_10 sf
0 3 rm
1.179 .118(y,j )J
0 -3 rm
f5_10 sf
(\331)S
58 309 :M
f4_10 sf
.391(V)A
f5_10 sf
0 -3 rm
.352(r)A
0 3 rm
f4_10 sf
0 -3 rm
.376(+1)A
0 3 rm
0 3 rm
.559 .056(y,i )J
0 -3 rm
f5_10 sf
.352(\272)A
f4_10 sf
.46 .046( V)J
f5_10 sf
0 -3 rm
.352(r)A
0 3 rm
f4_10 sf
0 -3 rm
.376(+1)A
0 3 rm
0 3 rm
.208(y,j)A
0 -3 rm
1.218 .122(: delivery)J
0 3 rm
.178(i)A
0 -3 rm
.912 .091(\(m,r\) )J
f5_10 sf
.632(\256)A
f4_10 sf
1.17 .117( delivery)J
0 3 rm
.178(i)A
0 -3 rm
.213(\()A
f5_10 sf
.369(m)A
f4_10 sf
.16(,)A
f5_10 sf
.352(r)A
f4_10 sf
.311 .031(\) )J
f5_10 sf
(\333)S
58 322 :M
f4_10 sf
.446(delivery)A
0 3 rm
.308(j)A
0 -3 rm
1.577 .158(\(m,r\) )J
f5_10 sf
1.094(\256)A
f4_10 sf
2.024 .202( delivery)J
0 3 rm
.308(j)A
0 -3 rm
.369(\()A
f5_10 sf
.638(m)A
f4_10 sf
.277(,)A
f5_10 sf
.608(r)A
f4_10 sf
.369(\))A
f0_10 sf
.615 .062(; if )J
f4_10 sf
.446(delivery)A
0 3 rm
.308(i)A
0 -3 rm
.449(\(m,r\))A
f0_10 sf
1.444 .144( and)J
58 335 :M
f4_10 sf
.724(delivery)A
0 3 rm
.5(i)A
0 -3 rm
.599(\()A
f5_10 sf
1.036(m)A
f4_10 sf
.45(,)A
f5_10 sf
.988(r)A
f4_10 sf
.599(\))A
f0_10 sf
2.02 .202( occur for a given P)J
0 2 rm
.5(i)A
0 -2 rm
1.537 .154( then )J
f4_10 sf
1.457 .146(m )J
f5_10 sf
1.776(\256)A
f4_10 sf
.409 .041( )J
f5_10 sf
2.718 .272(m \336)J
58 348 :M
f4_10 sf
-.031(delivery)A
0 3 rm
(i)S
0 -3 rm
-.029(\(m,r\) )A
f5_10 sf
-.076(\256)A
f4_10 sf
-.03( delivery)A
0 3 rm
(i)S
0 -3 rm
(\()S
f5_10 sf
(m)S
f4_10 sf
(,)S
f5_10 sf
(r)S
f4_10 sf
(\))S
f0_10 sf
(.)S
76 361 :M
1.119 .112(For a given delivered )J
f4_10 sf
.37(m')A
f0_10 sf
1.127 .113(, MD5 and MD5' state the)J
58 372 :M
.187 .019(situations in which the delivery of a causally precedent )J
f4_10 sf
.089(m)A
f0_10 sf
(,)S
58 383 :M
f4_10 sf
.122 .012(m )J
f5_10 sf
.149(\256)A
f4_10 sf
.137 .014( m')J
f0_10 sf
.249 .025(, is guaranteed by Newtop:)J
76 394 :M
f2_10 sf
.446 .045(MD5 )J
f4_10 sf
.499 .05(\(causal prefix, single group\))J
f2_10 sf
.126 .013(: )J
f4_10 sf
.318 .032(for any m and m')J
58 405 :M
.208 .021(s.t. m )J
f5_10 sf
.232(\256)A
f4_10 sf
.355 .035( m': delivery)J
0 3 rm
.065(i)A
0 -3 rm
.353 .035(\(m',r'\) )J
f5_10 sf
.232(\336)A
f4_10 sf
.291 .029(  delivery)J
0 3 rm
.065(i)A
0 -3 rm
.334 .033(\(m, r\))J
f0_10 sf
(.)S
76 420 :M
1.094 .109(In words: if )J
f4_10 sf
.873 .087(m' )J
f0_10 sf
1.318 .132(is delivered to P)J
0 2 rm
.421 .042(i )J
0 -2 rm
1.301 .13(in view V)J
0 -3 rm
.245(r')A
0 3 rm
0 2 rm
.266(i)A
0 -2 rm
1.348 .135( then)J
58 432 :M
1.679 .168(every )J
f4_10 sf
.954 .095(m, m )J
f5_10 sf
1.073(\256)A
f4_10 sf
1.409 .141(  m' and m.g=m'.g,)J
f0_10 sf
1.26 .126( is delivered to P)J
0 2 rm
.478 .048(i )J
0 -2 rm
.846(in)A
58 446 :M
5.555 .555(some view V)J
0 -3 rm
1.086(r)A
0 3 rm
0 2 rm
.907(i)A
0 -2 rm
4.95 .495(. \(Note that MD4 implies that)J
58 458 :M
f4_10 sf
-.043(delivery)A
0 3 rm
(i)S
0 -3 rm
-.041(\(m,r\) )A
f5_10 sf
-.067(\256 )A
f4_10 sf
-.043(delivery)A
0 3 rm
(i)S
0 -3 rm
-.038(\(m',r'\))A
f0_10 sf
-.063(.\))A
76 471 :M
.849 .085(In extending MD5 to messages that are multicast in)J
58 482 :M
.109 .011(different groups, we use the notation V)J
f0_9 sf
0 2 rm
.021(x,i)A
0 -2 rm
f1_10 sf
(X)S
f0_10 sf
(e)S
0 2 rm
(i)S
0 -2 rm
.087 .009( to denote the)J
58 494 :M
.428 .043(view V of a process P)J
0 2 rm
.096(i)A
0 -2 rm
.289 .029( for g)J
0 2 rm
.174(x)A
0 -2 rm
.426 .043( when the event e)J
0 2 rm
.096(i)A
0 -2 rm
.723 .072( occurred)J
58 506 :M
4.39 .439(in the execution sequence of P)J
0 2 rm
.801(i)A
0 -2 rm
5.043 .504(. For example,)J
58 520 :M
.76(V)A
f0_9 sf
0 2 rm
.324(x,i)A
0 -2 rm
f1_10 sf
.679(X)A
f4_10 sf
.424(delivery)A
0 2 rm
.292(i)A
0 -2 rm
.426(\(m,r\))A
f0_10 sf
1.045 .104( will be V)J
0 -3 rm
.35(r)A
0 3 rm
f0_9 sf
0 2 rm
.324(x,i)A
0 -2 rm
f0_10 sf
.487 .049( if )J
f4_10 sf
.424(delivery)A
0 2 rm
.292(i)A
0 -2 rm
.426(\(m,r\))A
f0_10 sf
1.281 .128( has)J
58 532 :M
.486 .049(occurred and )J
f4_10 sf
.144(m.g)A
f0_10 sf
.192 .019( = g)J
0 3 rm
.147(x)A
0 -3 rm
.236 .024(. Let )J
f5_10 sf
.17(m)A
f0_10 sf
.333 .033( be a message with )J
f5_10 sf
.17(m)A
f4_10 sf
.11(.g)A
f0_10 sf
.192 .019( = g)J
0 2 rm
(y)S
0 -2 rm
58 545 :M
.057 .006(and )J
f1_10 sf
(r)S
f0_10 sf
.05 .005( )J
cF f1_10 sf
.005(\263)A
sf
.05 .005( 0 be an integer.)J
76 556 :M
f2_10 sf
1.751 .175(MD5' )J
f4_10 sf
1.991 .199(\(causal prefix, multiple groups\))J
f6_10 sf
.473 .047(: )J
f4_10 sf
1.335 .133(for any m)J
58 567 :M
5.494 .549(and )J
f5_10 sf
2.531(m)A
f4_10 sf
3.052 .305( s.t. m )J
f5_10 sf
4.337(\256)A
f4_10 sf
.999 .1( )J
f5_10 sf
2.531(m)A
f4_10 sf
8.357 .836(: delivery)J
0 3 rm
1.221(i)A
0 -3 rm
1.463(\()A
f5_10 sf
2.531(m)A
f4_10 sf
1.099(,)A
f5_10 sf
2.412(r)A
f4_10 sf
2.134 .213(\) )J
f5_10 sf
2.649(\331)A
f6_10 sf
.999 .1( )J
f4_10 sf
5.057 .506(m.s )J
f5_10 sf
(\316)S
58 580 :M
f4_10 sf
.089(V)A
f4_9 sf
0 2 rm
.052(m.g,i)A
0 -2 rm
f5_10 sf
.094(X)A
f4_10 sf
.059(delivery)A
0 3 rm
(i)S
0 -3 rm
(\()S
f5_10 sf
.084(m)A
f4_10 sf
(,)S
f5_10 sf
.08(r)A
f4_10 sf
.071 .007(\) )J
f5_10 sf
.144(\336)A
f4_10 sf
.266 .027( delivery)J
0 3 rm
(i)S
0 -3 rm
.067(\(m\))A
f5_10 sf
.144(\256)A
f4_10 sf
.266 .027( delivery)J
0 3 rm
(i)S
0 -3 rm
(\()S
f5_10 sf
.084(m)A
f4_10 sf
(\))S
f0_10 sf
(.)S
76 593 :M
.611 .061(In words: if )J
f5_10 sf
.308(m)A
f4_10 sf
.121 .012( )J
f0_10 sf
.736 .074(is delivered to P)J
0 2 rm
.149(i)A
0 -2 rm
.711 .071( then this delivery is)J
58 605 :M
.008 .001(guaranteed to have happened after the delivery of every )J
f4_10 sf
(m,)S
58 616 :M
.52 .052(m )J
f5_10 sf
.633(\256)A
f4_10 sf
.146 .015(  )J
f5_10 sf
.37(m)A
f0_10 sf
.695 .069(, that was sent by a process in )J
f1_10 sf
.37(u)A
f0_10 sf
.731 .073(, where )J
f1_10 sf
.37(u)A
f0_10 sf
.442 .044( is P)J
0 2 rm
.178(i)A
0 -2 rm
.365('s)A
58 629 :M
.252 .025(view for )J
f4_10 sf
.099(m.g)A
f0_10 sf
.207 .021( when )J
f5_10 sf
.139 .014(m )J
f0_10 sf
.234 .023( is delivered to P)J
0 2 rm
.056(i)A
0 -2 rm
.051(.)A
f0_9 sf
0 -3 rm
(*)S
0 3 rm
76 641 :M
f0_10 sf
.495 .049(To explain MD5' and its importance, we will use the)J
58 652 :M
.428 .043(scenario depicted in fig. 2 which shows a causal message)J
58 663 :M
1.145 .114(chain, )J
f4_10 sf
.527(m)A
0 2 rm
.365(1)A
0 -2 rm
.166 .017( )J
f5_10 sf
.721(\256)A
f4_10 sf
.591 .059( m)J
0 2 rm
.365(2)A
0 -2 rm
.166 .017( )J
f5_10 sf
.721(\256)A
f4_10 sf
.591 .059( m)J
0 2 rm
.365(3)A
0 -2 rm
.166 .017( )J
f5_10 sf
.721(\256)A
f4_10 sf
.591 .059( m)J
0 2 rm
.365(4)A
0 -2 rm
f0_10 sf
.684 .068(, with )J
f4_10 sf
.527(m)A
0 2 rm
.365(1)A
0 -2 rm
f0_10 sf
.568 .057( and )J
f4_10 sf
.527(m)A
0 2 rm
.365(4)A
0 -2 rm
f0_10 sf
1.356 .136( having)J
58 675 :M
.246 .025(a common destination P)J
0 2 rm
(i)S
0 -2 rm
(.)S
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
58 704.24 -.24 .24 201.24 704 .24 58 704 @a
76 715 :M
f0_9 sf
.142(*)A
f0_10 sf
0 3 rm
.35 .035( When )J
0 -3 rm
f1_10 sf
0 3 rm
.181(m)A
0 -3 rm
f0_10 sf
0 3 rm
.439 .044(.g = m.g, MD5' is implied by MD5.)J
0 -3 rm
.75 G
347 113 177 147 rC
135 54 439.5 232 @j
0 G
134 53 439.5 232 @f
.938 G
135 55 433.5 139.5 @j
0 G
134 54 433.5 139.5 @f
43 131 477 186 @f
43 131 392 185 @f
-2 46 22 21 445 212.5 @l
450 214 -1 1 476 224 1 450 213 @a
-47 1 22 20 448 235 @l
-1 -1 454 235 1 1 475 224 @b
gS
.851 .786 scale
554.812 304.126 :M
f0_12 sf
(Pk)S
gR
66 114 23 21 475.5 147.5 @l
-1 -1 476 225 1 1 475 153 @b
-24 24 22 21 395 144.5 @l
400 146 -1 1 466 145 1 400 145 @a
gS
.851 .786 scale
555.988 181.967 :M
f0_12 sf
(Pl)S
451.373 180.694 :M
(Pq)S
gR
-88 -40 23 20 377.5 180 @l
-1 -1 380 177 1 1 394 149 @b
-114 -66 22 21 395 224.5 @l
-1 -1 396 221 1 1 395 151 @b
gS
.851 .786 scale
443.144 244.319 :M
f0_12 sf
(Ps)S
505.443 277.404 :M
(Pj)S
456.074 304.126 :M
(Pi)S
600.655 296.491 :M
(g1)S
592.426 221.414 :M
(g2)S
503.092 139.974 :M
(g3)S
409.056 248.136 :M
(g4)S
565.391 243.046 :M
-.334(m2)A
527.777 315.579 :M
-.334(m1)A
503.092 178.149 :M
-.334(m3)A
470.18 226.504 :M
-.334(m4)A
gR
gR
gS 346 102 179 159 rC
427 110 :M
f0_10 sf
(g3)S
gR
gS 12 12 588 768 rC
364 283 :M
f2_10 sf
.99 .099(Fig.2: )J
f0_10 sf
1.022 .102( Causal chain of messages.)J
336 294 :M
.239 .024(Suppose that a network partition disconnects P)J
0 2 rm
.068(k)A
0 -2 rm
.212 .021( from)J
318 306 :M
.292(P)A
0 2 rm
.146(i)A
0 -2 rm
.504 .05( and P)J
0 2 rm
.146(j)A
0 -2 rm
.529 .053( while )J
f4_10 sf
.379(m)A
0 2 rm
.262(1)A
0 -2 rm
f0_10 sf
.901 .09( is being multicast, and consequently)J
318 318 :M
1.526(P)A
0 2 rm
1.207 .121(i )J
0 -2 rm
4.116 .412(and P)J
0 2 rm
1.207 .121(j )J
0 -2 rm
3.606 .361(do not receive )J
f4_10 sf
1.981(m)A
0 2 rm
1.372(1)A
0 -2 rm
f0_10 sf
2.852 .285(. Say P)J
0 2 rm
1.067(s)A
0 -2 rm
2.638 .264( and P)J
0 2 rm
1.207 .121(i )J
0 -2 rm
1.675(are)A
318 330 :M
.6 .06(functioning processes that  never suspect each other, and)J
318 341 :M
f4_10 sf
.223(m)A
0 2 rm
.154(4)A
0 -2 rm
f0_10 sf
.357 .036( is delivered to P)J
0 2 rm
.12(s)A
0 -2 rm
.415 .041(. MD3 requires that )J
f4_10 sf
.223(m)A
0 2 rm
.154(4)A
0 -2 rm
f0_10 sf
.497 .05( be delivered)J
318 353 :M
.441 .044(to P)J
0 2 rm
.171 .017(i )J
0 -2 rm
.576 .058(as well. Meeting MD5' will then require any one of)J
318 365 :M
.364 .036(the following: \(a\) )J
f4_10 sf
.178(m)A
0 2 rm
.123(1)A
0 -2 rm
f0_10 sf
.424 .042( is somehow retrieved and delivered)J
318 377 :M
.265 .027(to P)J
0 2 rm
.065(i)A
0 -2 rm
.256 .026( before )J
f4_10 sf
.169(m)A
0 2 rm
.117(4)A
0 -2 rm
f0_10 sf
.25 .025( is delivered; \(b\) if )J
f4_10 sf
.169(m)A
0 2 rm
.117(1)A
0 -2 rm
f0_10 sf
.379 .038( cannot be retrieved)J
318 389 :M
.823 .082(\(because, say the partition is permanent\) then P)J
0 2 rm
.256(k)A
0 -2 rm
.935 .093( should)J
318 401 :M
.411 .041(be excluded from P)J
0 2 rm
.07(i)A
0 -2 rm
.29 .029('s view for g)J
0 2 rm
.126(1)A
0 -2 rm
.288 .029(, before )J
f4_10 sf
.183(m)A
0 2 rm
.126(4)A
0 -2 rm
f0_10 sf
.386 .039( is delivered)J
318 413 :M
.656 .066(to P)J
0 2 rm
.161(i)A
0 -2 rm
.819 .082(. In the latter case, the network failure that actually)J
318 425 :M
.411 .041(occurred )J
f4_10 sf
.093(during)A
f0_10 sf
.241 .024( the multicast of )J
f4_10 sf
.15(m)A
0 2 rm
.104(1)A
0 -2 rm
f0_10 sf
.26 .026(, is perceived by P)J
0 2 rm
.058(i)A
0 -2 rm
.179 .018( to)J
318 437 :M
.68 .068(have happened )J
f4_10 sf
.158(before)A
f0_10 sf
.538 .054( the multicast; the total ordering of)J
318 448 :M
1.039 .104(events by P)J
0 2 rm
.194(i)A
0 -2 rm
.982 .098( would indicate that P)J
0 2 rm
.349(k)A
0 -2 rm
1.167 .117( was excluded from)J
318 460 :M
.127(P)A
0 2 rm
.063(i)A
0 -2 rm
.249 .025('s view of g)J
0 2 rm
.114(1)A
0 -2 rm
.052 .005( )J
f4_10 sf
.097(before)A
f0_10 sf
.052 .005(  )J
f4_10 sf
.164(m)A
0 2 rm
.114(1)A
0 -2 rm
f0_10 sf
.4 .04( was multicast.)J
336 472 :M
1.252 .125(The situation where )J
f4_10 sf
.552(m)A
0 2 rm
.382(4)A
0 -2 rm
f0_10 sf
1.095 .109( must be delivered and any)J
318 484 :M
2.021 .202(causally preceding )J
f4_10 sf
.737(m)A
0 2 rm
.511(1)A
0 -2 rm
f0_10 sf
1.561 .156( cannot be retrieved, has arisen)J
318 496 :M
.127 .013(because of multiple overlapping groups; it would not have)J
318 507 :M
.436 .044(happened had all processes been communicating within a)J
318 518 :M
.094 .009(single group: the irretrievable loss of )J
f4_10 sf
(m)S
0 2 rm
(1)S
0 -2 rm
f0_10 sf
.1 .01( would then mean)J
318 530 :M
.247 .025(that P)J
0 2 rm
.086(k)A
0 -2 rm
.139 .014(, P)J
0 2 rm
(l)S
0 -2 rm
.175 .017(, and P)J
0 2 rm
.086(q)A
0 -2 rm
.232 .023( are disconnected from the rest, and )J
f4_10 sf
.124(m)A
0 2 rm
(4)S
0 -2 rm
318 542 :M
f0_10 sf
-.032(becomes an )A
f4_10 sf
-.034(orphan)A
f0_10 sf
-.029( message that is "erased" off the system)A
318 553 :M
.782 .078(\(see example 1 in section 5 and [4] for more examples\).)J
318 564 :M
1.973 .197(This situation can be avoided by piggybacking every)J
318 575 :M
3.268 .327(multicast with all causally preceding and unstable)J
318 586 :M
.405 .041(messages. \(A message is stable, if the process knows that)J
318 597 :M
4.272 .427(the message has been received by the intended)J
318 608 :M
2.747 .275(destinations\). With piggybacking, receiving )J
f4_10 sf
.937(m)A
0 2 rm
.649(4)A
0 -2 rm
f0_10 sf
1.674 .167( will)J
318 620 :M
2.899 .29(enable P)J
0 2 rm
.425(i)A
0 -2 rm
1.501 .15( to obtain )J
f4_10 sf
1.103(m)A
0 2 rm
.764(1)A
0 -2 rm
f0_10 sf
2.271 .227(. Newtop does not adopt this)J
318 632 :M
.385 .039(expensive mechanism, preferring to use option \(b\) above.)J
318 643 :M
.483 .048(Consequently, it has the advantage of low message space)J
318 654 :M
.065 .006(overhead \(which is even smaller than the overhead of ISIS)J
318 665 :M
1.726 .173(vector clocks\). MD5' specifies how situations such as)J
318 676 :M
-.003(depicted in fig. 4 are handled in Newtop: when the process)A
318 687 :M
.951 .095(is delivered a message, it is guaranteed that all causally)J
318 698 :M
.649 .065(preceding )J
f4_10 sf
.223(m)A
f0_10 sf
.404 .04( have have been delivered, if )J
f4_10 sf
.14(m.s)A
f0_10 sf
.462 .046( is currently)J
318 709 :M
.283 .028(in the process's view for )J
f4_10 sf
.106(m.g)A
f0_10 sf
(.)S
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(santosh shrivastava; page: 5 of 11)setjob
%%EndPageSetup
-12 -12 :T
gS 12 12 588 768 rC
.938 G
82 90 187 170 rC
93 174 80 14 rF
0 G
93.5 174.5 79 13 rS
.938 G
178 207 88 14 rF
0 G
178.5 207.5 87 13 rS
.938 G
155 244 73 15 rF
0 G
155.5 244.5 72 14 rS
.938 G
82 205 86 15 rF
0 G
82.5 205.5 85 14 rS
160 254 :M
f0_9 sf
(Transport Layer)S
85 215 :M
(Membership Service)S
181 216 :M
(Logical Clock System)S
98 183 :M
(View Installation)S
149 112 :M
(Total Order Delivery)S
6 54 24 27 143 222.5 @l
148 227 -1 1 170 240 1 148 226 @a
174 140 :M
(Atomic)S
174 151 :M
(Delivery)S
131 179 24 27 172 152.5 @l
-1 -1 132 175 1 1 167 155 @b
111 159 24 26 181 116 @l
-1 -1 130 175 1 1 176 120 @b
66 114 24 26 127 187 @l
-1 -1 128 207 1 1 127 193 @b
13 34 82 202 156 @k
205 162 -1 1 232 203 1 205 161 @a
13 45 93 201 119 @k
203 126 -1 1 234 202 1 203 125 @a
13 122 170 230 223 @k
-1 -1 205 242 1 1 225 226 @b
gR
gS 12 12 588 768 rC
105 269 :M
f0_10 sf
.197 .02(        )J
f2_10 sf
1.386 .139(Fig. 3:)J
f0_10 sf
1.813 .181( System architecture)J
76 280 :M
3.3 .33(Fig. 3 shows the basic system architecture of)J
58 291 :M
.829 .083(Newtop, depicting the abstraction hierarchy. The logical)J
58 302 :M
.553 .055(clock system, to be described in the next section, assigns)J
58 313 :M
1.024 .102(sequence numbers to messages and is used for message)J
58 324 :M
.109(ordering)A
f0_9 sf
0 -3 rm
.052 .005( )J
0 3 rm
f0_10 sf
.455 .045(\(note: strictly speaking, the logical clock system)J
58 335 :M
-.044(can be bypassed for providing just atomic delivery\).)A
58 358 :M
f2_10 sf
3.865 .386(4. Newtop without failures)J
76 373 :M
f0_10 sf
1.317 .132(We first consider a static, failure-free environment)J
58 384 :M
1.982 .198(where membership changes do not occur. In such an)J
58 395 :M
.899 .09(environment, the functionality provided by the transport)J
58 406 :M
1.44 .144(layer will be that of atomic delivery, so we need only)J
58 417 :M
-.039(concentrate on the provision of total order delivery.)A
58 440 :M
f2_10 sf
3.396 .34(4.1 Symmetric total order version)J
76 461 :M
f0_10 sf
.914 .091(To start with, we will consider only a single group,)J
58 472 :M
.37(g)A
0 3 rm
.37(x)A
0 -3 rm
.621 .062( = {P)J
0 3 rm
.37(1)A
0 -3 rm
.601 .06(, P)J
0 3 rm
.37(2)A
0 -3 rm
.485 .048(, ... , P)J
0 3 rm
.37(n)A
0 -3 rm
1.087 .109(} and as stated above, assume that)J
58 485 :M
.84 .084(no P)J
0 3 rm
.181(i)A
0 -3 rm
.61 .061(, 1 )J
cF f1_10 sf
.061(\243)A
sf
.61 .061( i )J
cF f1_10 sf
.061(\243)A
sf
.61 .061( n, ever fails or leaves g)J
0 2 rm
.326(x)A
0 -2 rm
.967 .097(. This means that)J
58 498 :M
2.743 .274(the initial membership view of P)J
0 3 rm
.478(i)A
0 -3 rm
1.147 .115( is g)J
0 2 rm
.86(x)A
0 -2 rm
1.782 .178( and that P)J
0 3 rm
(i)S
0 -3 rm
58 511 :M
1.055 .106(installs no other view. So, if V)J
0 2 rm
.725 .073(x,i )J
0 -2 rm
1.644 .164(denotes the \(current\))J
58 523 :M
1.676 .168(membership view of P)J
0 3 rm
.258(i)A
0 -3 rm
1.119 .112( at any given time, then V)J
0 2 rm
.318(x,i)A
0 -2 rm
.687 .069( =)J
58 538 :M
.247(V)A
0 -3 rm
.171(0)A
0 3 rm
0 2 rm
.312 .031(x,i )J
0 -2 rm
.346 .035(= g)J
0 2 rm
.171(x)A
0 -2 rm
.404 .04(. Each P)J
0 3 rm
.095(i)A
0 -3 rm
.523 .052( maintains a logical clock \(a counter\))J
58 551 :M
.236 .024(denoted as LC)J
0 3 rm
(i)S
0 -3 rm
.189 .019(, that is used for numbering messages as in)J
58 564 :M
-.108([10]:)A
76 575 :M
f4_10 sf
2.159 .216(CA1 \(Counter Advance during send)J
0 3 rm
.301(i)A
0 -3 rm
.467(\(m\)\))A
f0_10 sf
2.073 .207(: Before)J
58 588 :M
1.874 .187(sending )J
f4_10 sf
.488(m,)A
f0_10 sf
.674 .067( P)J
0 3 rm
.441 .044(i )J
0 -3 rm
2.581 .258(increments LC)J
0 3 rm
.279(i)A
0 -3 rm
1.306 .131( by one, and assigns the)J
58 601 :M
-.031(incremented value to the message number field )A
f4_10 sf
-.035(m.c)A
f0_10 sf
-.033(; and,)A
76 612 :M
f4_10 sf
.306 .031(CA2 \(Counter Advance during receive)J
0 3 rm
(i)S
0 -3 rm
.064(\(m\)\))A
f0_10 sf
.199 .02(: When P)J
0 3 rm
(i)S
0 -3 rm
58 625 :M
.426 .043(receives )J
f4_10 sf
.112(m,)A
f0_10 sf
.229 .023( it sets LC)J
0 3 rm
.064(i)A
0 -3 rm
.36 .036( = max{LC)J
0 3 rm
.064(i)A
0 -3 rm
.096 .01(, )J
f4_10 sf
.109(m.c)A
f0_10 sf
.168(}.)A
76 638 :M
.137 .014(Based on CA1 and CA2, the following two properties)J
58 649 :M
-.109(can be stated:)A
58 661 :M
f2_10 sf
.081(pr1)A
f0_10 sf
.071 .007(: )J
f4_10 sf
.074(send)A
0 3 rm
(i)S
0 -3 rm
.189 .019(\(m\) )J
f5_10 sf
.159(\256)A
f4_10 sf
.224 .022( send)J
0 3 rm
(i)S
0 -3 rm
.199 .02(\(m'\) )J
f5_10 sf
.159(\336)A
f4_10 sf
.176 .018( m.c < m'.c)J
f0_10 sf
.227 .023(; and)J
58 676 :M
f2_10 sf
.328(pr2)A
f0_10 sf
.289 .029(: )J
f4_10 sf
.773 .077(for any m, P)J
0 3 rm
.183(j)A
0 -3 rm
.149 .015( )J
f5_10 sf
.468(\316)A
f4_10 sf
1.067 .107( m.g: delivery)J
0 3 rm
.183(j)A
0 -3 rm
.768 .077(\(m\) )J
f5_10 sf
.648(\256)A
f4_10 sf
.912 .091( send)J
0 3 rm
.183(j)A
0 -3 rm
.848 .085(\(m''\) )J
f5_10 sf
(\336)S
76 689 :M
f4_10 sf
.659 .066(m.c < m''.c)J
f0_10 sf
(.)S
76 701 :M
2.005 .201(Together these two properties imply that for any)J
58 712 :M
.477 .048(distinct )J
f4_10 sf
.408 .041(m, m')J
f0_10 sf
.125 .012(: )J
f4_10 sf
.13(send\(m\))A
f5_10 sf
.28(\256)A
f4_10 sf
.55 .055( send\(m'\))J
f0_10 sf
.064 .006( )J
f1_10 sf
.28(\336)A
f0_10 sf
.064 .006(  )J
f4_10 sf
.134(m.c)A
f0_10 sf
.131 .013( < )J
f4_10 sf
.115(m'.c)A
f0_10 sf
.409 .041( [10].)J
336 99 :M
.334 .033(Each P)J
0 2 rm
.053(i)A
0 -2 rm
.25 .025( maintains a vector called the )J
f4_10 sf
.478 .048(Receive Vector)J
f0_10 sf
(,)S
318 111 :M
1.443 .144(denoted as RV)J
0 2 rm
.258(x,i.)A
0 -2 rm
1.102 .11( This vector has one integer field for)J
318 123 :M
.227 .023(every P)J
0 2 rm
(j)S
0 -2 rm
( )S
f1_10 sf
.091(\316)A
f0_10 sf
.103 .01( V)J
0 2 rm
.044(x,i)A
0 -2 rm
.174 .017(; this field records the counter value of the)J
318 135 :M
2.22 .222(latest message received from P)J
0 2 rm
.349(j)A
0 -2 rm
1.303 .13(. Let D)J
0 2 rm
.43(x,i)A
0 -2 rm
1.835 .183( denote the)J
318 147 :M
1.955 .195(minimum value in RV)J
0 2 rm
.366(x,i)A
0 -2 rm
1.026 .103(: D)J
0 2 rm
.974 .097(x,i )J
0 -2 rm
2.514 .251(= min{RV)J
0 2 rm
.366(x,i)A
0 -2 rm
.87 .087([j] | P)J
0 2 rm
.297(j)A
0 -2 rm
.243 .024( )J
f1_10 sf
(\316)S
318 159 :M
f0_10 sf
.958(V)A
0 2 rm
1.211 .121(x,i )J
0 -2 rm
1.505 .15(}. As V)J
0 2 rm
1.211 .121(x,i )J
0 -2 rm
2.744 .274(includes P)J
0 2 rm
.369(i)A
0 -2 rm
1.247 .125(, D)J
0 2 rm
.454(x,i)A
0 -2 rm
1.234 .123( )J
cF f1_10 sf
.123(\243)A
sf
1.234 .123( LC)J
0 2 rm
.369(i)A
0 -2 rm
1.622 .162( at any given)J
318 171 :M
.658 .066(time. Recall that messages from a given process are sent)J
318 182 :M
.802 .08(with increasing numbers and are received in FIFO order)J
318 193 :M
.237 .024(\(transport layer assumption\). Therefore, D)J
0 2 rm
.039(x,i)A
0 -2 rm
.107 .011( )J
cF f1_10 sf
.011(\243)A
sf
.107 .011( LC)J
0 2 rm
.05 .005(j )J
0 -2 rm
.173 .017(for all)J
318 205 :M
.273(P)A
0 2 rm
.136(j)A
0 -2 rm
.112 .011( )J
f1_10 sf
.35(\316)A
f0_10 sf
.398 .04( V)J
0 2 rm
.168(x,i)A
0 -2 rm
.472 .047( and P)J
0 2 rm
.216 .022(i )J
0 -2 rm
.682 .068(is guaranteed not to receive any new )J
f4_10 sf
(m)S
318 217 :M
f0_10 sf
.217 .022(such that)J
f4_10 sf
.137 .014( m.c)J
f0_10 sf
.085 .008( )J
cF f1_10 sf
.008(\243)A
sf
.085 .008( D)J
0 2 rm
.039(x,i)A
0 -2 rm
.104 .01(. So P)J
0 2 rm
(i)S
0 -2 rm
.174 .017( can 'safely' deliver all received)J
318 229 :M
f4_10 sf
1.178 .118(m, m.c)J
f0_10 sf
.527 .053( )J
cF f1_10 sf
.053(\243)A
sf
.527 .053( D)J
0 2 rm
.245(x,i)A
0 -2 rm
.923 .092(. Bearing in mind that P)J
0 2 rm
.199(i)A
0 -2 rm
.866 .087( is not a member)J
318 241 :M
.192 .019(of any other group, the message delivery conditions for P)J
0 3 rm
(i)S
0 -3 rm
318 254 :M
-.022(in g)A
0 2 rm
(x)S
0 -2 rm
-.024( are stated below:)A
318 266 :M
f2_10 sf
.491(safe1:)A
f0_10 sf
1.287 .129( a received )J
f4_10 sf
.852(m)A
f0_10 sf
.492 .049(, )J
f4_10 sf
.579(m.g)A
f0_10 sf
.769 .077( = g)J
0 2 rm
.59(x)A
0 -2 rm
1.371 .137(, is deliverable if )J
f4_10 sf
.557(m.c)A
f0_10 sf
.857 .086( )J
cF f1_10 sf
.857 .086(\243)J
sf
318 278 :M
.258(D)A
0 2 rm
.122(x,i)A
0 -2 rm
(;)S
318 290 :M
f2_10 sf
.443(safe2:)A
f0_10 sf
1.72 .172( deliverable messages are delivered in the non-)J
318 301 :M
.297 .03(decreasing order of their numbers; a fixed pre-determined)J
318 312 :M
-.027(delivery order is imposed on deliverable messages of equal)A
318 323 :M
(number.)S
336 334 :M
1.066 .107(The two )J
f4_10 sf
2.098 .21(safety conditions)J
f0_10 sf
1.274 .127( ensure that the received)J
318 345 :M
-.047(messages are delivered in total order provided they become)A
318 356 :M
1.709 .171(deliverable. A received message can be guaranteed to)J
318 367 :M
1.921 .192(become deliverable, only if processes in V)J
0 2 rm
.394(x,i)A
0 -2 rm
2.177 .218( remain)J
318 379 :M
f4_10 sf
1.051 .105(lively )J
f0_10 sf
1.027 .103( by sending messages so that D)J
0 2 rm
.675 .067(x,i )J
0 -2 rm
1.83 .183(increases with)J
318 391 :M
2.903 .29(time. Newtop provides each process with a simple)J
318 402 :M
.241 .024(mechanism, called the )J
f4_10 sf
.053(time-silence,)A
f0_10 sf
.197 .02( that enables a process)J
318 413 :M
.982 .098(to remain lively by sending )J
f4_10 sf
1.66 .166(null messages)J
f0_10 sf
1.116 .112( during those)J
318 424 :M
.768 .077(periods it is not generating computational messages. We)J
318 435 :M
.673 .067(assume that this mechanism for a given P)J
0 2 rm
.196 .02(i )J
0 -2 rm
.96 .096(prompts P)J
0 2 rm
.124(i)A
0 -2 rm
.383 .038( to)J
318 447 :M
.343 .034(send a null message, if no \(null or non-null\) message was)J
318 458 :M
1.044 .104(sent by P)J
0 2 rm
.363 .036(i )J
0 -2 rm
1.014 .101(in the past interval of a fixed length, say, )J
f5_10 sf
.566(w)A
f0_10 sf
(.)S
318 470 :M
.835 .083(Null messages contain only protocol related information)J
318 481 :M
.226 .023(\(such as number, destination group identifiers etc.\). When)J
318 492 :M
.449 .045(a null message is sent or received by P)J
0 2 rm
.096(i)A
0 -2 rm
.439 .044(, LC)J
0 2 rm
.096(i)A
0 -2 rm
.551 .055( is advanced)J
318 504 :M
-.013(as per CA1 and CA2; however, when it is due for delivery,)A
318 515 :M
.204 .02(it is not supplied for processing.)J
336 526 :M
-.013(The time-silence mechanism can increase the message)A
318 537 :M
.467 .047(overhead of the protocol. However, such a mechanism or)J
318 548 :M
.634 .063(some equivalent one \(such as periodic exchange of 'I am)J
318 559 :M
.475 .048(alive' or 'synchronise' messages by processes\) is essential)J
318 570 :M
1.231 .123(for ensuring the liveness of any )J
f4_10 sf
1.946 .195(symmetric )J
f0_10 sf
1.263 .126( total order)J
318 581 :M
.527 .053(protocol \(e.g., see [15, 16]\). Also, more importantly, it is)J
318 592 :M
1.972 .197(essential for the detection of process crashes without)J
318 603 :M
2.442 .244(which a \(synchronous or asynchronous\) membership)J
318 614 :M
1.695 .17(service cannot be built \(irrespective of the total order)J
318 625 :M
.057 .006(protocol being symmetric or asymmetric\).)J
336 636 :M
.073 .007(We will now remove the single group assumption and)J
318 647 :M
.537 .054(permit P)J
0 3 rm
.079(i)A
0 -3 rm
.345 .034( to be a member of more than one group. Let G)J
0 2 rm
(i)S
0 -2 rm
318 660 :M
.905 .091(be the set of groups P)J
0 2 rm
.21(i)A
0 -2 rm
.967 .097( belongs to: G)J
0 3 rm
.21(i)A
0 -3 rm
.617 .062( = {g)J
0 3 rm
.377(x)A
0 -3 rm
.395 .039( | P)J
0 3 rm
.21(i)A
0 -3 rm
.171 .017( )J
f1_10 sf
.538(\316)A
f0_10 sf
.472 .047( g)J
0 3 rm
.377(x)A
0 -3 rm
.551(},)A
318 673 :M
.293(|G)A
0 3 rm
.176(i)A
0 -3 rm
.879 .088(| > 1. Each process in the system maintains only one)J
318 686 :M
1.162 .116(LC, irrespective of the number of groups it belongs to;)J
318 697 :M
2.783 .278(further, this LC is advanced as per CA1 and CA2)J
318 708 :M
.983 .098(irrespective of the group in which that process sends or)J
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(santosh shrivastava; page: 6 of 11)setjob
%%EndPageSetup
-12 -12 :T
gS 12 12 588 768 rC
58 99 :M
f0_10 sf
2.813 .281(receives \(null or non-null\) messages. Therefore the)J
58 110 :M
.386 .039(properties pr1 and pr2 will be true for all messages in the)J
58 121 :M
.93 .093(system. A process P)J
0 2 rm
.157(i)A
0 -2 rm
.926 .093( maintains a distinct receive vector)J
58 133 :M
.581(RV)A
0 3 rm
.287(x,i)A
0 -3 rm
1.002 .1( for each group g)J
0 3 rm
.418(x)A
0 -3 rm
.669 .067( in G)J
0 3 rm
.232(i)A
0 -3 rm
1.36 .136(, representing )J
f4_10 sf
.395(m.c)A
f0_10 sf
.822 .082( of the)J
58 146 :M
1.626 .163(last )J
f4_10 sf
1.075(m)A
f0_10 sf
2.187 .219( received from every P)J
0 2 rm
.414(j)A
0 -2 rm
.338 .034( )J
f1_10 sf
1.061(\316)A
f0_10 sf
1.206 .121( V)J
0 2 rm
.51(x,i)A
0 -2 rm
1.546 .155(. Let D)J
0 2 rm
.414(i)A
0 -2 rm
1.526 .153( be the)J
58 158 :M
.938 .094(minimum of all D)J
0 2 rm
.206(x,i)A
0 -2 rm
.869 .087( computed for every g)J
0 2 rm
.375 .037(x )J
0 -2 rm
.75 .075(in G)J
0 2 rm
.167(i)A
0 -2 rm
.577 .058(: D)J
0 2 rm
.167(i)A
0 -2 rm
.444 .044( =)J
58 170 :M
.698(min{D)A
0 2 rm
1.155 .116(x,i )J
0 -2 rm
.475 .047(| )J
f1_10 sf
1.016 .102(" )J
f0_10 sf
.633(g)A
0 2 rm
.633(x)A
0 -2 rm
.288 .029( )J
f1_10 sf
.902(\316)A
f0_10 sf
1.025 .102( G)J
0 2 rm
.352(i)A
0 -2 rm
1.697 .17(}. Then, it is only necessary to)J
58 182 :M
-.047(modify the delivery condition safe1 to:)A
58 193 :M
f2_10 sf
.625 .063(safe1': )J
f0_10 sf
.52 .052(a received )J
f4_10 sf
.269(m)A
f0_10 sf
.596 .06( is deliverable)J
f4_10 sf
.085 .008( )J
f0_10 sf
.246 .025(if )J
f4_10 sf
.176(m.c)A
f0_10 sf
.274 .027( )J
cF f1_10 sf
.027(\243)A
sf
.274 .027( D)J
0 2 rm
.103(i)A
0 -2 rm
(.)S
76 205 :M
3.072 .307(The time-silence mechanism of P)J
0 3 rm
.453(i)A
0 -3 rm
2.545 .255( will operate)J
58 218 :M
1.036 .104(independently for each g)J
0 3 rm
.282(x)A
0 -3 rm
.451 .045( in G)J
0 2 rm
.157(i)A
0 -2 rm
.936 .094(, prompting P)J
0 2 rm
.157(i)A
0 -2 rm
.551 .055( to send a)J
58 231 :M
.447 .045(null message in a given group g)J
0 2 rm
.16(x)A
0 -2 rm
.407 .041(, if no \(null or non-null\))J
58 243 :M
1.253 .125(message was sent by P)J
0 2 rm
.369 .037(i )J
0 -2 rm
1.093 .109(in that group g)J
0 2 rm
.525 .052(x )J
0 -2 rm
.927 .093(for the past )J
f5_10 sf
(w)S
58 255 :M
f0_10 sf
1.366 .137(time units. This ensures that D)J
0 3 rm
.31(x,i)A
0 -3 rm
1.111 .111( of different g)J
0 3 rm
.453(x)A
0 -3 rm
.724 .072( in G)J
0 3 rm
(i)S
0 -3 rm
58 268 :M
-.008(advance independent of each other and that the value of D)A
0 2 rm
(i)S
0 -2 rm
58 280 :M
1.482 .148(increases with time, ensuring that any received )J
f4_10 sf
.665(m)A
f0_10 sf
1.187 .119( will)J
58 291 :M
-.092(eventually become deliverable.)A
76 302 :M
.625 .063(Conditions )J
f2_10 sf
.115(safe1')A
f0_10 sf
.22 .022( and )J
f2_10 sf
.123(safe2)A
f0_10 sf
.351 .035( ensure that a received )J
f4_10 sf
(m)S
58 313 :M
f0_10 sf
.895 .09(becomes deliverable for P)J
0 2 rm
.131(i)A
0 -2 rm
.442 .044( only after a )J
f4_10 sf
.594 .059(m', m'.c )J
cF f5_10 sf
.059(\263)A
sf
.594 .059( m.c)J
f0_10 sf
.424 .042(, is)J
58 325 :M
.478 .048(received from every P)J
0 2 rm
.077(j)A
0 -2 rm
.063 .006( )J
f1_10 sf
.196(\316)A
f0_10 sf
.223 .022( V)J
0 2 rm
.094(x,i)A
0 -2 rm
.26 .026( and for all g)J
0 2 rm
.138(x)A
0 -2 rm
.22 .022( in G)J
0 2 rm
.077(i)A
0 -2 rm
.497 .05(. These)J
58 337 :M
.418 .042(conditions, together with the time-silence mechanism can)J
58 348 :M
-.033(therefore cope with arbitrarily complex group structures.)A
58 371 :M
f2_10 sf
3.411 .341(4.2 Asymmetric total order version)J
76 392 :M
f0_10 sf
1.039 .104(The asymmetric version of Newtop uses one of the)J
58 403 :M
.085 .008(members of a group as a sequencer for ordering messages.)J
58 414 :M
.062 .006(Though the main idea behind the protocol for single group)J
58 425 :M
.005 .001(members has been known for a long time, Newtop extends)J
58 436 :M
2.442 .244(this idea to overlapping groups with great ease and)J
58 447 :M
.222 .022(simplicity. Specifically, unlike [9], it does not require that)J
58 458 :M
-.029(a common sequencer be chosen for overlapping groups nor)A
58 469 :M
2.837 .284(that the sequencers of different overlapping groups)J
58 480 :M
.029 .003(coordinate their sequencing activities. Further, as we show)J
58 491 :M
1.508 .151(in the next sub-section, Newtop permits a multi-group)J
58 502 :M
1.512 .151(member process to execute asymmetric version in one)J
58 513 :M
(group and symmetric version in another group.)S
76 524 :M
.655 .065(We first consider the case of a process P)J
0 2 rm
.136(i)A
0 -2 rm
1.097 .11( belonging)J
58 536 :M
1.548 .155(only to one group g)J
0 2 rm
.583(x)A
0 -2 rm
1.578 .158( \(recall that in a failure-free and)J
58 548 :M
2.694 .269(static-membership environment, each P)J
0 2 rm
.317(i)A
0 -2 rm
.259 .026( )J
f1_10 sf
.813(\316)A
f0_10 sf
.713 .071( g)J
0 2 rm
.57(x)A
0 -2 rm
1.218 .122( has an)J
58 562 :M
.234 .023(identical view V)J
0 2 rm
.044(x,i)A
0 -2 rm
.095 .009( = V)J
0 -3 rm
.064(0)A
0 3 rm
0 2 rm
.116 .012(x,i )J
0 -2 rm
.129 .013(= g)J
0 2 rm
.064(x)A
0 -2 rm
.203 .02(\). To multicast a message)J
58 574 :M
f4_10 sf
.684(m)A
f0_10 sf
.674 .067( in g)J
0 2 rm
.474(x)A
0 -2 rm
.77 .077(, P)J
0 2 rm
.263(i)A
0 -2 rm
1.267 .127( unicasts it)J
f4_10 sf
.215 .022( )J
f0_10 sf
1.493 .149(to a member process, called the)J
58 586 :M
f4_10 sf
.446(sequencer)A
f0_10 sf
1.281 .128(, which P)J
0 2 rm
.275(i)A
0 -2 rm
1.255 .126( selects out of the processes in its)J
58 598 :M
1.42 .142(\(current\) membership view of g)J
0 2 rm
.488 .049(x )J
0 -2 rm
1.628 .163(using a deterministic)J
58 610 :M
2.101 .21(algorithm \(so processes that have the same view are)J
58 621 :M
.324 .032(guaranteed to choose the same sequencer\). The sequencer)J
58 632 :M
.127 .013(multicasts the unicast messages it receives to all processes)J
58 643 :M
.345 .035(in its view in the received order and P)J
0 2 rm
.075(i)A
0 -2 rm
.545 .055( delivers messages)J
58 655 :M
.183 .018(\(including its own\) in the order they are received from the)J
58 666 :M
.426 .043(sequencer process. \(A process that also happens to be the)J
58 677 :M
2.12 .212(sequencer will logically  follow the same procedure,)J
58 688 :M
.728 .073(unicasting to itself, and then multicasting.\) Each process)J
58 699 :M
.024 .002(maintains the logical clock according to the rules CA1 and)J
58 710 :M
.292 .029(CA2; sending and receiving of unicasts update the logical)J
318 99 :M
.854 .085(clock exactly in the same manner as multicasts do. This)J
318 110 :M
.383 .038(ensures that the messages that were consecutively unicast)J
318 121 :M
.111 .011(by a given process will be multicast by the sequencer with)J
318 132 :M
2.264 .226(increasing message numbers. So, when P)J
0 2 rm
.532 .053(i )J
0 -2 rm
2.527 .253(receives a)J
318 144 :M
.739 .074(multicast message )J
f4_10 sf
.268(m)A
f0_10 sf
.504 .05(, it will no longer receive a message)J
318 155 :M
2.729 .273(with number smaller than )J
f4_10 sf
.797(m.c)A
f0_10 sf
2.044 .204( and hence P)J
0 2 rm
.743 .074(i )J
0 -2 rm
2.908 .291(can be)J
318 167 :M
-.077(delivered )A
f4_10 sf
-.141(m)A
f0_10 sf
-.084( straightaway.)A
336 178 :M
.205 .02(Before extending the above scheme to the case where)J
318 189 :M
.487(P)A
0 2 rm
.244(i)A
0 -2 rm
1.291 .129( can belong to multiple groups, we will observe that)J
318 201 :M
.689 .069(when P)J
0 2 rm
.103(i)A
0 -2 rm
.558 .056( is not the sequencer, it disseminates its message)J
318 213 :M
f4_10 sf
.466(m)A
f0_10 sf
.845 .084( to the group members \(not by a direct multicast as in)J
318 224 :M
3.318 .332(symmetric version, but\) indirectly through another)J
318 235 :M
1.443 .144(process. When the sequencer multicasts )J
f4_10 sf
.574(m)A
f0_10 sf
.904 .09(, it assigns a)J
318 246 :M
.22 .022(new )J
f4_10 sf
.076(m.c)A
f0_10 sf
.227 .023( which will be different from, and larger than, the)J
318 257 :M
1.612 .161(number P)J
0 2 rm
.209(i)A
0 -2 rm
.869 .087( assigned to )J
f4_10 sf
.543(m)A
f0_10 sf
.824 .082( in its unicast. P)J
0 2 rm
.209(i)A
0 -2 rm
1.306 .131( cannot know)J
318 269 :M
1.079 .108(the new )J
f4_10 sf
1.061 .106(m.c )J
f0_10 sf
.772 .077( of its own )J
f4_10 sf
.644(m)A
f0_10 sf
.881 .088( until  it receives )J
f4_10 sf
.644(m)A
f0_10 sf
1.168 .117( from the)J
318 280 :M
.847 .085(sequencer. Therefore P)J
0 2 rm
.107(i)A
0 -2 rm
.71 .071( observes the following blocking)J
318 292 :M
.221 .022(rule when it is a member of multiple groups:)J
318 303 :M
f2_10 sf
1.673 .167(Send Blocking Rule: )J
f0_10 sf
2.049 .205(A multi-group member process)J
318 314 :M
1.309(P)A
0 2 rm
.654(i)A
0 -2 rm
3.25 .325( must delay unicasting of a message )J
f4_10 sf
1.699(m)A
f0_10 sf
2.469 .247( \(to the)J
318 326 :M
2.764 .276(sequencer\), until it has received \(from the relevant)J
318 337 :M
.843 .084(sequencers\) all the previous )J
f4_10 sf
.239(m')A
f0_10 sf
.213 .021(, )J
f4_10 sf
.716 .072(m'.g )J
cF f5_10 sf
.072(\271)A
sf
.716 .072( m.g)J
f0_10 sf
.633 .063(, which it has)J
318 348 :M
.025(unicast.)A
336 359 :M
.137 .014(The above rule ensures that the number given to )J
f4_10 sf
.07(m)A
f0_10 sf
.101 .01( by)J
318 370 :M
.272(P)A
0 2 rm
.136(i)A
0 -2 rm
.654 .065( \(and therefore by the sequencer of )J
f4_10 sf
.24(m.g)A
f0_10 sf
.642 .064(\) will be larger)J
318 382 :M
1.326 .133(than the number given to )J
f4_10 sf
.454(m')A
f0_10 sf
1.135 .113( by the sequencer of )J
f4_10 sf
.409(m'.g)A
f0_10 sf
(.)S
318 393 :M
2.341 .234(That is, consecutive messages disseminated by P)J
0 2 rm
.564 .056(i )J
0 -2 rm
.998(in)A
318 405 :M
2.624 .262(different groups are guaranteeed to be multicast by)J
318 416 :M
-.071(respective sequencers with increasing numbers.)A
336 427 :M
2.01 .201(Let G)J
0 3 rm
.363(i)A
0 -3 rm
1.069 .107( = {g)J
0 3 rm
.654(x)A
0 -3 rm
.684 .068( | P)J
0 3 rm
.363(i)A
0 -3 rm
.297 .03( )J
f1_10 sf
.933(\316)A
f0_10 sf
.818 .082( g)J
0 3 rm
.654(x)A
0 -3 rm
1.563 .156(} and |G)J
0 3 rm
.363(i)A
0 -3 rm
.966 .097(| )J
cF f1_10 sf
.097(\263)A
sf
.966 .097( 1. P)J
0 2 rm
.363(i)A
0 -2 rm
1.687 .169( does not)J
318 440 :M
.093 .009(maintain a receive vector as it can compute D)J
0 2 rm
.022(x,i)A
0 -2 rm
.089 .009( simply as)J
318 452 :M
-.071(the number of the last received message from the sequencer)A
318 463 :M
.166 .017(of g)J
0 2 rm
.074(x)A
0 -2 rm
.202 .02(. It computes D)J
0 2 rm
(i)S
0 -2 rm
.224 .022( exactly as in the symmetric version,)J
318 475 :M
1.626 .163(ie., D)J
0 2 rm
.33(i)A
0 -2 rm
1.619 .162( = min{D)J
0 2 rm
1.083 .108(x,i )J
0 -2 rm
.445 .044(| )J
f1_10 sf
.952 .095(" )J
f0_10 sf
.593(g)A
0 2 rm
.593(x)A
0 -2 rm
.269 .027( )J
f1_10 sf
.846(\316)A
f0_10 sf
.961 .096( G)J
0 2 rm
.33(i)A
0 -2 rm
2.049 .205(}, and uses conditions)J
318 487 :M
f2_10 sf
.193(safe1')A
f0_10 sf
.368 .037( and )J
f2_10 sf
.205(safe2)A
f0_10 sf
.744 .074( for delivery.)J
336 510 :M
.985 .098(It is necessary for only the sequencer of a group to)J
318 521 :M
.904 .09(operate the time-silence mechanism for that group. This)J
318 532 :M
.877 .088(will ensure that the value of D)J
0 2 rm
.183(i)A
0 -2 rm
1.011 .101( increases with time and)J
318 544 :M
.359 .036(the protocol is live.)J
318 567 :M
f2_10 sf
3.2 .32(4.3. Generic total order version)J
336 588 :M
f0_10 sf
.531 .053(We now present the generic version of Newtop for a)J
318 599 :M
(process P)S
0 2 rm
(i)S
0 -2 rm
.007 .001( that can execute the symmetric protocol version)J
318 611 :M
.051 .005(in one group \(say g)J
0 2 rm
(y)S
0 -2 rm
.069 .007(\) and the asymmetric protocol version)J
318 623 :M
.657 .066(in another \(say g)J
0 2 rm
.205(z)A
0 -2 rm
.517 .052(\). Let G)J
0 3 rm
.128(i)A
0 -3 rm
.377 .038( = {g)J
0 3 rm
.231(x)A
0 -3 rm
.241 .024( | P)J
0 3 rm
.128(i)A
0 -3 rm
.105 .01( )J
f1_10 sf
.329(\316)A
f0_10 sf
.288 .029( g)J
0 3 rm
.231(x)A
0 -3 rm
.551 .055(} and |G)J
0 3 rm
.128(i)A
0 -3 rm
.369 .037(| )J
cF f1_10 sf
.037(\263)A
sf
.369 .037( 1.)J
318 636 :M
.256 .026(Such mixed-mode working is made possible because both)J
318 647 :M
1.017 .102(the protocols use the same message numbering scheme.)J
318 658 :M
1.363 .136(The asymmetric blocking rule needs to be modified as)J
318 669 :M
.033(follows:)A
318 680 :M
f2_10 sf
2.01 .201(Mixed-mode Blocking Rule: )J
f0_10 sf
2.185 .219(A multi-group member)J
318 691 :M
2.272 .227(process P)J
0 2 rm
.315(i)A
0 -2 rm
1.725 .172( must delay unicasting or multicasting of a)J
318 703 :M
3.319 .332(message )J
f4_10 sf
1.186(m)A
f0_10 sf
2.342 .234(, until it has received \(from the relevant)J
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(santosh shrivastava; page: 7 of 11)setjob
%%EndPageSetup
-12 -12 :T
gS 12 12 588 768 rC
58 99 :M
f0_10 sf
.843 .084(sequencers\) all the previous )J
f4_10 sf
.239(m')A
f0_10 sf
.213 .021(, )J
f4_10 sf
.716 .072(m'.g )J
cF f5_10 sf
.072(\271)A
sf
.716 .072( m.g)J
f0_10 sf
.633 .063(, which it has)J
58 110 :M
.025(unicast.)A
76 121 :M
4.052 .405(In addition, P)J
0 3 rm
.707(i)A
0 -3 rm
4.278 .428( will operate the time-silence)J
58 134 :M
3.623 .362(mechanism and compute D)J
0 2 rm
1.606 .161(x,i )J
0 -2 rm
2.345 .234(for each g)J
0 3 rm
.88(x)A
0 -3 rm
.4 .04( )J
f1_10 sf
1.255(\316)A
f0_10 sf
1.425 .143( G)J
0 2 rm
.489(i)A
0 -2 rm
1.588 .159( as)J
58 147 :M
.27 .027(discussed in sub-section 4.1 or 4.2, depending on whether)J
58 158 :M
1.241 .124(symmetric or asymmetric version is being run in g)J
0 3 rm
.397(x)A
0 -3 rm
.678 .068(. It)J
58 171 :M
2.5 .25(computes D)J
0 2 rm
.289(i)A
0 -2 rm
.855 .086( as D)J
0 2 rm
.289(i)A
0 -2 rm
1.42 .142( = min{D)J
0 2 rm
.95 .095(x,i )J
0 -2 rm
.39 .039(| )J
f1_10 sf
.835 .083(" )J
f0_10 sf
.52(g)A
0 2 rm
.52(x)A
0 -2 rm
.236 .024( )J
f1_10 sf
.742(\316)A
f0_10 sf
.843 .084( G)J
0 2 rm
.289(i)A
0 -2 rm
1.488 .149(} and uses)J
58 183 :M
.702 .07(conditions )J
f2_10 sf
.136(safe1')A
f0_10 sf
.259 .026( and )J
f2_10 sf
.145(safe2)A
f0_10 sf
.525 .052( for delivery.)J
58 206 :M
f2_10 sf
4.104 .41(5. Fault-tolerant, Dynamic Newtop)J
76 227 :M
f0_10 sf
.867 .087(We now describe how to extend Newtop to make it)J
58 238 :M
2.61 .261(dynamic and fault-tolerant: ordering and liveness is)J
58 249 :M
2.339 .234(preserved even if membership changes occur due to)J
58 260 :M
.427 .043(\(suspected\) process failures, voluntary process departures)J
58 271 :M
.357 .036(and new group formations. This requires every process to)J
58 282 :M
.057 .006(operate the timesilence mechanism independently in every)J
58 293 :M
.166 .017(group in which the process is a member. This is necessary)J
58 304 :M
.762 .076(even if simple atomic delivery of messages is sufficient,)J
58 315 :M
1.77 .177(since failures cannot be detected otherwise. As stated)J
58 326 :M
2.535 .254(earlier, Newtop provides each P)J
0 3 rm
.391(i)A
0 -3 rm
1.1 .11( with a )J
f4_10 sf
.712(group-view)A
58 339 :M
f0_10 sf
.341 .034(process, denoted as GV)J
0 3 rm
.064(x,i)A
0 -3 rm
.201 .02(, for each g)J
0 3 rm
.094(x)A
0 -3 rm
.144 .014(, g)J
0 3 rm
.094(x)A
0 -3 rm
( )S
f1_10 sf
.134(\316)A
f0_10 sf
.152 .015( G)J
0 3 rm
.052(i)A
0 -3 rm
.261 .026(. GV)J
0 3 rm
.064(x,i)A
0 -3 rm
.144 .014( is)J
58 352 :M
3.524 .352(responsible for maintaining P)J
0 3 rm
.49(i)A
0 -3 rm
2.359 .236('s view of the group)J
58 365 :M
2.169 .217(membership of g)J
0 3 rm
.56(x)A
0 -3 rm
1.826 .183(. Informally, this extension has the)J
58 378 :M
1.041 .104(following aspects: \(i\)  GV)J
0 3 rm
.225(x,i)A
0 -3 rm
.788 .079( uses timeouts to )J
f4_10 sf
.277(suspect)A
f0_10 sf
.415 .041( a)J
58 391 :M
.521 .052(failure of some remote process \(P)J
0 2 rm
.089(j)A
0 -2 rm
.403 .04(\) that does not seem to)J
58 403 :M
1.703 .17(be responding; \(ii\) in which case GV)J
0 3 rm
.379(x,i)A
0 -3 rm
1.348 .135( can initiate a)J
58 416 :M
f4_10 sf
2.433 .243(membership agreement)J
f0_10 sf
.641 .064( on P)J
0 2 rm
.217(j)A
0 -2 rm
1.066 .107(, the outcome of which is)J
58 428 :M
.454 .045(that either processes agree to eliminate P)J
0 2 rm
.125 .012(j )J
0 -2 rm
.516 .052(from the group)J
58 440 :M
.784 .078(view, with an agreement on the last message sent by P)J
0 2 rm
.153(j)A
0 -2 rm
(,)S
58 452 :M
.585 .059(or P)J
0 2 rm
.139(j)A
0 -2 rm
.645 .064( continues to be a member and P)J
0 2 rm
.139(i)A
0 -2 rm
.607 .061( is able to retrieve)J
58 464 :M
.456 .046(missing messages of P)J
0 2 rm
.072(j)A
0 -2 rm
(.)S
76 476 :M
.759 .076(In the rest of the section, in order to save space, we)J
58 487 :M
.441 .044(will consider only the symmetric version of Newtop. The)J
58 498 :M
-.059(modifications necessary to make the mechanisms presented)A
58 509 :M
.517 .052(here applicable to the generic version and just for atomic)J
58 520 :M
-.029(delivery are discussed in the full version of this paper [7].)A
58 543 :M
f2_10 sf
4.824 .482(5.1 Message Stability)J
76 564 :M
f0_10 sf
1.281 .128(It is necessary to ensure that a process can always)J
58 575 :M
2.23 .223(retrieve a missing message from another functioning)J
58 586 :M
.433 .043(member process. This in turn means that Newtop needs a)J
58 597 :M
1.916 .192(mechanism that enables a process to safely discard a)J
58 608 :M
.3 .03(received message. To develop such a mechanism, we will)J
58 619 :M
-.013(first define the concept of )A
f4_10 sf
-.014(message stability)A
f0_10 sf
(:)S
76 630 :M
f4_10 sf
1.811 .181(Message Stability)J
f0_10 sf
.844 .084(: A message )J
f4_10 sf
.498(m)A
f0_10 sf
1.081 .108( becomes stable in)J
58 641 :M
.496(P)A
0 2 rm
.248(i)A
0 -2 rm
.594 .059( if P)J
0 2 rm
.248(i)A
0 -2 rm
1.223 .122( knows that all processes in the current view of)J
58 653 :M
f4_10 sf
.046(m.g)A
f0_10 sf
.106 .011(  have received )J
f4_10 sf
.068(m)A
f0_10 sf
(.)S
76 664 :M
.309 .031(In Newtop \(as in other published protocols\), message)J
58 675 :M
1.369 .137(stability information is piggybacked on the transmitted)J
58 686 :M
2.436 .244(messages. That is, when a message )J
f4_10 sf
1.158(m)A
f0_10 sf
.668 .067(, )J
f4_10 sf
1.869 .187(m.g = g)J
0 2 rm
.712(x)A
0 -2 rm
f0_10 sf
1.44 .144(, is)J
58 698 :M
1.15 .115(transmitted by P)J
0 2 rm
.176(i)A
0 -2 rm
.517 .052(, a field )J
f4_10 sf
.284(m.ldn)A
f0_10 sf
1.12 .112( \(ldn: largest deliverable)J
58 710 :M
.601 .06(message number\) will have the current value of D)J
0 3 rm
.132(x,i)A
0 -3 rm
.477 .048(. To)J
318 99 :M
1.982 .198(identify stable messages, P)J
0 2 rm
.291(i)A
0 -2 rm
1.648 .165( maintains a vector called)J
318 111 :M
.968(SV)A
0 3 rm
.519(x,i)A
0 -3 rm
2.181 .218( \(Stability Vector\) for each g)J
0 2 rm
.757(x)A
0 -2 rm
1.911 .191(. At process P)J
0 2 rm
.421(i)A
0 -2 rm
(,)S
318 124 :M
(SV)S
0 3 rm
(x,i)S
0 -3 rm
.023 .002([j] represents the latest )J
f4_10 sf
(m.ldn)S
f0_10 sf
.023 .002( value received from P)J
0 2 rm
(j)S
0 -2 rm
(.)S
318 137 :M
1.884 .188(If min\(SV)J
0 3 rm
.3(x,i)A
0 -3 rm
1.39 .139(\) represents the minimum value in SV)J
0 3 rm
.3(x,i)A
0 -3 rm
(,)S
318 150 :M
1.041 .104(then all )J
f4_10 sf
.677(m)A
f0_10 sf
.39 .039(, )J
f4_10 sf
1.115 .111(m.c )J
f0_10 sf
cF f1_10 sf
.206(\243)A
sf
2.064 .206( min\(SV)J
0 3 rm
.321(x,i)A
0 -3 rm
1.281 .128(\) will be stable. A process)J
318 163 :M
-.108(can safely discard stable messages after delivery.)A
318 186 :M
f2_10 sf
3.431 .343(5.2 Managing Group Membership)J
336 207 :M
f0_10 sf
.64 .064(Group-view process GV)J
0 3 rm
.092(x,i)A
0 -3 rm
.203 .02( of P)J
0 3 rm
.075(i)A
0 -3 rm
.27 .027( works as if P)J
0 3 rm
.118 .012(i )J
0 -3 rm
.393 .039(is not)J
318 220 :M
.599 .06(a member of any other group. So, we can ignore the fact)J
318 231 :M
.301 .03(that P)J
0 3 rm
.058(i)A
0 -3 rm
.27 .027( can be a member of more than one group, and will)J
318 244 :M
2.162 .216(describe the GV)J
0 3 rm
.399(x,i)A
0 -3 rm
.88 .088( of P)J
0 3 rm
.324(i)A
0 -3 rm
1.15 .115( for a given g)J
0 3 rm
.582(x)A
0 -3 rm
1.951 .195(, dropping for)J
318 257 :M
.099 .01(convenience suffix x when no confusion is likely.)J
336 268 :M
.108(GV)A
0 3 rm
(i)S
0 -3 rm
.24 .024( uses a communication primitive called )J
f4_10 sf
.079(mcast\(m\))A
318 281 :M
f0_10 sf
1.522 .152(to transmit its message )J
f4_10 sf
.749(m)A
f0_10 sf
1.214 .121( to all GV processes of P)J
0 2 rm
.288(j)A
0 -2 rm
.236 .024( )J
f1_10 sf
(\316)S
318 293 :M
f0_10 sf
-.097(V)A
0 2 rm
-.046(x,i)A
0 -2 rm
-.054( and the messages are delivered \(by the transport layer\))A
318 305 :M
-.042(to \(functioning and connected\) destination GV processes in)A
318 316 :M
1.221 .122(the sent order. GV)J
0 3 rm
.221(i)A
0 -3 rm
.542 .054( has a )J
f4_10 sf
.302(failure)A
f0_10 sf
.18 .018( )J
f4_10 sf
.338(suspector)A
f0_10 sf
1.139 .114( module, S)J
0 3 rm
.221(i)A
0 -3 rm
(,)S
318 329 :M
.921 .092(which monitors the liveliness of every P)J
0 2 rm
.159(j)A
0 -2 rm
.418 .042(, j )J
cF f1_10 sf
.042(\271)A
sf
.418 .042( i and P)J
0 2 rm
.159(j)A
0 -2 rm
.13 .013( )J
f1_10 sf
(\316)S
318 341 :M
f0_10 sf
.485(V)A
0 2 rm
.23(x,i)A
0 -2 rm
.509 .051(. If S)J
0 2 rm
.187(i)A
0 -2 rm
1.072 .107( observes that no multicast message has been)J
318 353 :M
2.163 .216(received from P)J
0 2 rm
.329(j)A
0 -2 rm
1.134 .113( for a period )J
f5_10 sf
.91(W)A
f0_10 sf
.458 .046(  > )J
f5_10 sf
.813(w)A
f0_10 sf
.429 .043(  \()J
f5_10 sf
.813(w)A
f0_10 sf
1.116 .112(  = the time-)J
318 365 :M
.77 .077(silence timeout duration\) then it suspects the crash of P)J
0 2 rm
(j)S
0 -2 rm
318 377 :M
.32 .032(and notifies GV)J
0 3 rm
(i)S
0 -3 rm
.22 .022( of its suspicion. In practice, )J
f5_10 sf
.135(W)A
f0_10 sf
.249 .025( should be)J
318 390 :M
3.147 .315(tuned to a value that minimises the possibility of)J
318 401 :M
-.071(unfounded suspicions.)A
336 412 :M
.875 .087(The event driven algorithm for GV)J
0 3 rm
.228 .023(i )J
0 -3 rm
.926 .093(is given below,)J
318 425 :M
2.744 .274(dropping the suffix i for all the set variables used)J
318 436 :M
1.12 .112(exclusively by GV)J
0 3 rm
.154(i)A
0 -3 rm
.809 .081(; these set variables are initialised to)J
318 449 :M
.771 .077(empty and a Boolean variable )J
f4_10 sf
.225(consensus)A
f0_10 sf
.652 .065( is initialised to)J
318 460 :M
f4_10 sf
.638(false)A
f0_10 sf
2.175 .217(, when the group g)J
0 2 rm
.844(x)A
0 -2 rm
2.703 .27( is formed. The algorithm)J
318 472 :M
.234 .023(describes the steps taken by GV)J
0 2 rm
(i)S
0 -2 rm
.229 .023(, once a certain condition)J
318 484 :M
2.59 .259(holds. The algorithm for GV)J
0 2 rm
.42(i)A
0 -2 rm
2.676 .268( has two components,)J
318 496 :M
f4_10 sf
4.199 .42(membership agreement)J
f0_10 sf
1.985 .199(  \(for reaching agreement on)J
318 507 :M
.471 .047(processes suspected to have failed\) and )J
f4_10 sf
.727 .073(view installation)J
f0_10 sf
(.)S
318 518 :M
.712 .071(The )J
f4_10 sf
1.722 .172(membership agreement)J
f0_10 sf
.713 .071(  component is based on the)J
318 529 :M
.182 .018(approach used in Psync [14, 15], adapted to the context of)J
318 540 :M
.101 .01(logical clocks.)J
336 551 :M
f4_10 sf
10 f8_1 :p
102 :m
.093 .009(Membership  Agreement:)J
318 563 :M
f0_10 sf
.236(\(i\))A
f9_10 sf
.228 .023( )J
f4_10 sf
1.764 .176(notification {P)J
0 3 rm
.333(k)A
0 -3 rm
1.01 .101(, ln} received from S)J
0 2 rm
.209(i)A
0 -2 rm
f0_10 sf
1.278 .128(: suspicions :=)J
318 576 :M
.29 .029(suspicions  )J
f1_10 sf
.153(\310)A
f0_10 sf
.197 .02( {P)J
0 3 rm
.099(k)A
0 -3 rm
.303 .03(, ln}; mcast\(i, suspect, {P)J
0 3 rm
.099(k)A
0 -3 rm
.294 .029(, ln}\);)J
318 589 :M
.556 .056(\(ii\) \()J
f4_10 sf
.759 .076(j, suspect, {P)J
0 3 rm
.219(k)A
0 -3 rm
.796 .08(, ln}\) received)J
f0_10 sf
.217 .022(: )J
f2_10 sf
.327 .033(if )J
f0_10 sf
.274(P)A
0 3 rm
.247(k)A
0 -3 rm
.33 .033( )J
cF f1_10 sf
.033(\271)A
sf
.33 .033( P)J
0 3 rm
.137(i)A
0 -3 rm
.112 .011( )J
f2_10 sf
.233(then)A
f0_10 sf
.865 .086( record)J
318 602 :M
1.096 .11(the suspicion {P)J
0 3 rm
.302(k)A
0 -3 rm
.668 .067(, ln} of GV)J
0 3 rm
.266 .027(j )J
0 -3 rm
.478 .048(in )J
f4_10 sf
.257(gossip)A
f0_10 sf
.266 .027(; )J
f2_10 sf
.4 .04(if )J
f0_10 sf
.336(P)A
0 3 rm
.302(k)A
0 -3 rm
.408 .041( = P)J
0 3 rm
.168(i)A
0 -3 rm
.137 .014( )J
f2_10 sf
.38(then)A
318 615 :M
f0_10 sf
-.182(discard the received message;)A
318 628 :M
1.011 .101(\(iii\) )J
f4_10 sf
2.119 .212(suspicion {P)J
0 3 rm
.411(k)A
0 -3 rm
.968 .097(, ln} of GV)J
0 3 rm
.257(j)A
0 -3 rm
1 .1(  is recorded in)J
f0_10 sf
.21 .021( )J
f4_10 sf
1.527 .153(gossip )J
f5_10 sf
(\331)S
318 641 :M
f0_10 sf
.212(\()A
f4_10 sf
.715 .071(m, m.c > ln)J
f0_10 sf
.266 .027(, )J
f4_10 sf
.971 .097(is received from P)J
0 3 rm
.283(k)A
0 -3 rm
.212(\))A
f0_10 sf
.177(:)A
f4_10 sf
.145 .014( )J
f0_10 sf
1.197 .12(mcast\(i, refute, {P)J
0 3 rm
.319(k)A
0 -3 rm
(,)S
318 654 :M
.069 .007(ln}\); /* P)J
0 2 rm
(i)S
0 -2 rm
.078 .008( has received a message from P)J
0 2 rm
(k )S
0 -2 rm
.103 .01(numbered > ln,)J
318 666 :M
.447 .045(so refute GV)J
0 2 rm
.077(j)A
0 -2 rm
.382 .038('s suspicion of P)J
0 2 rm
.139(k)A
0 -2 rm
.333 .033(; all received )J
f4_10 sf
.2(m)A
f0_10 sf
.209 .021( of P)J
0 3 rm
.139(k)A
0 -3 rm
.115 .012(, )J
f4_10 sf
.196(m.c)A
318 679 :M
f0_10 sf
(> ln, can be piggybacked on the refute message */)S
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(santosh shrivastava; page: 8 of 11)setjob
%%EndPageSetup
-12 -12 :T
gS 12 12 588 768 rC
58 99 :M
f0_10 sf
.139(\(iv\))A
f2_10 sf
.087 .009( )J
f4_10 sf
.56 .056(\(j, refute, {P)J
0 3 rm
.171(k)A
0 -3 rm
.493 .049(, ln}\) received )J
f5_10 sf
.232(\331)A
f4_10 sf
.373 .037( {P)J
0 3 rm
.171(k)A
0 -3 rm
.285 .029(, ln} )J
f5_10 sf
.274(\316)A
f4_10 sf
.809 .081( suspicions)J
f0_10 sf
(:)S
58 112 :M
.907 .091(suspicions := suspicions )J
f1_10 sf
.276(-)A
f0_10 sf
.497 .05( {P)J
0 3 rm
.251(k)A
0 -3 rm
.783 .078(, ln}; recover the missing)J
58 125 :M
f4_10 sf
.257(m)A
f0_10 sf
.148 .015(, )J
f4_10 sf
.424 .042(m.c )J
f0_10 sf
.318 .032(> ln of P)J
0 3 rm
.178(k)A
0 -3 rm
.547 .055(; mcast\(i, refute, {P)J
0 3 rm
.178(k)A
0 -3 rm
.527 .053(, ln}\);)J
58 138 :M
1.216 .122(\(v\) )J
f4_10 sf
1.819 .182(for every {P)J
0 3 rm
.534(k)A
0 -3 rm
1.345 .134(, ln})J
f5_10 sf
.857(\316)A
f4_10 sf
2.464 .246( suspicions, suspect messages)J
58 151 :M
1.846 .185(received from every GV)J
0 3 rm
.28(j)A
0 -3 rm
.762 .076( of P)J
0 3 rm
.28(j)A
0 -3 rm
.229 .023( )J
f5_10 sf
.719(\316)A
f4_10 sf
.723 .072( V)J
0 2 rm
.229 .023( )J
0 -2 rm
.336(-)A
f0_10 sf
.229 .023( )J
f4_10 sf
.474({{P)A
0 3 rm
.448(k)A
0 -3 rm
.72 .072( | {P)J
0 3 rm
.448(k)A
0 -3 rm
.748 .075(, ln} )J
f5_10 sf
(\316)S
58 164 :M
f4_10 sf
.567 .057(suspicions} )J
f5_10 sf
.199(\310)A
f4_10 sf
.422 .042( failed})J
f0_10 sf
.491 .049(: detection := suspicions; suspicions)J
58 175 :M
-.051(:= {}; mcast\(i, confirmed, detection\); consensus := true;)A
58 188 :M
.377(\(vi\))A
f2_10 sf
.237 .024( )J
f4_10 sf
2.214 .221(\(j, confirmed, detection)J
0 3 rm
.29(j)A
0 -3 rm
1.421 .142(\) received )J
f5_10 sf
.629(\331)A
f4_10 sf
2.044 .204( detection)J
0 3 rm
.29(j)A
0 -3 rm
.237 .024( )J
f5_10 sf
(\315)S
58 201 :M
f4_10 sf
.809(suspicions)A
f0_10 sf
3.307 .331(: detection := detection)J
0 3 rm
.539(j)A
0 -3 rm
2.604 .26(;  suspicions :=)J
58 214 :M
1.359 .136(suspicions - detection)J
0 3 rm
.183(j)A
0 -3 rm
1.183 .118(;  mcast\(i, confirmed, detection\);)J
58 227 :M
-.017(consensus := true;)A
58 238 :M
1.968 .197(\(vii\) )J
f4_10 sf
3.388 .339(\(j, confirmed, detection)J
0 3 rm
.444(j)A
0 -3 rm
2.174 .217(\) received )J
f5_10 sf
.963(\331)A
f4_10 sf
1.467 .147( \(P)J
0 3 rm
.444(i)A
0 -3 rm
1.787 .179(, ln})J
f5_10 sf
(\316)S
58 251 :M
f4_10 sf
.462(detection)A
0 3 rm
.315(j)A
0 -3 rm
1.282 .128( for some ln)J
f0_10 sf
1.325 .133(: force S to suspect P)J
0 3 rm
.315(j)A
0 -3 rm
1.407 .141(; /*P)J
0 2 rm
.315(j)A
0 -2 rm
1.381 .138( has)J
58 264 :M
-.013(succeeded in suspecting P)A
0 2 rm
(i)S
0 -2 rm
-.013(, so reciprocate by suspecting P)A
0 2 rm
(j)S
0 -2 rm
58 276 :M
.222(*/)A
76 289 :M
1.797 .18(A notification from S)J
0 3 rm
.47 .047(i )J
0 -3 rm
1.76 .176(to GV)J
0 3 rm
.297(i)A
0 -3 rm
1.199 .12( will be of the form)J
58 302 :M
.182({P)A
0 3 rm
.175(k)A
0 -3 rm
.428 .043(, ln} - indicating that P)J
0 3 rm
.175(k)A
0 -3 rm
.518 .052( is suspected to have crashed)J
58 315 :M
.687 .069(and ln is the number of the last message P)J
0 3 rm
.15(i)A
0 -3 rm
.88 .088( has received)J
58 328 :M
3.74 .374(from P)J
0 3 rm
1.088(k)A
0 -3 rm
f4_10 sf
.544(.)A
f0_10 sf
2.836 .284( GV)J
0 3 rm
.605(i)A
0 -3 rm
2.46 .246( maintains a set )J
f4_10 sf
.907(suspicions)A
0 3 rm
.957 .096(i )J
0 -3 rm
f0_10 sf
3.906 .391( where)J
58 341 :M
1.345 .134(notifications from S)J
0 2 rm
.187(i)A
0 -2 rm
.966 .097( are entered. GV)J
0 3 rm
.187(i)A
0 -3 rm
.981 .098( also multicasts a)J
58 354 :M
f4_10 sf
.141(suspect)A
f0_10 sf
.451 .045( message )J
f4_10 sf
.535 .053(\(i, suspect, {P)J
0 3 rm
.149(k)A
0 -3 rm
.423 .042(, ln}\))J
f0_10 sf
.457 .046( to GV processes of)J
58 367 :M
2.869 .287(all processes \(including GV)J
0 3 rm
.734(k)A
0 -3 rm
1.758 .176(\) that are in its current)J
58 380 :M
.035 .004(membership view V)J
0 3 rm
(i)S
0 -3 rm
(. If GV)S
0 3 rm
(i)S
0 -3 rm
.027 .003( receives confirmation that all)J
58 393 :M
.784 .078(other unsuspected members in V)J
0 3 rm
.116(i)A
0 -3 rm
.578 .058( also suspect each {P)J
0 3 rm
.209(k)A
0 -3 rm
(,)S
58 406 :M
1.591 .159(ln} in its )J
f4_10 sf
.728(suspicions)A
0 3 rm
.486(i)A
0 -3 rm
f0_10 sf
2.036 .204(, it decides to treat each P)J
0 2 rm
.874(k)A
0 -2 rm
1.578 .158( of)J
58 419 :M
f4_10 sf
.036(suspicions)A
0 3 rm
(i)S
0 -3 rm
f0_10 sf
.108 .011( as having failed and P)J
0 2 rm
(k)S
0 -2 rm
.095 .01( is added to a set called)J
58 432 :M
f4_10 sf
.265(failed)A
0 3 rm
.194(i)A
0 -3 rm
.291 .029(. )J
f0_10 sf
.389(P)A
0 3 rm
.194(i)A
0 -3 rm
1.133 .113( discards any messages received from P)J
0 3 rm
.35(k)A
0 -3 rm
.911 .091( and)J
58 445 :M
1.25(GV)A
0 3 rm
.866(k)A
0 -3 rm
1.788 .179(, if either P)J
0 3 rm
.866(k)A
0 -3 rm
.393 .039( )J
f1_10 sf
1.234(\316)A
f0_10 sf
.393 .039( )J
f4_10 sf
.657(failed)A
0 3 rm
.481(i)A
0 -3 rm
f0_10 sf
1.308 .131( or P)J
0 3 rm
.866(k)A
0 -3 rm
.393 .039( )J
f1_10 sf
1.234(\317)A
f0_10 sf
1.402 .14( V)J
0 3 rm
.481(i)A
0 -3 rm
2.667 .267(. Also, once)J
58 458 :M
.07 .007(suspicion {P)J
0 3 rm
(k)S
0 -3 rm
.034 .003(, ln} has been added to )J
f4_10 sf
.013(suspicions)A
0 3 rm
(i)S
0 -3 rm
f0_10 sf
.043 .004(, GV)J
0 2 rm
(i)S
0 -2 rm
.04 .004( will)J
58 471 :M
.209 .021(keep the messages received from P)J
0 3 rm
.062(k)A
0 -3 rm
.155 .016( and GV)J
0 3 rm
.062(k)A
0 -3 rm
.192 .019( as pending.)J
58 484 :M
.448 .045(If suspicion {P)J
0 3 rm
.131(k)A
0 -3 rm
.427 .043(, ln} is subsequently refuted, the pending)J
58 497 :M
.313 .031(messages will be assumed to have been just received, and)J
58 508 :M
.277 .028(will be handled appropriately; if, however, suspicion {P)J
0 3 rm
.078(k)A
0 -3 rm
(,)S
58 521 :M
.036 .004(ln} is confirmed as a failure, then the pending messages of)J
58 532 :M
-.23(P)A
0 3 rm
-.207(k)A
0 -3 rm
-.2( and GV)A
0 3 rm
-.207(k)A
0 -3 rm
-.172( are discarded.)A
76 545 :M
1.349 .135(Suppose that GV)J
0 3 rm
.192(j)A
0 -3 rm
.99 .099( receives the message )J
f4_10 sf
1.416 .142(\(i, suspect,)J
58 558 :M
.243({P)A
0 3 rm
.214(k)A
0 -3 rm
.605 .06(, ln}\))J
f0_10 sf
.668 .067( from GV)J
0 3 rm
.134(i)A
0 -3 rm
.437 .044(. If {P)J
0 3 rm
.241(k)A
0 -3 rm
.491 .049(, ln} is already in )J
f4_10 sf
.201(suspicions)A
0 3 rm
.134(j)A
0 -3 rm
f0_10 sf
(,)S
58 571 :M
.644(GV)A
0 3 rm
.248(j)A
0 -3 rm
1.407 .141( regards GV)J
0 3 rm
.248(i)A
0 -3 rm
1.225 .123( as yet another process that holds the)J
58 584 :M
1.652 .165(same suspicion as itself; if however {P)J
0 3 rm
.527(k)A
0 -3 rm
1.02 .102(, ln} is not in)J
58 597 :M
f4_10 sf
.274(suspicions)A
0 3 rm
.182(j)A
0 -3 rm
f0_10 sf
.906 .091(, it records this suspicion from P)J
0 2 rm
.289 .029(i )J
0 -2 rm
.519 .052(in )J
f4_10 sf
.28(gossip)A
0 2 rm
.182(j)A
0 -2 rm
f0_10 sf
(,)S
58 610 :M
.614 .061(but suspends judgement on it pending confirmation from)J
58 621 :M
.863 .086(its own S)J
0 3 rm
.187(j)A
0 -3 rm
.722 .072(. If in the mean time P)J
0 3 rm
.187(j)A
0 -3 rm
.908 .091( receives a message )J
f4_10 sf
(m)S
58 634 :M
f0_10 sf
.882 .088(from P)J
0 3 rm
.257(k)A
0 -3 rm
.45 .045( with )J
f4_10 sf
.242(m.c)A
f0_10 sf
.547 .055( > ln, then GV)J
0 3 rm
.143(j)A
0 -3 rm
.816 .082( removes {P)J
0 3 rm
.257(k)A
0 -3 rm
.7 .07(, ln} from)J
58 647 :M
f4_10 sf
.366(gossip)A
0 2 rm
.238(j)A
0 -2 rm
.195 .019( )J
f0_10 sf
1.222 .122(and multicasts a )J
f4_10 sf
.334(refute)A
f0_10 sf
1.15 .115( message )J
f4_10 sf
1.25 .125(\(j, refute, {P)J
0 3 rm
.381(k)A
0 -3 rm
(,)S
58 660 :M
.416(ln}\))A
f0_10 sf
1.74 .174(. When GV)J
0 3 rm
.306(i)A
0 -3 rm
1.663 .166( receives this refute message, it stops)J
58 673 :M
4.989 .499(suspecting P)J
0 3 rm
1.092(k)A
0 -3 rm
2.785 .278( for ln, and removes {P)J
0 3 rm
1.092(k)A
0 -3 rm
2.559 .256(, ln})J
f4_10 sf
.496 .05( )J
f0_10 sf
1.414(from)A
58 686 :M
f4_10 sf
.497(suspicions)A
0 3 rm
.332(i)A
0 -3 rm
f0_10 sf
1.593 .159(; it also initiates an attempt to recover the)J
58 699 :M
.325 .032(missing messages of P)J
0 3 rm
.092(k)A
0 -3 rm
.202 .02( \(a missing )J
f4_10 sf
.132(m)A
f0_10 sf
.313 .031( can be piggybacked)J
58 712 :M
1.732 .173(in the refute message; by definition any missing )J
f4_10 sf
.83(m)A
f0_10 sf
.878 .088( is)J
318 99 :M
.547 .055(unstable, so would not have been discarded by P)J
0 3 rm
.099(j)A
0 -3 rm
.298 .03(; P)J
0 2 rm
.099(j)A
0 -2 rm
.451 .045( can)J
318 112 :M
1.829 .183(therefore always piggyback )J
f4_10 sf
.666(m)A
f0_10 sf
1.369 .137(.\). After recovery of the)J
318 123 :M
3.54 .354(missing message, P)J
0 2 rm
.479(i)A
0 -2 rm
2.453 .245( multicasts )J
f4_10 sf
2.511 .251(\(i, refute, {P)J
0 3 rm
.765(k)A
0 -3 rm
2.31 .231(, ln}\))J
318 136 :M
f0_10 sf
.515 .051(message. If GV)J
0 3 rm
.078(i)A
0 -3 rm
.377 .038( ever receives a message )J
f4_10 sf
.459 .046(\(k, suspect, {P)J
0 3 rm
.078(i)A
0 -3 rm
(,)S
318 149 :M
.372(ln}\))A
f0_10 sf
1.208 .121(, it takes no action in the hope that some GV)J
0 3 rm
.273(j)A
0 -3 rm
1.269 .127( will)J
318 162 :M
2.859 .286(refute that suspicion. When GV)J
0 3 rm
.438(i)A
0 -3 rm
1.96 .196( confirms all of its)J
318 175 :M
.74 .074(suspicions \(condition \(v\)\) or a subset of them \(condition)J
318 186 :M
1.756 .176(\(vi\)\) into agreed failure detection, it sets the Boolean)J
318 197 :M
f4_10 sf
.812(consensus)A
f0_10 sf
2.915 .292( to true. Functioning members that hold)J
318 208 :M
-.008(identical views and do not suspect each other, will confirm)A
318 219 :M
.877 .088(identical )J
f4_10 sf
.193(detection)A
f0_10 sf
.602 .06( sets in an identical order. \(A proof of)J
318 230 :M
1.84 .184(this can be seen in [14].\) Every agreement on a new)J
318 241 :M
f4_10 sf
.386(detection)A
f0_10 sf
1.241 .124( set leads to the installation of new view that)J
318 252 :M
-.041(excludes the processes in the )A
f4_10 sf
-.042(detection)A
f0_10 sf
-.042( set.)A
318 275 :M
f4_10 sf
10 f8_1 :p
72 :m
.025 .003(View Installation:)J
318 289 :M
f0_10 sf
.456 .046(\(viii\) )J
f4_10 sf
.471 .047(\(consensus = true\):  )J
f0_10 sf
.502 .05(failed := {P)J
0 3 rm
.172(k)A
0 -3 rm
.18 .018( | P)J
0 3 rm
.172(k)A
0 -3 rm
.078 .008( )J
f1_10 sf
.246(\316)A
f0_10 sf
.341 .034( {P)J
0 3 rm
.172(k)A
0 -3 rm
.404 .04(, ln})J
f1_10 sf
(\316)S
318 302 :M
f0_10 sf
1.783 .178(detection}; ln)J
0 3 rm
.501(mn)A
0 -3 rm
.841 .084( := min{ln | {P)J
0 3 rm
.392(k)A
0 -3 rm
.92 .092(, ln})J
f1_10 sf
.56(\316)A
f0_10 sf
1.171 .117( detection}; )J
f2_10 sf
.501(for)A
318 315 :M
f0_10 sf
.292 .029(every P)J
0 3 rm
.082(k)A
0 -3 rm
( )S
f1_10 sf
.117(\316)A
f0_10 sf
.162 .016( failed )J
f2_10 sf
.087(do)A
f0_10 sf
.215 .021( instruct P)J
0 2 rm
.072 .007(i )J
0 -2 rm
.213 .021(to discard any )J
f4_10 sf
.118(m)A
f0_10 sf
.331 .033( received)J
318 328 :M
.586 .059(from P)J
0 3 rm
.17(k)A
0 -3 rm
.298 .03( with )J
f4_10 sf
.161(m.c)A
f0_10 sf
.251 .025( > ln)J
0 3 rm
.218(mn)A
0 -3 rm
.077 .008( )J
f2_10 sf
.18(od)A
f0_10 sf
.15 .015(; )J
f4_10 sf
.157(update_view)A
f0_10 sf
.631 .063(\(failed, ln)J
0 2 rm
.218(mn)A
0 -2 rm
.208(\);)A
318 341 :M
f2_10 sf
.322(for)A
f0_10 sf
.887 .089( every P)J
0 3 rm
.379(k)A
0 -3 rm
.172 .017( )J
f1_10 sf
.54(\316)A
f0_10 sf
.751 .075( failed )J
f2_10 sf
.4(do)A
f0_10 sf
.786 .079( RV[k] := )J
f1_10 sf
.54(\245)A
f0_10 sf
.797 .08(; SV[k] := )J
f1_10 sf
.54(\245)A
f0_10 sf
.256 .026(;  )J
f2_10 sf
.4(od)A
f0_10 sf
(;)S
318 354 :M
-.102(failed := { }; consensus:=false;)A
336 367 :M
.116 .012(The view installation component assumes the use of a)J
318 378 :M
.75 .075(primitive )J
f4_10 sf
1.04 .104(update-view\(F, N\))J
f0_10 sf
.661 .066( which, upon being invoked,)J
318 389 :M
1.217 .122(will be executed asynchronously and will install a new)J
318 400 :M
1.337 .134(view before any )J
f4_10 sf
1.21 .121(m, m.c )J
cF f5_10 sf
.121(\263)A
sf
1.21 .121( N+1)J
f0_10 sf
1.086 .109(, is delivered to P)J
0 2 rm
.255(i)A
0 -2 rm
1.349 .135(. The)J
318 412 :M
.35 .035(algorithm is as follows:)J
336 423 :M
f4_10 sf
-.097(update_view\(F: set_of_processes; N: integer\))A
f0_10 sf
(:)S
322 434 :M
f2_10 sf
1.827 .183({ wait until)J
f0_10 sf
.831 .083( P)J
0 2 rm
.344(i)A
0 -2 rm
1.397 .14( is delivered the last )J
f4_10 sf
1.323 .132(m, m.c )J
f0_10 sf
cF f1_10 sf
.165(\243)A
sf
1.655 .165( N; V:=)J
318 446 :M
.719 .072(V- F; )J
f2_10 sf
(})S
336 457 :M
f0_10 sf
-.013(Absent or rejected messages from suspected processes)A
318 468 :M
1.218 .122(in the detection set prevents D from increasing beyond)J
318 479 :M
.075(ln)A
0 2 rm
.123(mn)A
0 -2 rm
.241 .024( and any received )J
f4_10 sf
.192 .019(m, m > ln)J
0 2 rm
.118(mn)A
0 -2 rm
f0_10 sf
.122 .012(, of )J
f4_10 sf
.093(any)A
f0_10 sf
.25 .025( group will be)J
318 491 :M
.578 .058(blocked from delivery. Setting RV[k] := SV[k] := )J
cF f1_10 sf
.058(\245)A
sf
.578 .058( will)J
318 502 :M
.193 .019(allow D to increase more than ln)J
0 2 rm
.087(mn)A
0 -2 rm
.24 .024( and message delivery)J
318 514 :M
.104 .01(to resume if the value of D has been stuck at ln)J
0 2 rm
.056(mn)A
0 -2 rm
.166 .017(. Before)J
318 526 :M
1.454 .145(setting RV[k] and SV[k] to infinity, a message )J
f4_10 sf
.705(m)A
f0_10 sf
.723 .072( of a)J
318 537 :M
.183 .018(failed P)J
0 2 rm
.053(k)A
0 -2 rm
.094 .009( with )J
f4_10 sf
.128 .013(m.c > ln)J
0 2 rm
.065(mn)A
0 -2 rm
f0_10 sf
0 2 rm
( )S
0 -2 rm
.165 .017(is discarded, even though it has)J
318 549 :M
1.191 .119(been agreed that )J
f4_10 sf
.594(m)A
f0_10 sf
1.033 .103( was sent before P)J
0 2 rm
.412(k)A
0 -2 rm
.927 .093( failed. This is a)J
318 561 :M
.508 .051(safety measure, necessary to preserve MD5 \(see example)J
318 572 :M
.086(1\).)A
336 583 :M
3.119 .312(After treating all the processes in a given set)J
318 594 :M
f4_10 sf
.223(detection)A
0 2 rm
.152(i)A
0 -2 rm
f0_10 sf
.866 .087( as having failed "together" and ignoring their)J
318 606 :M
2.714 .271(messages with )J
f4_10 sf
1.519 .152(m.c > )J
f0_10 sf
.593(ln)A
0 3 rm
.974(mn)A
0 -3 rm
2.117 .212(, GV)J
0 2 rm
.424(i)A
0 -2 rm
2.324 .232( calls the primitive)J
318 619 :M
f4_10 sf
.327(update_view)A
f0_10 sf
.346 .035( \()J
f4_10 sf
.27(failed)A
0 2 rm
.198(i)A
0 -2 rm
f0_10 sf
.65 .065(, ln)J
0 3 rm
.455(mn)A
0 -3 rm
.905 .091(\) to install the new view, V-)J
318 632 :M
f4_10 sf
.792(failed)A
0 2 rm
.58(i)A
0 -2 rm
f0_10 sf
2.408 .241(, just before any )J
f4_10 sf
1.973 .197(m, m.c )J
cF f5_10 sf
.197(\263)A
sf
1.973 .197( )J
f0_10 sf
.812(ln)A
0 3 rm
1.334(mn)A
0 -3 rm
2.267 .227(+1, is to be)J
318 645 :M
.362 .036(delivered to P)J
0 2 rm
.061(i)A
0 -2 rm
.288 .029(. RV and SV are also updated to reflect the)J
318 657 :M
.536 .054(new view. As new view is installed only after the last )J
f4_10 sf
.398(m,)A
318 668 :M
1.305 .131(m.c )J
f0_10 sf
.619(<)A
f4_10 sf
.249 .025( )J
f0_10 sf
.427(ln)A
0 3 rm
.701(mn)A
0 -3 rm
1.532 .153(+1, is delivered, )J
f4_10 sf
.498(m.s)A
f0_10 sf
1.307 .131( will be in the current)J
318 681 :M
.089 .009(view for any )J
f4_10 sf
.052(m)A
f0_10 sf
.086 .009(  delivered in group g)J
0 2 rm
(x)S
0 -2 rm
.1 .01( \(MD1 is met\).)J
318 693 :M
f2_10 sf
2.896 .29(Example 1:)J
f4_10 sf
.271 .027( )J
f0_10 sf
2.299 .23(Suppose that functioning P)J
0 3 rm
.331(i)A
0 -3 rm
1.146 .115( and P)J
0 3 rm
.331(j)A
0 -3 rm
1.726 .173( hold)J
318 706 :M
.185 .018(identical views and never permanently suspect each other.)J
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(santosh shrivastava; page: 9 of 11)setjob
%%EndPageSetup
-12 -12 :T
gS 12 12 588 768 rC
58 99 :M
f0_10 sf
.674 .067(Let P)J
0 3 rm
.157(r)A
0 -3 rm
.621 .062( crash during the multicast of )J
f4_10 sf
.342(m)A
f0_10 sf
.564 .056(, such that only P)J
0 3 rm
(s)S
0 -3 rm
58 112 :M
.715 .071(receives )J
f4_10 sf
.278(m)A
f0_10 sf
.376 .038(. Let P)J
0 3 rm
.15(s)A
0 -3 rm
.435 .044( deliver )J
f4_10 sf
.278(m)A
f0_10 sf
.455 .046( \(possible, if the arrival of )J
f4_10 sf
(m)S
58 125 :M
f0_10 sf
1.445 .145(from P)J
0 3 rm
.28(r)A
0 -3 rm
.934 .093( causes )J
f4_10 sf
.681 .068(m )J
f0_10 sf
1.543 .154(to become deliverable\), multicast )J
f4_10 sf
.787(m')A
58 138 :M
f0_10 sf
1.205 .12(that is received by P)J
0 3 rm
.252(i)A
0 -3 rm
.871 .087( and P)J
0 3 rm
.252(j)A
0 -3 rm
1.238 .124(, and crash before it could)J
58 151 :M
1.205 .12(refute the suspicion {P)J
0 3 rm
.233(r)A
0 -3 rm
.668 .067(, ln} for some ln < )J
f4_10 sf
.331(m.c)A
f0_10 sf
.868 .087(, held by)J
58 164 :M
.159(GV)A
0 3 rm
.061(i)A
0 -3 rm
.277 .028( and GV)J
0 3 rm
.061(j)A
0 -3 rm
.179 .018(. P)J
0 3 rm
.073(r)A
0 -3 rm
.212 .021( and P)J
0 3 rm
.086(s)A
0 -3 rm
.313 .031( will be detected together by GV)J
0 3 rm
(i)S
0 -3 rm
58 177 :M
3.733 .373(and GV)J
0 3 rm
.529(j)A
0 -3 rm
1.606 .161(, and )J
f4_10 sf
2.738 .274(m', m)J
f0_10 sf
.433 .043( )J
f1_10 sf
1.878(\256)A
f0_10 sf
.433 .043( )J
f4_10 sf
.891(m')A
f0_10 sf
2.457 .246(, is guaranteed not to be)J
58 190 :M
.632 .063(delivered when )J
f4_10 sf
.25(m)A
f0_10 sf
.502 .05( cannot be delivered. P)J
0 2 rm
.096(i)A
0 -2 rm
.333 .033( and P)J
0 2 rm
.096(j)A
0 -2 rm
.696 .07( confirm)J
58 202 :M
-.007(identical detection sets in identical order; they will execute)A
58 213 :M
.729 .073(update_view\(\) for identical parameter values in identical)J
58 224 :M
.028 .003(order. This ensures that MD3, MD4 and MD4' are met.)J
58 235 :M
f2_10 sf
4.163 .416(Example 2:)J
f4_10 sf
.389 .039( )J
f0_10 sf
2.417 .242(To see that MD5' is met, consider the)J
58 246 :M
.038 .004(scenario depicted in fig. 1. Let P)J
0 2 rm
(i)S
0 -2 rm
.026 .003( and P)J
0 2 rm
(j)S
0 -2 rm
.055 .005( get \(permanently\))J
58 258 :M
.283 .028(partitioned from P)J
0 2 rm
.073(k)A
0 -2 rm
.148 .015( while )J
f4_10 sf
.106(m)A
0 2 rm
.073(1)A
0 -2 rm
f0_10 sf
.214 .021( was being multicast, and let)J
58 270 :M
2.071 .207(them not receive )J
f4_10 sf
1.017(m)A
0 2 rm
.704(1)A
0 -2 rm
f0_10 sf
1.329 .133( at all. Since )J
f4_10 sf
1.017(m)A
0 2 rm
.704(1)A
0 -2 rm
.32 .032( )J
f5_10 sf
1.39(\256)A
f4_10 sf
1.14 .114( m)J
0 2 rm
.704(4)A
0 -2 rm
1.324 .132(, m)J
0 2 rm
.704(4)A
0 -2 rm
1.753 .175(.c >)J
58 282 :M
.408(m)A
0 2 rm
.283(1)A
0 -2 rm
.196(.c)A
f0_10 sf
.544 .054( and P)J
0 2 rm
.157(i)A
0 -2 rm
.773 .077( cannot be delivered )J
f4_10 sf
.408(m)A
0 2 rm
.283(4)A
0 -2 rm
f0_10 sf
.617 .062( until D)J
0 2 rm
.194(1,i)A
0 -2 rm
1.165 .117( increases)J
58 294 :M
.252 .025(beyond )J
f4_10 sf
.097(m)A
0 2 rm
.067(1)A
0 -2 rm
.046(.c)A
f0_10 sf
.179 .018( which will not happen until P)J
0 2 rm
.067(k)A
0 -2 rm
.168 .017( is detected to)J
58 306 :M
.025 .002(have failed. The prolonged silence of P)J
0 2 rm
(k)S
0 -2 rm
.021 .002( will cause GV)J
0 2 rm
(i)S
0 -2 rm
( to)S
58 318 :M
.761 .076(suspect {P)J
0 2 rm
.18(k)A
0 -2 rm
.329 .033(, ln)J
0 2 rm
.18(k)A
0 -2 rm
.396 .04(} for some )J
f4_10 sf
.14(ln)A
0 2 rm
.16(k)A
0 -2 rm
.285 .028( < m)J
0 2 rm
.18(1)A
0 -2 rm
.125(.c)A
f0_10 sf
.457 .046(, and then to reach)J
58 330 :M
4.053 .405(agreement with GV)J
0 2 rm
.528(j)A
0 -2 rm
2.52 .252( on that suspicion. P)J
0 2 rm
1.188 .119(k )J
0 -2 rm
3.268 .327(will be)J
58 342 :M
3.501 .35(removed from V)J
0 2 rm
.612(1,i)A
0 -2 rm
2.019 .202( before any )J
f4_10 sf
1.945 .194(m, m.c )J
cF f5_10 sf
.194(\263)A
sf
1.945 .194( ln)J
0 2 rm
.793(k)A
0 -2 rm
1.958 .196( +1)J
f0_10 sf
1.603 .16(, is)J
58 354 :M
.865 .087(delivered. Thus, when )J
f4_10 sf
.356(m)A
0 2 rm
.246(4)A
0 -2 rm
.463 .046(, m)J
0 2 rm
.246(1)A
0 -2 rm
.112 .011( )J
f5_10 sf
.486(\256)A
f4_10 sf
.399 .04( m)J
0 2 rm
.246(4)A
0 -2 rm
.123(,)A
f0_10 sf
.755 .076( is being delivered)J
58 366 :M
.624 .062(to P)J
0 2 rm
.153(i)A
0 -2 rm
.23 .023(, )J
f4_10 sf
.398(m)A
0 2 rm
.276(1)A
0 -2 rm
.176(.s)A
f0_10 sf
.659 .066( is guaranteed not be in V)J
0 2 rm
.189(1,i)A
0 -2 rm
.453 .045(, if m)J
0 2 rm
.276(1)A
0 -2 rm
.781 .078( cannot be)J
58 378 :M
.33 .033(delivered to P)J
0 2 rm
.056(i)A
0 -2 rm
.243 .024( at all. So, MD5' is will not be violated.)J
76 390 :M
2.565 .256(The final example is intended to show that the)J
58 401 :M
1.922 .192(concurrent group views stabilise into non-intersecting)J
58 412 :M
.043(ones.)A
58 423 :M
f2_10 sf
1.761 .176(Example 3:)J
f0_10 sf
.923 .092( Consider a group )J
f4_10 sf
.362(g)A
f0_10 sf
.609 .061( = {P)J
0 3 rm
.201(i)A
0 -3 rm
.589 .059(, P)J
0 3 rm
.201(j)A
0 -3 rm
.589 .059(, P)J
0 3 rm
.362(k)A
0 -3 rm
.589 .059(, P)J
0 3 rm
.201(l)A
0 -3 rm
.394 .039(,  P)J
0 3 rm
.564(m)A
0 -3 rm
(})S
58 436 :M
.668 .067(in which each functioning member holds the initial view)J
58 449 :M
.453(V)A
0 -3 rm
.314(0)A
0 3 rm
.29 .029( = )J
f4_10 sf
.314(g)A
f0_10 sf
.947 .095(. Assume P)J
0 3 rm
.174(i)A
0 -3 rm
.603 .06( and P)J
0 3 rm
.174(j)A
0 -3 rm
.945 .094( never suspect each other and)J
58 462 :M
.866 .087(also, P)J
0 3 rm
.276(k)A
0 -3 rm
.531 .053( and P)J
0 3 rm
.153(l)A
0 -3 rm
.806 .081( never suspect each other. Let GV)J
0 3 rm
.153(i)A
0 -3 rm
.767 .077(, GV)J
0 3 rm
.153(j)A
0 -3 rm
(,)S
58 475 :M
.342(GV)A
0 3 rm
.237(k)A
0 -3 rm
.594 .059( and GV)J
0 3 rm
.131(l)A
0 -3 rm
.631 .063( suspect P)J
0 3 rm
.368(m)A
0 -3 rm
.526 .053( for the same ln)J
0 3 rm
.368(m)A
0 -3 rm
.569 .057(, and send to)J
58 488 :M
.933 .093(each other the suspect message )J
f4_10 sf
.984 .098(\(*, suspect, {P)J
0 3 rm
.43(m)A
0 -3 rm
.543 .054(, ln)J
0 3 rm
.43(m)A
0 -3 rm
.218(}\))A
f0_10 sf
(.)S
58 501 :M
1.035 .103(Let a network failure occur, partitioning P)J
0 3 rm
.176(i)A
0 -3 rm
.608 .061( and P)J
0 3 rm
.176(j)A
0 -3 rm
.991 .099( from)J
58 514 :M
(P)S
0 3 rm
(k)S
0 -3 rm
( and P)S
0 3 rm
(l)S
0 -3 rm
.023 .002( after the suspect messages of GV)J
0 3 rm
(i)S
0 -3 rm
.019 .002( and GV)J
0 3 rm
(j)S
0 -3 rm
( have)S
58 527 :M
1.28 .128(been received by GV)J
0 3 rm
.37(k)A
0 -3 rm
.929 .093( and GV)J
0 3 rm
.206(l)A
0 -3 rm
1.087 .109(, but before the suspect)J
58 540 :M
1.219 .122(messages of GV)J
0 3 rm
.316(k)A
0 -3 rm
.794 .079( and GV)J
0 3 rm
.176(l)A
0 -3 rm
.827 .083( can be received by GV)J
0 3 rm
.176(i)A
0 -3 rm
.824 .082( and)J
58 553 :M
.77(GV)A
0 3 rm
.296(j)A
0 -3 rm
1.185 .118(. After four )J
f4_10 sf
1.764 .176(\(*, suspect, {P)J
0 3 rm
.77(m)A
0 -3 rm
.974 .097(, ln)J
0 3 rm
.77(m)A
0 -3 rm
.807 .081(}\) )J
f0_10 sf
2.666 .267(messages are)J
58 568 :M
.65 .065(received - one from GV of each process in V)J
0 -3 rm
.241(0)A
0 3 rm
.359 .036( - {P)J
0 3 rm
.374(m)A
0 -3 rm
.486 .049(} -,)J
58 583 :M
.421(GV)A
0 3 rm
.291(k)A
0 -3 rm
.781 .078( \(also GV)J
0 3 rm
.162(l)A
0 -3 rm
.746 .075(\) will install the new view V)J
0 -3 rm
.291(1)A
0 3 rm
.38 .038( = { P)J
0 3 rm
.162(i)A
0 -3 rm
.473 .047(, P)J
0 3 rm
.162(j)A
0 -3 rm
(,)S
58 598 :M
.272(P)A
0 3 rm
.244(k)A
0 -3 rm
.397 .04(, P)J
0 3 rm
.136(l)A
0 -3 rm
.443 .044(} = V)J
0 -3 rm
.244(0)A
0 3 rm
.365 .037( - {P)J
0 3 rm
.38(m)A
0 -3 rm
.616 .062(} after all received )J
f4_10 sf
.532 .053(m, m.c )J
cF f5_10 sf
.053(\243)A
sf
.532 .053( ln)J
0 3 rm
.353(m)A
0 -3 rm
f0_10 sf
.6 .06(, are)J
58 613 :M
2.205 .22(delivered. \(Thus, in view V)J
0 -3 rm
.672(0)A
0 3 rm
1.091 .109(, P)J
0 2 rm
.672(k)A
0 -2 rm
1.291 .129( and P)J
0 2 rm
.373(l)A
0 -2 rm
2.189 .219( would have)J
58 625 :M
-.003(delivered an identical set of non-null )A
f4_10 sf
(m)S
f0_10 sf
-.003( that were multicast)A
58 636 :M
.596 .06(in g.\))J
76 647 :M
.233(GV)A
0 3 rm
.09(i)A
0 -3 rm
.406 .041( and GV)J
0 3 rm
.09(j)A
0 -3 rm
.425 .042(, on the other hand will not receive any)J
58 660 :M
.296 .03(suspect messages from GV)J
0 3 rm
.074(k)A
0 -3 rm
.185 .018( and GV)J
0 3 rm
(l)S
0 -3 rm
.2 .02(, so will not succeed)J
58 675 :M
.495 .05(in installing the view V)J
0 -3 rm
.169(0)A
0 3 rm
.252 .025( - {P)J
0 3 rm
.263(m)A
0 -3 rm
.53 .053(}; they will however start)J
58 688 :M
.035 .003(suspecting P)J
0 3 rm
(k)S
0 -3 rm
( and P)S
0 3 rm
(l)S
0 -3 rm
.022 .002(, eventually agree and form )J
f4_10 sf
.006(detection)A
0 3 rm
(i)S
0 -3 rm
58 701 :M
f0_10 sf
1.152 .115(= )J
f4_10 sf
.692(detection)A
0 3 rm
.472(j)A
0 -3 rm
f0_10 sf
1.686 .169( = {{P)J
0 3 rm
1.322(m)A
0 -3 rm
1.551 .155(, ln)J
0 3 rm
1.322(m)A
0 -3 rm
2.283 .228(}, {P)J
0 3 rm
.85(k)A
0 -3 rm
1.551 .155(, ln)J
0 3 rm
.85(k)A
0 -3 rm
2.283 .228(}, {P)J
0 3 rm
.472(l)A
0 -3 rm
1.551 .155(, ln)J
0 3 rm
.472(l)A
0 -3 rm
2.318 .232(}} =)J
58 714 :M
f4_10 sf
.348(detection)A
0 3 rm
.238(ij)A
0 -3 rm
.194 .019( )J
f0_10 sf
1.124 .112(\(say\) and )J
f4_10 sf
.325(failed)A
0 3 rm
.238(i)A
0 -3 rm
f0_10 sf
.395 .04( = )J
f4_10 sf
.325(failed)A
0 3 rm
.238(j)A
0 -3 rm
.194 .019( )J
f0_10 sf
1.13 .113(= {P)J
0 3 rm
.665(m)A
0 -3 rm
.695 .069(, P)J
0 3 rm
.428(k)A
0 -3 rm
.695 .069(, P)J
0 3 rm
.238(l)A
0 -3 rm
.922 .092(} =)J
318 101 :M
f4_10 sf
(failed)S
0 3 rm
(ij)S
0 -3 rm
( )S
f0_10 sf
-.004(\(say\), and will update their view to V)A
0 -3 rm
(1)S
0 3 rm
( = {P)S
0 2 rm
(i)S
0 -2 rm
(, P)S
0 2 rm
(j)S
0 -2 rm
(} =)S
318 116 :M
.704(V)A
0 -3 rm
.488(0)A
0 3 rm
.353 .035( - )J
f4_10 sf
.37(failed)A
0 3 rm
.271(ij)A
0 -3 rm
.222 .022( )J
f0_10 sf
1.386 .139(after all received )J
f4_10 sf
1.152 .115(m, m.c )J
cF f5_10 sf
.115(\243)A
sf
1.152 .115( min {ln)J
0 3 rm
.704(m)A
0 -3 rm
.89 .089(, ln)J
0 3 rm
.433(k)A
0 -3 rm
(,)S
318 129 :M
-.103(ln)A
0 3 rm
-.074(l)A
0 -3 rm
-.106(})A
f0_10 sf
-.105(, are delivered.)A
336 142 :M
1.747 .175(The existence of intersecting concurrent views is,)J
318 153 :M
.511 .051(however, short lived as GV)J
0 2 rm
.154(k)A
0 -2 rm
.385 .039( and GV)J
0 2 rm
.085(l)A
0 -2 rm
.637 .064( must subsequently)J
318 165 :M
.633 .063(suspect P)J
0 2 rm
.089(i)A
0 -2 rm
.308 .031( and P)J
0 2 rm
.089(j)A
0 -2 rm
.428 .043(: either by receiving )J
f4_10 sf
.212 .021(\(i )J
f0_10 sf
.429 .043(\(or j\),)J
f4_10 sf
.73 .073( confirmed,)J
318 177 :M
.554({P)A
0 2 rm
.791(m)A
0 -2 rm
.529 .053(  P)J
0 2 rm
.486(k)A
0 -2 rm
.936 .094(, P)J
0 2 rm
.304(l)A
0 -2 rm
.401(}\))A
f0_10 sf
1.439 .144(  and executing step \(vii\) if the network)J
318 189 :M
.831 .083(partition is transient, or by being notified from the local)J
318 200 :M
.612 .061(suspector if the network partition is long lived. GV)J
0 2 rm
.198(k)A
0 -2 rm
.516 .052( and)J
318 214 :M
.256(GV)A
0 2 rm
.099(l)A
0 -2 rm
.537 .054( will therefore eventually update their views to V)J
0 -3 rm
.222 .022(2 )J
0 3 rm
(=)S
318 226 :M
.99({P)A
0 2 rm
.955(k)A
0 -2 rm
1.552 .155(, P)J
0 2 rm
.531(l)A
0 -2 rm
3.54 .354(}. The temporary existence of intersecting)J
318 238 :M
-.017(concurrent views occurred due to multiple failures - failure)A
318 249 :M
-.027(of P)A
0 3 rm
-.052(m)A
0 -3 rm
-.028( and network partition - which was perceived to have)A
318 262 :M
.652 .065(occurred 'simultaneously' by P)J
0 3 rm
.089(i)A
0 -3 rm
.308 .031( and P)J
0 3 rm
.089(j)A
0 -3 rm
.5 .05(, and in succession)J
318 275 :M
.403 .04(by P)J
0 3 rm
.156(k)A
0 -3 rm
.3 .03( and P)J
0 3 rm
.087(l)A
0 -3 rm
(.)S
318 300 :M
f2_10 sf
3.878 .388(5.3. Group Formation)J
336 321 :M
f0_10 sf
2.229 .223(We now describe the main aspects of the group)J
318 332 :M
2.713 .271(formation protocol of Newtop. We assume that the)J
318 343 :M
.309 .031(formation of a new group can be initiated by any process.)J
318 354 :M
2.384 .238(Selection of such a process and the names of other)J
318 365 :M
.557 .056(processes that should belong to the group are dictated by)J
318 376 :M
2.035 .203(higher level applications; we therefore assume that a)J
318 387 :M
3.19 .319(process P)J
0 2 rm
.443(i)A
0 -2 rm
2.324 .232( \(initiator\) has the names of the intended)J
318 399 :M
.481 .048(members of a new group g)J
0 2 rm
.166(n)A
0 -2 rm
.27 .027(. P)J
0 2 rm
.092(i)A
0 -2 rm
.41 .041( must not be a member of)J
318 411 :M
.334 .033(any g)J
0 2 rm
.114(x)A
0 -2 rm
.261 .026( such that V)J
0 2 rm
.078(x,i)A
0 -2 rm
.149 .015( = g)J
0 2 rm
.114(n)A
0 -2 rm
.358 .036(. The protocol given below has)J
318 423 :M
.067 .007(the following characteristics. A two phase protocol is used)J
318 434 :M
.401 .04(\(with P)J
0 2 rm
.065(i)A
0 -2 rm
.33 .033( as the coordinator\) to form the group \(steps 1-3\).)J
318 446 :M
.396 .04(If this succeeds, then a member process uses time-silence)J
318 457 :M
1.646 .165(and group view process to monitor liveliness of other)J
318 468 :M
.647 .065(processes \(step 4\); the first message P)J
0 2 rm
.211(k)A
0 -2 rm
.52 .052( sends in the new)J
318 480 :M
2.384 .238(group  g)J
0 2 rm
1.002(n)A
0 -2 rm
2.371 .237( is a special message )J
f4_10 sf
4.375 .438(start-group )J
f0_10 sf
3.025 .302(that is)J
318 492 :M
2.529 .253(multicast for reaching agreement \(in step 5\) on the)J
318 503 :M
1.492 .149(minimum value for message number \()J
f4_10 sf
.388(m.c)A
f0_10 sf
1.34 .134(\) with which)J
318 514 :M
2.292 .229(application-related computational messages are to be)J
318 525 :M
.533 .053(multicast in g)J
0 2 rm
.167(n)A
0 -2 rm
(.)S
318 537 :M
f4_10 sf
.12(Step1)A
f0_10 sf
.226 .023(: P)J
0 2 rm
.075(i)A
0 -2 rm
.369 .037( sends 'form group g)J
0 2 rm
.135(n)A
0 -2 rm
.442 .044(' message to each intended)J
318 549 :M
3.162 .316(member of g)J
0 2 rm
.959(n)A
0 -2 rm
2.578 .258(, inviting them to form a group; the)J
318 561 :M
.119 .012(message contains the process-ids of the intended members)J
318 572 :M
.326 .033(of g)J
0 2 rm
.144(n)A
0 -2 rm
(.)S
318 584 :M
f4_10 sf
.138(Step2)A
f0_10 sf
.343 .034(: When a P)J
0 2 rm
.086(j)A
0 -2 rm
.358 .036(, j )J
cF f1_10 sf
.036(\271)A
sf
.358 .036( i, receives an invitation to form g)J
0 2 rm
.155(n)A
0 -2 rm
(,)S
318 596 :M
.869 .087(it diffuses this message to each intended member of g)J
0 2 rm
.289(n)A
0 -2 rm
(,)S
318 608 :M
.218 .022(piggybacking its 'yes' or 'no' decision.)J
318 619 :M
f4_10 sf
.391(Step3)A
f0_10 sf
1.022 .102(: A 'no' message acts as a 'veto'; P)J
0 2 rm
.244(i)A
0 -2 rm
1.095 .11( sends its 'yes')J
318 631 :M
.91 .091(message if it receives a 'yes ' from the rest within some)J
318 642 :M
.163 .016(time duration, else it sends a 'no'.)J
318 653 :M
f4_10 sf
.179(Step4)A
f0_10 sf
.285 .029(: If a P)J
0 2 rm
.201(k)A
0 -2 rm
.092 .009( )J
f1_10 sf
.323 .032(\316 )J
f0_10 sf
.201(g)A
0 2 rm
.201(n)A
0 -2 rm
f1_10 sf
.092 .009( )J
f0_10 sf
.697 .07(receives an 'yes' message from every)J
318 665 :M
2.211 .221(proposed member of g)J
0 2 rm
.612(n)A
0 -2 rm
1.997 .2(, it activates the time-silence)J
318 677 :M
.029 .003(mechanism and a process GV)J
0 2 rm
(n,k )S
0 -2 rm
.029 .003(for the newly-formed g)J
0 2 rm
(n)S
0 -2 rm
(;)S
318 691 :M
.336 .034(the initial view V)J
0 -3 rm
.116(0)A
0 3 rm
0 2 rm
.096(n,k)A
0 -2 rm
.18 .018( is set to g)J
0 2 rm
.116(n)A
0 -2 rm
.286 .029( and RV)J
0 2 rm
.096(n,k)A
0 -2 rm
.348 .035( is initialised)J
318 703 :M
1.249 .125(to 0. The first message P)J
0 2 rm
.474(k)A
0 -2 rm
1.082 .108( sends in the new group is a)J
318 715 :M
1.294 .129(special message )J
f4_10 sf
.29(start-group)A
f0_10 sf
.988 .099(  which contains an integer)J
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(santosh shrivastava; page: 10 of 11)setjob
%%EndPageSetup
-12 -12 :T
gS 12 12 588 768 rC
58 99 :M
f0_10 sf
.641 .064(field called the )J
f4_10 sf
.212(start-number)A
f0_10 sf
.412 .041( that is set to the )J
f4_10 sf
.373 .037(m.c  )J
f0_10 sf
.748 .075(of the)J
58 110 :M
.662 .066(message. This number indicates P)J
0 2 rm
.176(k)A
0 -2 rm
.797 .08('s proposed minimum)J
58 122 :M
.448 .045(value for message number with which application-related)J
58 133 :M
.179 .018(computational messages are to be multicast in g)J
0 2 rm
.055(n)A
0 -2 rm
(.)S
58 145 :M
f4_10 sf
.092(Step5)A
f0_10 sf
.173 .017(: P)J
0 2 rm
.104(k)A
0 -2 rm
.309 .031( waits for the following condition to be satisfied)J
58 157 :M
.669 .067(before it can send any application related, computational)J
58 168 :M
.438 .044(message in g)J
0 2 rm
.136(n)A
0 -2 rm
.282 .028(: receive a )J
f4_10 sf
.112(start-group)A
f0_10 sf
.469 .047( message from every)J
58 180 :M
.427(P)A
0 2 rm
.213(j)A
0 -2 rm
.903 .09( in its current view V)J
0 2 rm
.32(n,k)A
0 -2 rm
1.109 .111(. \(Note that the current view)J
58 194 :M
.08 .008(need not be V)J
0 -3 rm
(0)S
0 3 rm
0 2 rm
.026(n,k)A
0 -2 rm
.08 .008( due to view updates by GV)J
0 2 rm
.026(n,k)A
0 -2 rm
.08 .008( which is)J
58 206 :M
.159 .016(executing in parallel; also, P)J
0 2 rm
(k)S
0 -2 rm
.146 .015( is not blocked from sending)J
58 218 :M
.472 .047(null messages in g)J
0 2 rm
.154(n)A
0 -2 rm
.541 .054( when prompted by the time-silence\).)J
58 230 :M
2.002 .2(While P)J
0 2 rm
.524(k)A
0 -2 rm
1.48 .148( is waiting for the condition to become true,)J
58 242 :M
1.059(D)A
0 2 rm
1.571 .157(n,k )J
0 -2 rm
2.119 .212(is not allowed to be modified except when P)J
0 2 rm
(k)S
0 -2 rm
58 254 :M
.611 .061(receives a )J
f4_10 sf
.186(start-group)A
f0_10 sf
.603 .06( message with )J
f4_10 sf
.195(start-number)A
f0_10 sf
.724 .072( larger)J
58 265 :M
(than D)S
0 2 rm
(n,k)S
0 -2 rm
.018 .002(, in which case D)J
0 2 rm
(n,k )S
0 -2 rm
.025 .003(is increased to the proposed)J
58 277 :M
f4_10 sf
3.125 .313(start-number )J
f0_10 sf
2.094 .209(of the incoming message. Once all the)J
58 288 :M
-.054(required )A
f4_10 sf
-.056(start-group)A
f0_10 sf
-.055( messages are received, P)A
0 2 rm
-.068(k)A
0 -2 rm
-.053( sets D)A
0 2 rm
-.057(n,k)A
0 -2 rm
-.07( to)A
58 300 :M
f4_10 sf
.597(start-number-max)A
f0_10 sf
1.542 .154( = the maximum of )J
f4_10 sf
.619(start-numbers)A
58 311 :M
f0_10 sf
1.991 .199(proposed by all P)J
0 2 rm
.373(j)A
0 -2 rm
1.407 .141( in view V)J
0 2 rm
.559(n,k)A
0 -2 rm
1.731 .173(; LC)J
0 2 rm
.671(k)A
0 -2 rm
.936 .094( is set to )J
f4_10 sf
.581(start-)A
58 323 :M
.156(number-max)A
f0_10 sf
0 2 rm
.07 .007( )J
0 -2 rm
.204 .02(if )J
f4_10 sf
.139(start-number-max)A
f0_10 sf
.329 .033( is larger; P)J
0 2 rm
.154(k)A
0 -2 rm
.431 .043( then starts)J
58 335 :M
.711 .071(sending and delivering application-related computational)J
58 346 :M
.11 .011(messages of g)J
0 2 rm
(n)S
0 -2 rm
(.)S
76 358 :M
3.083 .308(To see the correctness of the group formation)J
58 369 :M
.959 .096(protocol, suppose that P)J
0 2 rm
.27(k)A
0 -2 rm
.664 .066( is already a member of one or)J
58 381 :M
1.604 .16(more groups when it is attempting to form a new g)J
0 2 rm
.589(n)A
0 -2 rm
(.)S
58 393 :M
.656 .066(While it is waiting for the condition of step 5 to become)J
58 404 :M
.662 .066(true, the value of D)J
0 2 rm
.55 .055(n,k )J
0 -2 rm
.934 .093(is incremented cautiously so that)J
58 416 :M
.176(P)A
0 2 rm
.158(k)A
0 -2 rm
.367 .037( is not delivered any )J
f4_10 sf
.634 .063(m, m.c > start-number-max)J
f0_10 sf
.461 .046(, until)J
58 428 :M
.522 .052(that condition becomes true. Any computational message)J
58 439 :M
1.089 .109(that was multicast in g)J
0 2 rm
.381(n)A
0 -2 rm
.78 .078( will have )J
f4_10 sf
1.634 .163(m.c > start-number-)J
58 451 :M
.235(max)A
f0_10 sf
.56 .056(. This ensures that P)J
0 2 rm
.211(k)A
0 -2 rm
.658 .066( can be delivered the messages)J
58 463 :M
1.816 .182(multicast in g)J
0 2 rm
.567(n)A
0 -2 rm
1.755 .175( together with those multicast in other)J
58 475 :M
-.052(groups, in a non-decreasing order of message numbers)A
f4_10 sf
(.)S
58 498 :M
f2_10 sf
3.155 .315(6. Comparison with Related Work)J
76 519 :M
f0_10 sf
2.229 .223(Psync/Consul [15, 17] is one of the best known)J
58 530 :M
.336 .034(protocol suite that implements causal and symmetric total)J
58 541 :M
.106 .011(delivery protocols; however, it has no support for multiple)J
58 552 :M
2.155 .215(\(overlapping\) process groups. The Trans and Transis)J
58 563 :M
2.084 .208(family of protocols [1, 6, 12] use elegant symmetric)J
58 574 :M
1.21 .121(solutions for providing total order delivery, but are not)J
58 585 :M
2.148 .215(quite general purpose, as they rely on network level)J
58 596 :M
.456 .046(broadcast communication; further, like Psync/Consul, the)J
58 607 :M
1.041 .104(issue of a process belonging to multiple process groups)J
58 618 :M
2.014 .201(has not been addressed. ISIS was the first system to)J
58 629 :M
.925 .092(include support for multiple groups; however the vector)J
58 640 :M
.912 .091(clock based protocols of ISIS [4] become quite difficult)J
58 651 :M
.338 .034(and expensive to implement for arbitrary group structures)J
58 662 :M
2.664 .266(\(e.g., cyclic groups, such as shown in fig. 2\)\). All)J
58 673 :M
2.289 .229(previously published symmetric total order protocols)J
58 684 :M
.245 .024(require multicast messages to contain explicit information)J
58 695 :M
1.986 .199(about causally preceding messages, and represent the)J
58 706 :M
.197 .02(received messages in a directed acyclic graph. The task of)J
58 717 :M
1.544 .154(maintaining such a graph is much more complicated -)J
318 99 :M
.497 .05(especially for multiple groups - than the simple approach)J
318 110 :M
1.164 .116(of using receive vectors adopted in Newtop. Newtop is)J
318 121 :M
.322 .032(able to offer this advantage because it does not attempt to)J
318 132 :M
.704 .07(precisely represent the )J
f4_10 sf
.189(absence)A
f0_10 sf
.65 .065( of causal relation among)J
318 143 :M
.737 .074(multicasts as this is not essential for total order message)J
318 154 :M
2.189 .219(delivery. The net effect is that Newtop has low and)J
318 165 :M
1.511 .151(bounded message space overhead \(the protocol related)J
318 176 :M
.006 .001(information contained in a multicast message is small\) and)J
318 187 :M
.335 .034(is relatively easy to implement even when process groups)J
318 198 :M
.878 .088(overlap in an arbitrary manner. Further, Newtop has the)J
318 209 :M
1.82 .182(capability, not available on any existing protocols, of)J
318 220 :M
.095 .009(supporting both symmetric and asymmetric protocols.)J
336 231 :M
.323 .032(As explained with respect to fig. 3, virtual synchrony)J
318 242 :M
.379 .038(provided by Newtop is more flexible than that of ISIS. In)J
318 253 :M
.891 .089(this respect, Newtop has the same functionality as other)J
318 264 :M
1.243 .124(modern group communication systems, such as Transis)J
318 275 :M
-.089(and Relacs [3].)A
336 286 :M
.117 .012(The membership algorithm of Newtop is based on the)J
318 297 :M
.437 .044(approach used in Psync/Consul, adapted to the context of)J
318 308 :M
1.159 .116(logical clocks and extended to coordinate view updates)J
318 319 :M
2.377 .238(with message delivery. Our protocol maintains view)J
318 330 :M
.813 .081(consistency in the presence of \(real or virtual\) partitions)J
318 341 :M
.208 .021(by permitting a group of processes to partition themselves)J
318 352 :M
.462 .046(into two or more sub-groups of connected processes with)J
318 363 :M
.368 .037(the property that: \(i\) the functioning processes within any)J
318 374 :M
2.643 .264(given subgroup will have identical views about the)J
318 385 :M
.459 .046(membership; and \(ii\) the views of processes belonging to)J
318 396 :M
.911 .091(different subgroups are guaranteed to stabilise into non-)J
318 407 :M
.097 .01(intersecting ones. This makes Newtop more powerful than)J
318 418 :M
-.023(many other protocols [14, 18] that can guarantee continued)A
318 429 :M
.56 .056(group operation only when the group partitions in such a)J
318 440 :M
.459 .046(way that exactly one subgroup can be uniquely identified)J
318 451 :M
1.567 .157(as the primary. The membership service of Newtop is)J
318 462 :M
.382 .038(essentially similar in functionality to those of Transis [2],)J
318 473 :M
.218 .022(the protocols of [12, 19] and Relacs [3]. Below we briefly)J
318 484 :M
-.044(examine [19].)A
336 495 :M
.733 .073(In the protocol of [19], concurrent views are always)J
318 506 :M
.982 .098(non-intersecting \(considering example 3 of the previous)J
318 519 :M
.188 .019(section, the situation where V)J
0 -3 rm
.055(1)A
0 3 rm
.083 .008( of P)J
0 3 rm
.055(k)A
0 -3 rm
.106 .011( and P)J
0 3 rm
(l)S
0 -3 rm
.184 .018( intersect with)J
318 534 :M
1.162(V)A
0 -3 rm
.805(1)A
0 3 rm
1.216 .122( of P)J
0 3 rm
.447(i)A
0 -3 rm
1.547 .155( and P)J
0 3 rm
.447(j)A
0 -3 rm
3.02 .302( will not occur\). Never-intersecting)J
318 547 :M
1.522 .152(concurrent views are guaranteed in [19] essentially by)J
318 558 :M
1.126 .113(defining a process view as a set of process )J
f4_10 sf
.366(signatures)A
f0_10 sf
(,)S
318 569 :M
2.459 .246(where a signature is a tuple: {process-id, sequence-)J
318 580 :M
.455 .046(number}. It is possible to adapt this approach in Newtop.)J
318 591 :M
.59 .059(Let GV)J
0 2 rm
.087(i)A
0 -2 rm
.427 .043( replace V)J
0 2 rm
.087(i)A
0 -2 rm
.195 .019( by )J
f1_10 sf
.197(J)A
f0_10 sf
0 2 rm
.087(i)A
0 -2 rm
.309 .031( = {{P)J
0 2 rm
.087(j)A
0 -2 rm
.226 .023(, e)J
0 2 rm
.087(i)A
0 -2 rm
.153 .015(} | )J
f1_10 sf
.222(")A
f0_10 sf
.209 .021( P)J
0 2 rm
.087(j)A
0 -2 rm
.071 .007( )J
f1_10 sf
.222(\316)A
f0_10 sf
.252 .025( V)J
0 2 rm
.087(i)A
0 -2 rm
.627 .063(}, where)J
318 603 :M
.055(e)A
0 2 rm
(i)S
0 -2 rm
.17 .017( is the total number of processes GV)J
0 2 rm
(i)S
0 -2 rm
.201 .02( has excluded from)J
318 617 :M
.686 .069(the initial view; e)J
0 2 rm
.134(i)A
0 -2 rm
.243(=e)A
0 2 rm
.134(j)A
0 -2 rm
.386 .039(, if V)J
0 2 rm
.134(i)A
0 -2 rm
0 -3 rm
.161(r)A
0 3 rm
.31(=V)A
0 2 rm
.134(j)A
0 -2 rm
0 -3 rm
.161(r)A
0 3 rm
.614 .061( for every r)J
cF f1_10 sf
.061(\263)A
sf
.614 .061(0. Thus, in)J
318 631 :M
.726 .073(the example, )J
f1_10 sf
.282(J)A
f0_10 sf
0 -3 rm
.224(0)A
0 3 rm
.232(={{P)A
0 2 rm
.124(i)A
0 -2 rm
.481 .048(, 0}, {P)J
0 2 rm
.124(j)A
0 -2 rm
.481 .048(, 0}, {P)J
0 2 rm
.224(k)A
0 -2 rm
.727 .073(, 0},{P)J
0 2 rm
.124(l)A
0 -2 rm
.727 .073(, 0},{P)J
0 2 rm
.348(m)A
0 -2 rm
(,)S
318 643 :M
.541 .054(0}} for all functioning processes of )J
f4_10 sf
.182(g)A
f0_10 sf
.708 .071(. After partitioning,)J
318 656 :M
f1_10 sf
.316(J)A
f0_10 sf
0 2 rm
.139(i)A
0 -2 rm
0 -3 rm
.251(1)A
0 3 rm
.34 .034(= )J
f1_10 sf
.316(J)A
f0_10 sf
0 2 rm
.139(j)A
0 -2 rm
0 -3 rm
.251(1)A
0 3 rm
.261(={{P)A
0 2 rm
.139(i)A
0 -2 rm
.54 .054(, 3}, {P)J
0 2 rm
.139(j)A
0 -2 rm
.713 .071(, 3}} which do not intersect with)J
318 670 :M
f1_10 sf
1.055(J)A
f0_10 sf
0 2 rm
.836(k)A
0 -2 rm
0 -3 rm
.836(1)A
0 3 rm
.943(=)A
f1_10 sf
1.055(J)A
f0_10 sf
0 2 rm
.465(l)A
0 -2 rm
0 -3 rm
.836(1)A
0 3 rm
.869(={{P)A
0 2 rm
.465(i)A
0 -2 rm
1.801 .18(, 1}, {P)J
0 2 rm
.465(j)A
0 -2 rm
1.801 .18(, 1}, {P)J
0 2 rm
.836(k)A
0 -2 rm
2.721 .272(, 1},{P)J
0 2 rm
.465(l)A
0 -2 rm
2.33 .233(, 1}}; after)J
318 684 :M
.067 .007(stabilising, )J
f1_10 sf
(J)S
f0_10 sf
0 2 rm
(k)S
0 -2 rm
0 -3 rm
(2)S
0 3 rm
(=)S
f1_10 sf
(J)S
f0_10 sf
0 2 rm
(l)S
0 -2 rm
0 -3 rm
(2)S
0 3 rm
.017(={{P)A
0 2 rm
(k)S
0 -2 rm
.014(,3},{P)A
0 2 rm
(l)S
0 -2 rm
.016(,3}}.)A
336 696 :M
2.358 .236(Finally, unlike other protocols, Newtop supports)J
318 707 :M
.051 .005(dynamic formation of new groups. The formation protocol)J
318 718 :M
.475 .048(exploits the fact that processes are permitted to belong to)J
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(santosh shrivastava; page: 11 of 11)setjob
%%EndPageSetup
-12 -12 :T
gS 12 12 588 768 rC
58 99 :M
f0_10 sf
2.119 .212(several groups. The group formation facility is more)J
58 110 :M
2.556 .256(powerful than 'joining an existing group' facility of)J
58 121 :M
.697 .07(current protocols, as the effect of joining a group can be)J
58 132 :M
-.023(obtained by processes forming a new group and exiting the)A
58 143 :M
.104 .01(previous ones.)J
58 166 :M
f2_10 sf
3.794 .379(7. Concluding Remarks)J
76 187 :M
f0_10 sf
1.496 .15(Newtop is a general purpose protocol suite that is)J
58 198 :M
4.494 .449(suitable in a variety of settings: processes can)J
58 209 :M
.726 .073(simultaneously belong to many groups, group size could)J
58 220 :M
1.182 .118(be large, and processes could be geographically widely)J
58 231 :M
1.226 .123(separated, communicating over the Internet. It supports)J
58 242 :M
2.841 .284(both symmetric and asymmetric ordering protocols,)J
58 253 :M
.108 .011(allowing a multi-group process to use both. Newtop offers)J
58 264 :M
.494 .049(this flexibility for a small price: new multicast in a given)J
58 275 :M
.323 .032(group is blocked only if any multicast made in a different)J
58 286 :M
3.795 .379(asymmetric group is awaiting distribution by the)J
58 297 :M
.794 .079(sequencer. If only symmetric version is used, Newtop is)J
58 308 :M
2.782 .278(totally non-blocking on send operations. Newtop is)J
58 319 :M
.861 .086(however not complex, as it offers a very simple method)J
58 330 :M
1.744 .174(for dealing with multiple process groups and has low)J
58 341 :M
2.145 .214(message space overhead. The membership service of)J
58 352 :M
3.645 .364(Newtop supports concurrent existence of multiple)J
58 363 :M
1.821 .182(subgroups, leaving it to applications to decide on the)J
58 374 :M
1.911 .191(eventual fate of such subgroups. In addition, Newtop)J
58 385 :M
.278 .028(supports dynamic formation of new groups. We have also)J
58 396 :M
.3 .03(designed and implemented a flow control mechanism that)J
58 407 :M
1.223 .122(ensures that a sender process does not cause buffers to)J
58 418 :M
.668 .067(overflow at any of the functioning destination processes.)J
58 429 :M
-.12(The interested reader is referred to [11] for details.)A
58 451 :M
f2_10 sf
4.49 .449(Acknowledgements: )J
f0_9 sf
2.079 .208(This work has been supported in)J
58 461 :M
1.574 .157(part by grants from the UK MOD and the Engineering and)J
58 471 :M
1.615 .161(Physical Sciences Research Council \(Grant no. GR/H1078\),)J
58 481 :M
2.438 .244(ESPRIT basic research project 6360 \(BROADCAST\) and)J
58 491 :M
1.663 .166(CNPq/Brazil. Comments from and Discussions with Michel)J
58 501 :M
.586 .059(Raynal, Ozalp Babaoglu, Dalia Malki and Sam Toueg clarified)J
58 511 :M
3.532 .353(our understanding.)J
f0_10 sf
.333 .033( )J
f0_9 sf
2.039 .204(Colin Low hinted at the possibility of)J
58 521 :M
1.61 .161(using overlapping groups for solving the problem of online)J
58 532 :M
1.579 .158(server migration)J
f0_10 sf
(.)S
58 555 :M
f2_10 sf
.597(References)A
58 575 :M
f0_9 sf
1.462 .146([1] Amir, Y., et al, "Transis: A Communication Sub-system)J
58 585 :M
1.367 .137(for High Availability", Digest of Papers,  FTCS-22, Boston,)J
58 595 :M
1.501 .15(July 1992, pp. 76-84.)J
58 605 :M
3.558 .356([2] Amir, Y., Dolev, D., Kramer, S., and Malki, D.,)J
58 615 :M
4.19 .419("Membership Algorithm for Multicast Communication)J
58 625 :M
1.847 .185(Groups", Proc. of 6th Intl. Workshop on Dist. Algorithms,)J
58 635 :M
1.413 .141(pp 292-312, November 1992.)J
58 645 :M
1.507 .151([3] Babaoglu, O., Baker, M., Davoli, R., and Gianchini, L.,)J
58 655 :M
2.09 .209("Relacs: a Communications Infrastructure for Constructing)J
58 665 :M
1.953 .195(Reliable Applications in Large-Scale Distributed Systems",)J
58 675 :M
3.34 .334(BROADCAST Project deliverable report, October 1994)J
58 685 :M
1.812 .181(\(available from Dept. of Computing Science, University of)J
58 695 :M
.332 .033(Newcastle upon Tyne, UK\).)J
318 98 :M
1.26 .126([4] Birman, K., Schiper, A. and Stephenson, P.,"Lightweight)J
318 108 :M
1.16 .116(Causal and Atomic Group Multicast", ACM Transactions On)J
318 118 :M
.971 .097(Computer Systems, Vol. 9, No. 3, August 1991, pp. 272-314.)J
318 128 :M
.976 .098([5] Chandra, C.T. and S.Toueg, \322Unreliable Failure Detectors)J
318 138 :M
1.949 .195(for Asynchronous Systems\323 Proc. of 10th ACM Symp. on)J
318 148 :M
1.076 .108(Principles of Dist. Comp., Montreal, , August 1991, pp. 257-)J
318 158 :M
.75(272.)A
318 168 :M
2.046 .205([6] Dolev, D., Kramer, S. and Malki, D., "Early Delivery)J
318 178 :M
2.153 .215(Totally Ordered Multicast in Asynchronous Environment",)J
318 188 :M
2.111 .211(Digest of Papers,  FTCS-23, Toulouse, pp. 544-553, June)J
318 198 :M
.687(1993.)A
318 208 :M
.783 .078([7] Ezhilchelvan, P.E., Macedo, R. A., and Shrivastava, S. K.,)J
318 218 :M
1.544 .154("Newtop: A Fault-tolerant Group Communication Protocol",)J
318 228 :M
3.34 .334(BROADCAST Project deliverable report, October 1994)J
318 238 :M
1.812 .181(\(available from Dept. of Computing Science, University of)J
318 248 :M
.332 .033(Newcastle upon Tyne, UK\).)J
318 258 :M
1.549 .155([8] Fischer, M., Lynch N., and Paterson, M., "Impossibility)J
318 268 :M
1.067 .107(of Distributed Consensus with One Faulty Process", J. ACM,)J
318 278 :M
1.403 .14(32, April 1985, pp 374-382.)J
318 288 :M
.492 .049([9] Garcia-Molina, H., and Spauster, A., "Ordered and Reliable)J
318 298 :M
1.201 .12(Multicast Communication", ACM Transactions On Computer)J
318 308 :M
1.056 .106(Systems, Vol. 9, No. 3, August 1991, pp. 242-271.)J
318 318 :M
1.205 .12([10] Lamport, L., "Time, clocks, and ordering of events in a)J
318 328 :M
1.01 .101(distributed system", Commun. of ACM, 21, 7, July 1978, pp.)J
318 338 :M
.536(558-565.)A
318 348 :M
1.964 .196([11] Macedo, R. A., "Fault-tolerant Group Communication)J
318 358 :M
1.854 .185(Protocols for Asynchronous Systems", Ph. D. thesis, 1994,)J
318 368 :M
.726 .073(University of Newcastle upon Tyne.)J
318 378 :M
2.005 .201([12] Melliar-Smith, P. M., Moser L.E., and Agarwala, V.,)J
318 388 :M
4.171 .417("Broadcast Protocols For Distributed Systems", IEEE)J
318 398 :M
.933 .093(Transactions on Parallel and Distributed Systems, Vol. 1, No.)J
318 408 :M
1.291 .129(1, January 1990, pp. 17-25.)J
318 418 :M
2.364 .236([13] Melliar-Smith, P.M., Moser L.E., and Agarwala, V.,)J
318 428 :M
3.654 .365("Membership Algorithms for Asynchronous Distributed)J
318 438 :M
2.23 .223(Systems", Proc. of 12th Intl. Conf. on Distributed Comp.)J
318 448 :M
1.501 .15(Systems, pp. 480-488, May 1991.)J
318 458 :M
3.551 .355([14] Mishra, S., Peterson L., and Schlichting, R., "A)J
318 468 :M
2.27 .227(membership Protocol Based on Partial Order", Proc. IFIP)J
318 478 :M
1.83 .183(Conf. on Dependable Computing For Critical Applications,)J
318 488 :M
1.306 .131(Tuscon, Feb. 1991, pp 137-145.)J
318 498 :M
1.275 .127([15] Mishra, S., Peterson L., and Schlichting, R., "Consul: a)J
318 508 :M
2.985 .299(Communications Substrate for Fault-Tolerant Distributed)J
318 518 :M
1.929 .193(Programs", Distributed Systems Engineering, 1 \(1993\), pp.)J
318 528 :M
.543(87-103.)A
318 538 :M
3.018 .302([16] Mostefaoui, A., Raynal, M., "Causal Multicasts in)J
318 548 :M
3.485 .349(Overlapping Groups: Towards a Low Cost Approach",)J
318 558 :M
.265 .027(Research Report, IRISA Campus de Beaulieu -35042 RENNES,)J
318 568 :M
.211(France.)A
318 578 :M
2.246 .225([17] Peterson, L. L., Bucholz, N. C. and Schlichting, R.,)J
318 588 :M
1.931 .193("Preserving and Using Context Information in Interprocess)J
318 598 :M
1.58 .158(Communication", ACM Transactions on Computer Systems,)J
318 608 :M
1.082 .108(7 \(3\), August 1989, pp. 217-246.)J
318 618 :M
.222([18])A
f2_9 sf
.121 .012( )J
f0_9 sf
.986 .099(Ricciardi, A.M., and Birman, K., "Using Process Groups)J
318 628 :M
6.137 .614(to Implement Failure Detection in Asynchronous)J
318 638 :M
1.217 .122(Environments", Proc. of Annual ACM symposium on PoDC,)J
318 648 :M
1.39 .139(pp. 341-352, August 1991.)J
318 658 :M
4.865 .486([19] Schiper, A., and Ricciardi,  A.M., "Virtually)J
318 668 :M
3.385 .338(Synchronous Communication based on a Weak Failure)J
318 678 :M
1.696 .17(Suspector", Digest of Papers, FTCS-23, Toulouse, pp. 534-)J
318 688 :M
1.472 .147(543, June 1993.)J
endp
%%Trailer
end		% md
%%EOF

