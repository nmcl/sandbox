%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: doc.dvi
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSCommandLine: /usr/local/bin/dvips doc -o doc.ps
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1997.04.15:1036
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (doc.dvi)
@start /Fa 1 51 df<13FF000313E0000F7F381E07F8383801FC486C7E0078137F00FC
7F6C1480A2141FA2127CC7123F1500A2147EA25C5C495A495AEB078049C7FC131E5B1370
9038E00380EA01C0EA03803907000700120E1218003FB5FC5AB55AA319267DA521>50
D E /Fb 3 121 df<0060150600F0150F6C151F007C153E6C157C6C15F86C6CEB01F06C
6CEB03E06C6CEB07C06C6CEB0F806C6CEB1F00017C133E6D5B6D5B90380F81F0903807C3
E0903803E7C06DB45A6D90C7FC147EA214FF497F903803E7C0903807C3E090380F81F049
C67E013E137C497F497F4848EB0F804848EB07C04848EB03E04848EB01F048C812F8003E
157C48153E48151F48150F00601506282874A841>2 D<EB0FE0EB7FFC48B5FC48148048
14C04814E04814F0A24814F8A24814FCA2B612FEA86C14FCA26C14F8A26C14F0A26C14E0
6C14C06C14806C140038007FFCEB0FE01F207BA42A>15 D<137E3801FF80000713E0380F
81F0381F0078003E1338003C131C127C143E0078137E12F8A2143C14181400A21278127C
A27E121E7E6C7E6C7EEA01F013FC48B4FC3807EF80380F03E0381E01F0383E00F8481378
143C0078133E12F8141FA6127C141E003C133E7E001F137C380F80783807C0F03801F7E0
3800FFC0EB3F80130FEB03C0EB01E0EB00F01478147C143EA2141E141FA21218123C127E
A2141E007C133E1238143C6C137C001E13F8380F81F03807FFE00001138038007E00184C
7ABA25>120 D E /Fc 3 108 df<121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A0A7A
8917>58 D<150C151EA2153CA31578A315F0A3EC01E0A3EC03C0A3EC0780A3EC0F00A314
1EA35CA35CA35CA3495AA3495AA2495AA349C7FCA3131EA35BA35BA35BA3485AA3485AA3
485AA348C8FCA3121EA35AA35AA35AA212601F537BBD2A>61 D<EB03F013FF5AA2380007
E0A4495AA4495AA449C8FCA4137EED07C0ED1FE0ED3FF049EBF838913801E0F8EC0381EC
07033901F80E07141C143891387003F03A03F0E001C0D9F1C0C7FCEBF38001FFC8FC485A
6D7E14F014FC380FC1FEEBC07FEC1F80A248486C7E1670A33A3F001F80E0A3ED81C0127E
020F1380158391380787004814FE007C6D5A0038EB00F8253B7CB92B>107
D E /Fd 48 122 df<EA01E0EA03F0EA07F8120FEA1FFCA4EA0FF8EA07B8EA0038A21370
A213E0A2EA01C012031380EA0700120E5A5A5A5A12400E1A7B8919>44
D<387FFFF8A3B512F0A2150579941E>I<EC03F8EC0FFEEC3FFF91387C0F809138F007C0
903901C003E09039038001F0EB0700010E14F8131EEB1C30D9387813FC14381370A213E0
A33A01C07003F8A214E0ED07F0EBC1C016E09038C7800F9039FF001FC06C4814800178EB
3F0090C7127E5D4A5A4A5AEC07C04A5A023EC7FC5CEB01F0EB07C0495A011EC8FC5B0170
14C0491301485A485A48C7EA0380A2000E1407481500D81FE05BD83FFC131E9038FFC07E
39787FFFFCD8700F5BD8F0075BD8E0015B6D5B48011FC7FC263A79B72A>50
D<010314106E13F89138F007F049B512E016C0168016004913FC15F015C0010EC8FC5BA4
5BA45BA2147E903873FF804913E09038FF83F0EBFC01496C7ED801E07F5B49137CC8127E
A315FEA54A5A121C123E127F48495A5A485C48130700E05C4A5AA24A5A4AC7FC0070133E
14FC6C485A383E07F0381FFFC0000790C8FCEA03F8253A77B72A>53
D<131E137F5B481380A314005B6C5A137890C7FCB0120F487E487E127F12FFA36C5A90C7
FC123C112478A319>58 D<EE01C01603A21607160FA2161F83163FA2167F16FF16EF1501
16CFED038FA2ED070FA2150E151E151C1538A203707FA2EDE007A2EC01C014031580EC07
00A2140EA25CA25C027FB5FCA291B6FC9139E00007F849481303A2495A130791C7FC5B13
0E5BA25BA25B13F01201D807F84A7EB56C48B512F0A2020015E0343C7BBB3E>65
D<DB03FE130492391FFF800C92B5EAE01C913A03FE01F03C913A0FF000787CDA1FC0EB1C
F8DA7F80130D02FEC7120F49481407494815F0495A49481403495A494815E0137F49C8FC
5B000117C0485AA2485A1880120F5B001F93C7FCA2485AA3485AA45B12FFA4173890C9FC
A25FA25F7E6D4A5AA2003F4B5AA24CC7FC6C6C140E5E6C6C5C00075D6C6C5C6C6CEB03C0
D800FEEB0F8090267FC07EC8FC90381FFFFC010713F0010090C9FC363D74BA3B>67
D<0103B612FC49EDFF8018E0903B000FF0001FF04BEB07F8EF01FC717E4A48147FA2F03F
80A24A48EC1FC0A44AC813E0A414FEA44948153FA4494816C0187FA34948168018FFA219
0049485C60A24D5A495A4D5A60170F49485D4D5A4D5A4DC7FC49C85A4C5AEE03F84C5A01
FEEC1FE0EE7F800001DA03FFC8FCB712FC16E093C9FC3B397BB83F>I<0103B8FC5B7F90
3A000FF000034BEB007F183E181E4A5AA44A5A181CA34AC8FCEE0380A2181802FE49C7FC
A35E4948130E161E167E91B512FE495CA2ECF800167C49481338A4494849136018E0A293
386001C049481300EF0380A34948EC0700A2170E171E49C8FC5F177C5F01FE1401160700
01ED7FF0B8FC5FA238397BB838>I<0103B712FE5B7F903A000FF000074B1300187C183C
4A5AA44A5A1838A34AC8FCA21603EF803002FE49C7FCA35E4948130E161EA216FE49B55A
A3ECF80049481378A449481370A44948136093C8FCA3495AA449CAFCA413FEA2487EB6FC
A25C37397BB836>I<DB03FE130492391FFF800C92B5EAE01C913A03FE01F03C913A0FF0
00787CDA1FC0EB1CF8DA7F80130D02FEC7120F49481407494815F0495A49481403495A49
4815E0137F49C8FC5B000117C0485AA2485A1880120F5B001F93C7FCA2485AA3485AA45B
12FF0303B512C04B14E06F14C092390003F800A290C8FC4C5AA37E6D4A5AA2123FA24C5A
6C7EA26C6C143F6C6C4A5A000315EFD801FCEB01CF6C6CEB078790277FC03F03C7FC9039
1FFFFC01010701F0C8FC01001380363D74BA40>I<0103B5D8E00FB51280496E4814C004
E015809026000FF0C7383FC0004B5DA34A484AC7FCA44A4814FEA44AC7485AA402FE4A5A
A449484A5AA391B7FC495EA202F8C7120FA249484A5AA449484A5AA449484AC8FCA44948
14FEA449C7485AA401FE4A5AA200011507B5D8FC03B512F0A342397BB83E>I<0103B512
F8A216F090390007F8005DA34A5AA44A5AA44A5AA44AC7FCA414FEA4495AA4495AA4495A
A4495AA4495AA4495AA449C8FCA25B007F13FEB5FC7E25397CB820>I<0207B512E017F0
17E091390003FC005EA34B5AA44B5AA44B5AA44B5AA44BC7FCA415FEA44A5AA44A5AA44A
5AA44A5A121E123F5A48495AA248495A4891C8FC00E05B6C13FE00705B387803F8383E0F
F0381FFFC06C90C9FCEA01F82C3B78B82C>I<0103B512F849806D5C9026000FF8C7FC15
E0A34A5AA44A5AA44AC8FCA414FEA4495AA4495AA4495AA44948140C171CA21738495AA2
1770A2494814F017E01601A249C7EA03C01607A2EE1F8001FE143FEEFF0000011407B8FC
5EA22E397BB834>76 D<902603FFF8923807FFE0494D13F06D4D13E0D9000FEFF0004F5A
A21977021D4C5AA2DA1CFCEC01CFA202384B485AF0071FA2180E02704CC7FC181CA21838
02E0ED707EA2037E14E0A2D901C04A485AEF0380A2EF0700D903804B5A170EA2171CD907
004A485AA26F1370A2010E4B485AEE01C0A2EE0380494C5AEE0700A2160E494A495AA2ED
1FB8A24902F049C8FC5EA201F05C187E00015DD807F816FEB500C09039007FFFFC151EDA
800E5D4C397AB84A>I<902603FFF091B51280494B14C06F1680D9000F9139000FF000F0
07C06F5DA2021D93C7FCEC1CFEA2814A6C140EA26F7EA202705D6F7EA282DAE00F5CA26F
7EA2D901C05D6F7EA349486C6C5BA282150049C7495A167FA3010E91383F8380A217C316
1F4903C7C8FCEE0FE7A349EC07FEA31603495DA2160113F0705A1201EA07F8B500C01478
1770173042397BB83E>I<ED03FE92383FFFC092B512F0913903FC07F891390FE001FC91
393F8000FE4AC7127F02FEEC3F80D901F8EC1FC0EB07F04948EC0FE0131F4A15F0494814
0749C8FC4916F8485AA2485AA2485AA2120F5B001F160F5B123FA34848ED1FF0A44848ED
3FE0A3EF7FC0A2188017FF18005E5F16035F007F4B5A4C5AA24C5A003F4B5A6D4A5A001F
4BC7FC6D495A000F4A5A6C6CEB07F06C6C495A6C6CEB3F802700FF81FFC8FC90383FFFFC
6D13E0010190C9FC353D74BA40>I<0103B612F84915FF6D1680903B000FF0007FE04BEB
0FF0EF07F817034A4814FCA318FE4A5AA44AC7EA07FCA318F802FE140F18F0EF1FE0A249
48EC3FC0EF7F80EFFF00EE03FC4948EB1FF891B612E0178004F8C7FCD907F0C9FCA4495A
A4495AA4495AA449CAFCA413FEA21201B512FCA25C37397BB838>I<92383FC004913901
FFF00C0207EBF81C91390FC07E3C91393E001E7C4AEB07F84A1303495A4A1301494814F0
13075C130F91C713E05BA34915C0A36E90C7FCA2806D7E14FCECFF806D13F06D13FE6D6D
7E6D806D80023F7F02077FEC007FED0FFC150315011500A3167C1206120EA3001E5DA34B
5A003E5D15035E003F4A5A48140F6D49C7FC6D133ED879F05B39F0FC03F039E07FFFE001
1F138026C003FCC8FC2E3D7ABA2F>83 D<0003B812E05AA2260FF800EB001F01C049EB07
C090C71403121E4A5A121C003C178012384A5A12781270EF07004A5A5AA2481606C74848
90C7FCA44A5AA44A5AA44AC9FCA414FEA4495AA4495AA4495AA4495AA2EB3FF0007FB512
F8A3333971B83B>I<001FB5903807FFFC486E4813FE030014FC26007F809038007F8091
C8EA3E00173CA201FE1538A448485DA448485DA448484A5AA448484A5AA448484AC7FCA4
4848140EA448C85AA400FE5DA35EA25EA24B5A007E4A5AA24BC8FC003E140E003F5C6C5C
6C6C13F03907C003E03903F01F806CB5C9FC38007FFCEB1FE0373B70B83E>I<277FFFF0
07B590381FFFE0B5495D6C84D803FEC7D83FE0903803FE0001F80380EB00F86262A24F5A
1903621907047F92C7FC190E16FF4B5DA2DB03BF5C7F0001DA073F5CA2030E5D83DB1C1F
495A180303385D4EC8FC157003F0140E15E0DA01C05CA2DA03805CA2DA07005CA2020E5D
17C14A5DEFC3805C027802C7C9FC14704A14CE13FE6C6C4814DCA24A14F8A291C75B160F
495D5F5B5F5B4992CAFCA249140E4B3B6FB853>87 D<49B539E003FFFE704813FF4C6C13
FED9000790C713E0DA03FCEC7F00187C020115786F5C4D5A02005D6F495A4DC7FC6F5BEE
801E5F033F5BEEC0705F92381FC1C016E3EEE780DB0FEFC8FC16FE6F5A5EA2150382A215
0782150F151CED3CFF5D4B7EDA01E07FEDC03FDA03807FEC0700020E131F021E805C4A13
0F0270805C49481307494880130749C71203011E81133E13FED807FF4A7E007F01C09038
7FFFF8B56C816C495D40397CB83E>I<14F8EB07FE90380FFF1C90383F07BE90387C03FE
EBF801EA01F000035CEBE0001207485A4A5AEA1F80123FA249485A5AA300FE495AA44849
5AEDC1C0A391381F8380A2143F127C91387F8700007E13FF393E03CF8E381F0F8F390FFF
07FC3907FC03F83901F000F0222677A42A>97 D<133FEA0FFF5A7EEA007EA45BA4485AA4
485AA4485A14F8EBE3FEEBEFFF390FDF0F809038FC07C001F013E0EBE003EA1FC015F013
80A2EA3F00A4007E1307A448EB0FE0A315C048131FA21580EC3F00A2147E147C14FC007C
5B495A383C03E0381E0FC06CB4C7FC6C5AEA01F01C3B77B926>I<147F903803FFC04913
E090381FC1F090383F0078017C13384913F83801F00100031303EA07E0D80FC013F0EC01
E04848C7FCA2123F90C8FC5AA312FEA55AA315101538007C147015F0007EEB01E0003EEB
07C06CEB1F00380F80FE3807FFF86C13E0C690C7FC1D2677A426>I<ED01F8157F15FF15
7FED03F0A4ED07E0A4ED0FC0A4ED1F80A4ED3F0014F8EB07FEEB0FFF90383F07FEEB7C03
EBF801EA01F000035CEBE0001207485A4A5AEA1F80123FA249485A5AA300FE495AA44849
5AEDC1C0A391381F8380A2143F127C91387F8700007E13FF393E03CF8E381F0F8F390FFF
07FC3907FC03F83901F000F0253B77B92A>I<147F903803FFC0010F13E090381F81F0EB
7E00491378485A485A485AA2485A001F14F090388001E0003FEB07C0EC3F8048B5120014
FC14E090C8FC12FEA65AA2007C14101538007E147015F0003EEB01E06CEB07C0EC1F0038
0F80FE3807FFF86C13E0C690C7FC1D2677A426>I<ED07C0ED0FF0ED1FF8ED3C3CED78FC
15F8EC01F915F1EDF0F80203137016005D1407A44A5AA54A5AA2010FB5128016C0168090
39001F80004AC7FCA5147EA55CA5495AA5495AA5495AA45C130FA35C131FA391C8FCA2EA
1C3E123E127EEAFE3C5B12FCEA78F0EA7FE06C5AEA0F80264C82BA19>I<EC07C0EC3FF0
91387FF8E0903901F83DF0903803E01F903807C00FEB0F80011F14E090383F0007A2137E
01FEEB0FC05B1201A249EB1F801203A34848EB3F00A449137EA45DA20003130114036C6C
485A140F3800F83DEB7FF96D485AEB0FC3EB0003A24A5AA44A5A121C003E495A127E00FE
49C7FC147E485B387803F8383FFFE06C1380D803FEC8FC24367CA426>I<EB03F013FF5A
7EEB07E0A4495AA4495AA449C8FCA4137EEC07F0EC1FFCEC7FFE9038FCF83F9039FDE01F
80EBFF80EC000F485A16C05B49EB1F8012035BA34848EB3F00A3157E485AA35D485A9138
01F81CA33A3F0003F038A3EDE070127E16E0A2EDE3C048903801FF80007C6D1300003814
3C263B7BB92A>I<EB01C0EB03E0EB07F0A214E014C0EB038090C7FCAB13F0EA03FC487E
EA0F1F121CA21238A2485AA3EAE07EA25B1200A2485AA3485AA3485AA214E0EA0FC0A238
1F81C0A3EB0380A2EB0700A2131EEA0FFC6C5AEA01E0143879B619>I<EB03F013FF5A7E
EB07E0A4495AA4495AA449C8FCA4137EED0F80ED3FC0ED7FE09038FC01F0913803C1F0EC
0703EC0E073A01F80C0FE0141891383007C09138700380484848C7FCEBF1C0EBF38001FF
C8FC485A6D7E14E014F8380FC3FCEBC0FE143FA248486C7EED81C0A33A3F003F0380A3ED
0700127EA2EC1F0E5D48EB0FFC007C6D5A0038EB01E0243B7BB926>107
D<EB0FC0EA03FF5A7E38001F80A4EB3F00A4137EA45BA4485AA4485AA4485AA4485AA448
5AA448C7FCA4127E130EA3485AA45BA2EA7C70A2EA3FE06C5A6C5A123B79B915>I<D801
E001FEEB07F03C07F803FF801FFC260FFC0F9038C07FFE3C1E3E1F07E0F83F001C903B3C
03F1E01F8026383F70EBF380913AE001F7000F02C013FE007018C002805B4A4848EB1F80
485A017E5CA21200494948EB3F00A3187E4848495AA3604848495A943801F81CA3484890
3A3F0003F038A3F0E0704848137E19E0A2F0E1C0484849903801FF80000F027C6D13006C
C70038143C3E2679A444>I<D801E013FE3A07F803FF80260FFC0F7F3A1E3E1F07E0001C
90383C03F038383F70ECE00114C000708114804A485A485A137EA2120049495AA34B5A48
5AA34B5A485A92383F0380A3484890387E0700A3ED7C0E485A5EA25E4848EB3FF0000F6E
5A6CC7EA0780292679A42F>I<147F903803FFC04913E090381FC1F090383E00F849137C
49137E4848133E12034848133F485AA2485AA2003F147F90C7FC5AA300FE14FEA315FC14
014814F8A2EC03F0A2EC07E0007CEB0FC01580007EEB1F00003E133E6C5B380F83F83807
FFE06C5BC648C7FC202677A42A>I<9039078007C090390FE01FF090391FF07FF8903938
F8F87C9138F9E03E903970FF803F4B7E495A17805CA23801C1F8A3EA00014948133FA449
48EB7F00A3167E494813FEA25E4B5AEB1F804B5A5EECC007013F5C4B5A6E48C7FCECF07E
90387E7FF86E5AEC0F8091C9FC5BA4485AA4485AA3387FFFC0B5FC6C5B293580A42A>I<
ECF803903807FE0790380FFF0F90383F079E90387C03BE9038F801FEEA01F0000314FCEB
E0001207485AEC01F8EA1F80123FA290380003F05AA300FEEB07E0A448EB0FC0A4EC1F80
A2143F127CEC7F00007E5BEA3E03381F0FBF380FFF7EEA07FCEA01F0C7FC5CA4495AA449
5AA2130748B512C0A21580203577A426>I<3903C003F03907F00FFC390FF83FFE391C7C
7C1FECF00F3A387FC01F80153F00709038807F001400153E017E131C484890C7FCA31200
485AA4485AA4485AA4485AA4485AA448C9FC7E120E212679A423>I<14FE903807FF8049
13C090381F03E090383C00F049137001F813F0EBF00100011303A215E00003EB01C06DC7
FC7F3801FFC014F8806C7F6D7E6D1380130F010013C0141F140FA2123C127E00FE1480A2
481400485B00E0131E00705B0078137C383E03F06CB45A6C5BD801FEC7FC1C267AA422>
I<1307EB0F80131FA4EB3F00A4137EA45BA2B512FC14FE14FC3801F800A3485AA4485AA4
485AA4485AA448C7FC1438A21470127E14E0A2EB01C0A2EB0380383E0700131EEA1FFC6C
5AEA03E0173578B31C>I<13F8D801FEEB01C0486CEB03E039070F8007120E121C1238ED
0FC0EA301F1270A23AE03F001F80A3EA007EED3F005BA34848137EA448485B160EA39138
01F81CA31638140300011307020E13702600F83C13F090397FF87FE090393FF03FC09039
0FC00F00272679A42D>I<01F0130ED803FC131F486C5BD80F1FEB7F80121C153F003814
1FA24848130FA21600D8E07E7FA3C6485B150E485AA348485BA35D485AA25DA2156015E0
5D14014A5A000349C7FC6D5A3801F81E3800FFFCEB3FF0EB0FC0212679A426>I<01F015
07D803FC903903800F80486C903807C01FD80E1F010FEB3FC0121C171F0038160FED1F80
48481507A21880D8E07E90383F0003A3C6481507037E1400485AA3484849130EA4484848
485BA35FA25FA202035C1203D9F007495A000190390EFC03803A00FC1E7E0F90277FFC3F
FFC7FC90393FF00FFC90390FE003F0322679A437>I<903907E007C090391FF01FF09039
3FF83FF89039783C783C9038E03EE02601C01F137ED80380EBC0FED80700EBC1FC158100
0EEC80F816704849C7FCA3C7FC147EA45CA4495A1670A3261C03F013E0123E007FEC01C0
130700FEEC0380D8FC0FEB070039780EF80E90383C783C393FF83FF86C486C5A3907C00F
C027267CA427>I<13F0D803FCEB01C0486CEB03E0D80F1F1307121CA21238ED0FC0485A
A3D8E07EEB1F80A3C65AED3F00485AA34848137EA448485BA44A5AA314035D00031307EB
F00F3801F83F6CB55AEB7FF7EB1FC7EB00074A5AA25D001E131F003F91C7FC485B147E00
7E137C007C5B387001F0387803E0383C0FC0D81FFFC8FC6C5AEA03F0233679A428>I
E /Fe 26 121 df<EA07C0EA1FF0EA3FF8EA7FFCA2EAFFFEA5EA7FFCA2EA3FF8EA1FF0EA
07C00F0F788E1F>46 D<EC01E01407140F143FEB01FF131FB6FCA413E3EA0003B3B3AD00
7FB612FEA5274178C038>49 D<ECFFE0010F13FE017F6D7E90B612E0000315F82607F803
7F260FE0007FD81F80EB3FFF48C76C138001E06D13C0486C6D13E07F00FF6E13F07F8117
F8A36C5A6C5A6C5A6C5AC8FC17F05D17E0A24B13C0A24B138017004B5A5E4B5AED7FE04B
5A4A5B93C7FCEC03FC4A5AEC0FE04A5A4A4813F84AC7FC14FC495A4948EB01F0495AEB0F
8049C7FC013E140349140790B7FC4816E05A5A5A5A5A5AB8FC17C0A42D417BC038>I<EC
FFE0010713FE011FEBFFC0017F14F0D9FF807F3A01FC003FFCD803F06D7E48486D7E01FC
1580487E6D15C05A1480A56C01001480A26C485BD801F81500C85B153F5E4B5A4B5A4A13
C0020F5B902607FFFEC7FC15F815FF16C090C713F0ED3FFC6F7E6F7E6F138017C017E081
17F0A317F8EA0FE0487E487E487E487EA317F0A36C484913E05B4915C06C484913806C48
491300D80FF0495AD807FEEBFFFC6CB65A6C15E06C6C5C010F49C7FC010113E02D427BC0
38>I<163F5E5EA25D5D5DA25D5D5D5DA292B5FC5C5C15EFEC07CF140FEC1F8FEC3F0F14
3E147C14FCEB01F8EB03F014E0EB07C0130FEB1F801400133E137E5B485A5B485A120748
5A5B48C7FC5A127E5AB91280A5C8001F90C7FCAB91B71280A531417DC038>I<EE1F80A2
4C7EA24C7EA34C7EA24B7FA34B7FA24B7FA34B7F16BF031F80163F82033F80ED3E0F037E
80157C8203FC804B7E02018115F0820203814B7E0207815D177F020F814B7F021F8292C7
FC834A82023E80027E82027FB7FCA291B87EA2498302F0C71203830103834A800107835C
187F49488284011F8491C97E4984133E84B6021FB612F0A54C457CC455>65
D<DCFFF81430031F01FF14F04AB6EAE0010207EDF803021FEDFC07027F9039F001FF0F49
4848C7EA3F9F4901F8EC0FFF010F01E01403490180804948C9FC4948167F4948163F485B
191F4849160F485B19075A485B190391CAFC5A1901A25A5B96C7FCA212FFAC127FA36DEF
01F07EA37E80F103E06C7F7EF107C06C7F6C6DEE0F80191F6C6D17006D6C163E6D6C5E6D
6C6C15FC6D01E0EC03F8010301F84A5A6D01FFEC3FC06D6C9039F001FF80021F90B6C7FC
020715FC020115F0DA001F1480030001F8C8FC44467AC451>67 D<BA12F8A485D8001F90
38800003EF007F181F180718031801180085197EA3193EA217F8A285A4040191C7FCA316
031607163F92B5FCA5ED803F160716031601A2F103E01600A2F107C0A494C7FC190FA21A
80A2191FA2193FA2197FF1FF006060180F183F0503B5FCBBFC61A443447DC34A>69
D<BA1280A419C0D8003F90C7123F17031700187F183F181F180F19E01807A31803A3EE03
E0F001F0A495C7FC1607A3160F161F167F92B5FCA5ED007F161F160F1607A31603A693C9
FCAFB712F8A53C447CC346>I<B9FC18F018FE727E19E0D8001F902680001F7F05037F05
007F727E727E721380A21AC084A21AE0A91AC0A24E1380A21A00604E5A4E5A05035B051F
5B92B712C096C7FC18FC18C00380CAFCB3A7B712F0A543447DC34D>80
D<923807FFC092B512FE0207ECFFC0021F15F091267FFE0013FC902601FFF0EB1FFF0107
01C0010713C049496D7F4948C87F49486F7E49486F7E01FF8348496F7E48496F1380A248
496F13C0A248496F13E0A24819F091C97E4819F8A34819FC4982A400FF19FEAD007F19FC
A36D5E6C19F8A36C19F06E5DA26C19E06E017E5B6C912603FF8014C06C6D486D4813804B
13F06C9026F01F814913006C91261E00F85B6D6C4890387C3FFCD93FFC6E485AD91FFE91
381EFFF0D90FFF021F5B6D01FC6D5B01016D4990C7FC6D6D6CB45A023F90B512F8020703
E0130202006F13070307EBC7F892C7EA03FC72130F9538FF807F96B5FC7114FEA47114FC
A27213F8A27213F0A27213E07213C0721300F000FC48587AC454>I<003FBA12E0A59026
FE000FEBC003D87FF09338007FF049173F0180170F190790C7FC007E1803A3007C1801A4
00FC19F8481800A5C81700B3B3A20107B87EA545437CC24E>84 D<903801FFF0011F13FF
017F14C048B612F04848C66C7ED807F8EB1FFC486C6D7E6D6D7E486C81818381836C5A6C
5A6C5A6C5AC8FCA30203B5FC91B6FC1307013F13F19038FFFE01000313F0481380481300
485A485A485AA2485AA45DA26C6C5BA26C6C010E13F86C6C013CEBFFC03A0FFF80F87F6C
EBFFF06CECE01FC66CEB8007D90FFCC9FC322F7DAD36>97 D<EC3FF849B57E010F14E049
14F890397FF007FC9039FFC001FE4849487E48495A484A1380485AA2485A123F6F13006F
5A48486D5A6F5A93C7FCA212FFAA127FA27FA2123FEE07C06C7EEE0F806C7E6CED1F006C
7F6C6D133E6C01F013FC90397FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F7C
AD32>99 D<EC3FF849B5FC010F14C0013F14F090397FF01FF89039FFC007FC48496C7E48
496C7E48481580000F80484815C0167F003F16E0A25B127FEE3FF0A212FFA290B7FCA401
F8C9FCA5127FA36C7EA2001FED01F0A26C7EEE03E06C6C14076C6DEB0FC06C6DEB1F806C
01F0EB3F0090397FFE01FE011FB55A010714F0010014C0DA1FFCC7FC2C2F7DAD33>101
D<913801FF80021F13E0027F13F849B512FC0107138790390FFE0FFED91FFC13FF49485A
137F14F013FF14E048EC0FFEED07FCED03F8ED00E01600AAB612F8A5000101E0C7FCB3B0
B612E0A528467DC522>I<137C48B4FC487F487FA2487FA56C5BA26C5B6C90C7FCEA007C
90C8FCAAEB3FE0EA7FFFA512037EB3AFB61280A519467DC51F>105
D<EB3FE0B5FCA512037EB3B3B3A3B612C0A51A457DC41F>108 D<90397FC003FFB5011F
13E04B13F892B57E9139C1F81FFE9139C3C00FFF00039038C780076CD9CE008002DE7F02
DC8114F8A25CA35CB3A7B600C1B61280A5392D7DAC3E>110 D<EC1FFC49B512C0010714
F0011F14FC90397FF80FFF9026FFC0017F48496C7F4890C76C7E48486E7E000F8249141F
001F82A248486E7EA2007F82A400FF1780AA007F1700A46C6C4A5AA2001F5EA26C6C4A5A
00075E6D147F6C6D495A6CD9E0035B27007FF80F90C7FC6DB55A010F14F8010114C09026
001FFCC8FC312F7DAD38>I<90393FE00FFCB590387FFFC002E3B512F002EF14FC9139FF
E03FFE9238000FFF000301FC010313806C4915C04A6D13E05C7013F018F8177FA218FCA2
173F18FEAB18FC177FA318F817FF18F0A24C13E06E15C06E4913806E5B02FF90380FFE00
9238E07FFC02E7B55A02E314E002E01480DB0FF8C7FC92C9FCADB612C0A537407EAC3E>
I<90397FC03F80B5EBFFE002C113F802C313FC9138C7C7FEECCF0700039038CE0FFF6C13
DE14FC14F8ED07FEA29138F003FCED00F01600A25CB3A6B612F0A5282D7EAC2E>114
D<90391FFC038090B5128F000314FF5A380FF003381FC0004848133F48C7FC151FA24814
0FA27FA26D90C7FC13F0EBFF806C13FCECFF806C14E015F86C806C806C8012016C158001
1F14C01301D9000F13E014010078EB007F00F8143FA26C141FA36C15C0A27E6DEB3F807F
6DEBFF009038FC03FE90B55A00F814F0D8F03F5B26E007FEC7FC232F7CAD2C>I<EB03E0
A61307A3130FA3131FA2133F137F13FF5A5A001F90B51280B7FCA4000101E0C7FCB3A3ED
03E0AA6CEC07C014F0017F1480ECF80F90393FFC1F0090381FFFFE6D5B010313F0903800
7FC023407EBE2C>I<D93FE0EC7FC0B549B5FCA50003EC00076C81B3A85EA35E7E5E043B
7F6D6C017BEBFF8090393FFC03F36DB512E36D1483010314039026003FF849C7FC392E7D
AC3E>I<B690B512F0A5C601F8903807E0006D6C495A013F141F6E495A6D6C49C7FC6DEB
80FE6D6D5AEDC1F86DEBE3F06D13F76DEBFFE06E5B5E6E90C8FC806E7FA26E7F6E7F4A7F
5C4A7F4A7F91387F3FFE91387E1FFF14FC49486C7F01036D7F49486C7F49487E02C08049
486C7F49C76C7E496E7EB5D8F003B512FCA5362C7EAB3B>120 D
E /Ff 4 121 df<B512E0A33807FC006C5AB3B1487EB512E0A3132B7DAA19>105
D<D8FFF8903803FFF87FA2D803FE9038007FC06DEC1F006E130E13BFEB9FC080EB8FF013
87EB83F8801381EB80FE147F1580143FEC1FC0EC0FE015F01407EC03F815FCEC01FE1400
157F168E153FED1FCEED0FEE16FE150715031501A21500167E487ED81FF0143ED8FFFE14
1E160EA22D2B7DAA33>110 D<B539E003FFF8A3D807FCC7EA7FC06C48EC1F00160EB3A9
00015DA27F00005D137E013E5C013F5C90391FC003C0903907F01F806DB5C7FC010013FC
EC1FE02D2C7DAA33>117 D<3B7FFFC01FFFC0A3000390398007FE006C90380003F06C5D
D97F805B4B5A6D6C48C7FC90381FE00E151E6D6C5A903807F83815786D6C5A6D6C5A6D6C
5AA26E5A6E7EA26E7E81143F4A7EECF3FC14E3903801E1FE903803C0FF5C01076D7E4948
6C7E010E131F011E80496D7E496D7EA2496D7ED803F880D80FFC497EB46C011F13F8A32D
2B7DAA33>120 D E /Fg 77 124 df<DA07FC13FC91393FFF07FF49B5009F1380903B03
FC07FF8FC0903B0FE003FE0FE0903A1FC007FC1F90383F800FD97F0013F8017EED0FC001
FE903907F007804992C7FC1201ACB812F8A32801FC0007F0C7FCB3AB486C497E267FFFE0
B512F0A3333B7FBA30>11 D<EC07F8EC3FFE49B57E903903FC07C090390FE001E090381F
C0034948487E90387F000F137E13FE496D5A00016E5A6F5A92C8FCA9ED07F0B7FCA33901
FC001F1507B3AA486C497E267FFFE0B512C0A32A3B7FBA2E>I<EC07FC91387FFF7049B5
12F0903803FC0790380FE00FEB1FC0EB3F005B017E130713FE5B1201ACB7FCA33901FC00
07B3AB486C497E267FFFF1B512C0A32A3B7FBA2E>I<017C166048B416F0486D14012607
C3C05D260F01E01403486C6CEC0FC0001E017C4A5A003E017F147F91273FE003FFC7FC48
013BB55A023814BE91391C0FFC3C00FC91C75A17F85F4C5A16035F4C5A160F94C8FC007C
151E4A133E163C6C5D4A13F8001E5D001F49485AD80F0113032607C3C05B6CB448485A6C
EB000FD8007C91C9FC90C7001EEB07C0033EEB1FF0033C497E4BEB7C3C03F8497E9239F0
01F00EDA01E0497E0203130303C0EC03809139078007C0140F1500021E010FEB01C0143E
143C5C14F85C495A13035C495A010F0207EB038091C7FC131E013EEC03E0013CEE070049
140101F8EDF00E49913800F81E4848ED7C3C0003EE3FF8496F5A6C48ED07C03A437BBD45
>37 D<121E123FEA7F80EAFFC0A213E0A2127F123F121E1200A4EA01C0A3EA0380A2EA07
00A2120E5A123C123812100B1A7AB917>39 D<14E01301EB03C0EB0780EB0F00131EA25B
5B13F85B12015B12035B1207A2485AA2121F90C7FCA25AA2123EA2127EA5127C12FCB212
7C127EA5123EA2123FA27EA27F120FA26C7EA212037F12017F12007F13787F7FA27FEB07
80EB03C0EB01E01300135278BD20>I<126012F012787E7E7EA26C7E6C7E7F12017F1200
7F1378137CA27FA2133F7FA21480A2130FA214C0A5130714E0B214C0130FA51480A2131F
A21400A25B133EA25BA2137813F85B12015B12035B485A48C7FCA2121E5A5A5A12601352
7CBD20>I<15301578B3A6007FB812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF
41>43 D<121E123FEA7F80EAFFC0A213E0A2127F123F121E1200A4EA01C0A3EA0380A2EA
0700A2120E5A123C123812100B1A7A8917>I<B512FCA616067F941C>I<121E123FEA7F80
EAFFC0A4EA7F80EA3F00121E0A0A7A8917>I<150C151EA2153CA31578A315F0A3EC01E0
A3EC03C0A3EC0780A3EC0F00A3141EA35CA35CA35CA3495AA3495AA2495AA349C7FCA313
1EA35BA35BA35BA3485AA3485AA3485AA348C8FCA3121EA35AA35AA35AA212601F537BBD
2A>I<EB03F8EB1FFF017F13C09038FE0FE03901F803F048486C7E48486C7E4848137EA2
48487FA2003F1580A290C7121F4815C0A64815E0B36C15C0A56C6CEB3F80A3001F1500A2
6C6C137EA26C6C5B6C6C485A6C6C485A3900FE0FE090387FFFC0011F90C7FCEB03F8233A
7DB72A>I<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C38
79B72A>I<EB0FF0EB7FFE48B57E3903E03FC03907800FE0390E0007F0486D7E48806E7E
5A6E7E127CB4FC16807F157FA26CC7FCA2001C14FFC8FC1600A25C5D5D14035D4A5A4A5A
5D4A5A4AC7FC143E5C5C495A495A495A5C49C8FC011EEB03805B5B491307484814005B48
5A48C75A48B6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901F80FE039
03E003F0D807807F496C7E488013C0486C6C7EA4120F495AD803805BC7FCA25D14035D4A
5A5D4A5AEC7F80D91FFEC7FC5CECFF809038000FE0EC03F06E7E6E7E81157F1680A2ED3F
C0A216E0A2123E127F487EA316C090C7FC48147F007C158012706CECFF006C5C000F495A
3907C003F83903F80FF06CB512C06C6C90C7FCEB07F8233A7DB72A>I<157815F8A21401
1403A21407A2140F141FA2143F147B147314F3EB01E314C31303EB07831403130F131E13
1C133C1378137013F0EA01E013C012031380EA07005A120E121E5A123812785AB712F8A3
C73803F800AB4A7E0103B512F8A325397EB82A>I<0004140C000F143C9038F003FC90B5
5A5D5D158092C7FC14FC000E13F090C9FCABEB07F8EB1FFE90387FFF809038F80FC0390F
E007E090388003F0496C7E000E6D7E1206C87EA2157FA31680A31218123E127F5AA31600
5A00785C00705CA26C495A5D6C495A6C495A6C6C485A3903E03F806CB5C7FC38007FFCEB
1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90381F000F013E5B49EB
3F8049137F485A485A120749EB3F00000F141E001F91C7FC5BA2123FA3387F0020EB03FF
4913C0497F39FF1C03F090383000F849137C157E497FA2491480151F16C0A290C7FC16E0
A47EA57E6D14C0A2121FED3F80120F6D14000007147E6C6C137C6D5B6C6C485A3900FE07
E090383FFFC06D90C7FCEB03FC233A7DB72A>I<1238123C123F90B612E0A316C0481580
A216000078C7120E00705CA25D00F05C5A5D4A5AC7FC4A5A4AC7FC140EA25C143C143814
78147014F0A2495AA21303A2495AA2130FA3131F5CA3133FA5137FA96DC8FC131E233B7B
B82A>I<EB03F8EB1FFF4913C09038FC07E03901F001F03903C000F8157C48487F120F90
C7FC815AA37FA26D133EA2D80FF0133C6D137CD807FE5B6D5B6CEBC3E06CEBE7C06CEBFF
806D48C7FC6D7E010F7F013F13E0497FD801F813FC3903E03FFE3807C01F390F8007FF48
486C1380001E1300003EEC7FC048141FED0FE0A2481407A21503A416C0127CED07807EED
0F006C141E6C6C5BD807E013F83903FC03F0C6B55A013F1380D907FCC7FC233A7DB72A>
I<EB03F8EB1FFF017F7F9038FC07E03901F001F048486C7E48487F000F147C4848137E15
3E003F143F48C7FC1680A248141F16C0A516E0A47E153FA27E7F001F147FA26C6C13DF12
073903E0019F3901F8071F2600FFFE13C0EB7FFCEB1FF8EB00801400ED3F80A31600A200
0F147E487E486C5B5D14015D49485A6C48485A001EEB1F80260FC07FC7FC3807FFFC0001
13F038003FC0233A7DB72A>I<121E123FEA7F80EAFFC0A4EA7F80EA3F00121EC7FCB012
1E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A247AA317>I<121E123FEA7F80EAFFC0A4
EA7F80EA3F00121EC7FCB0121E123FEA7F8012FF13C0A3127F123F121F1201A4EA0380A3
12071300A2120E121E121C5AA212100A347AA317>I<1538157CA315FEA34A7EA34A7FA3
4A7F153FA2020F7FEC0E1FA2021E7FEC1C0FA2023C7FEC3807A202787FEC7003A202F07F
ECE001A20101804A7EA20103814A137FA201078191C7123F91B6FC4981A2010EC7121F01
1E81011C140FA2013C8101381407A201788101701403A201F08116011201486C81D80FFE
02071380B500C090B512FEA3373C7DBB3E>65 D<B712E016FC16FF0001903980007FC06C
90C7EA1FE0707E707E707EA2707EA283A65FA216035F4C5A160FEE1FE0EE7FC04B485A91
B548C7FCA2707E91C7EA3FE0EE0FF0707E707E707E707EA21880177F18C0A7188017FFA2
4C13005F16034C5AEE1FF8486DEB7FF0B812C094C7FC16F832397DB83B>I<4AB4EB0180
020FEBE003027F13F8903A01FF807E07903A03FC000F0FD90FF0EB079FD91FC0EB01DF49
48EB00FF49C8127F13FE4848153F4848151FA24848150F120F5B001F1607A2485AA21703
127FA25B94C7FC12FFAB127FA26DED0380A2123FA36C7EEF0700120F7F0007160E6C7E5F
6C7E6C6C5D017F5D6D6C14F06D6C495AD90FF0495AD903FC010FC7FC903901FF807E6D6C
B45A020F13F002011380313D7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA
3FE0EE0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC
18F8A4EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEB
FF80B8C7FC16F816C036397DB83F>I<B812FCA30001903880001F6C90C71201707E177E
173E171EA2170EA4170F83ED01C0A394C7FCA31503A21507151F91B5FCA3EC001F150715
03A21501A218E0A3170192C713C0A41703A3EF0780A2170FA2171F173F17FF486D010F13
00B9FCA333397DB839>I<B812F8A30001903880001F6C90C71203EE01FC1600177C173C
A2171CA4171E170EA2ED0380A21700A41507A2150F153F91B5FCA3EC003F150F1507A215
03A692C8FCAD4813C0B612C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139
FF803E03903A03FC000F87D907F0EB03CFD91FC0EB01EF4948EB007F49C8FC01FE153F48
48151FA24848150F485A000F16075B001F1603A2485AA21701127FA25B94C7FC12FFAA93
B6FC127FA26D9138007FE0EF3FC0123FA36C7EA26C7EA212076C7E6C7EA26C7E017F157F
6D7ED91FE014EFD907F0EB01C7D903FCEB0783903A00FFC03F0191393FFFFE00020F01F8
130002001380383D7CBA41>I<B648B512FEA30001902680000313006C90C76C5AB3A491
B6FCA391C71201B3A6486D497EB648B512FEA337397DB83E>I<B612C0A3C6EBC0006D5A
B3B3AD497EB612C0A31A397EB81E>I<017FB512C0A39039003FF800EC0FF0B3B3A3121C
127FA2EAFF80A25DEB001FA2007C5C0078495A1238001E49C7FC380F81FC6CB45A000113
E038007F80223B7CB82B>I<B60107B5FCA300010180010013F06C90C8EA7F80053EC7FC
5F17705F4C5A4C5A4CC8FC160E5E5E5E5E4B5A4B5A4BC9FC150E5D153C157E15FE4A7E4A
7FEC077F91380E3FC0021C7FEC381F4A6C7E02E07FECC0074A6C7E02007F15016F7E8316
7F707E83161F707E831607831603707E83828484486D4913F0B6011FEBFF80A339397DB8
41>I<B612E0A3000101C0C8FC6C90C9FCB3AD1738A517781770A417F0A21601A2160316
07160FEE3FE04890388001FFB8FCA32D397DB834>I<B56C92380FFFF8A300016D92381F
FC006C60D9EFE0153BA3D9E7F01573A3D9E3F815E3A2D9E1FCEC01C3A3D9E0FEEC0383A3
027FEC0703A26E6C130EA36E6C131CA36E6C1338A26E6C1370A36E6C13E0A2913901FC01
C0A3913900FE0380A392387F0700A2ED3F8EA3ED1FDCA3ED0FF8A26F5A487E487ED80FFE
6D48497EB500E00203B512F8A2ED01C045397DB84C>I<B591380FFFFE80A2C66D010013
E06EEC3F80EF1F00D9EFF0140E8013E7EBE3FC8013E1EBE0FF81147F81143F6E7E81140F
6E7E8114036E7E8180ED7F8016C0153FED1FE016F0150FED07F816FC1503ED01FE16FF81
EE7F8E17CE163FEE1FEE17FE160FA216071603A216011600A2486C157E486C153EEA0FFE
B500E0141E170EA237397DB83E>I<EC03FF021F13E091B512FC903901FE01FE903A07F8
007F80D90FE0EB1FC0D93F80EB07F049C76C7E01FE6E7E0001824914004848157F000717
8049153F000F17C049151F001F17E0A24848ED0FF0A3007F17F8491507A300FF17FCAC6C
6CED0FF8A4003F17F06D151F001F17E0A26D153F000F17C0000717806D157F6C6CEDFF00
00015E6D14016C6C4A5A6D6C495A6D6C495A6D6C495AD907F8EB7F80902703FE01FFC7FC
0100B512FC021F13E0020390C8FC363D7BBA41>I<B712C016F816FE000190398001FF80
6C90C7EA3FC0EE0FE0EE07F0EE03F817FC17FE1601A217FFA717FEA2160317FC17F8EE07
F0EE0FE0EE3FC0923801FF8091B5EAFE0016F816C091C9FCB3A4487FB6FCA330397DB839
>I<B612FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283
A65FA24C5AA24C5A4C5A4C5AEEFF80DB07FEC8FC91B512F816E0A291380007F8ED01FC6F
7E167F707E83161F83A683A560F00380EE0FF8A3486D0107EB0700B6EB03FC933801FE0E
933800FFFCCAEA3FF8EF07F0393B7DB83D>82 D<D90FF813C090383FFE0190B512813901
F80FE33907E001F7390F80007F90C7123F48141F003E140FA2481407A200FC1403A41501
7EA27E6C91C7FC7F13E0EA3FF8EBFF806C13F86CEBFF806C14E06C14F86C806C80013F7F
01071480D9007F13C0020713E0EC007FED1FF0150F150716F81503126012E01501A47E16
F0A26C14036C15E0A26CEC07C06CEC0F80D8FBC0EB1F00D8F9F0133ED8F0FF13FC39E03F
FFF8010F13E0D8C00190C7FC253D7CBA2E>I<003FB812E0A3D9E003EB003F90260001FE
1307007EEE03F0007C160100781600A300701770A400F01778481738A4C71600B3B09138
07FF80011FB612E0A335397DB83C>I<B690380FFFFEA300010180010013E06C90C8EA3F
80EF1F00170EB3B27F5FA280013F5DA26D6C5C130F6E5C01074A5A6D6C13036D6C495AD9
00FE011FC7FC91383F807C6EB45A020713E002001380373B7DB83E>I<B500FC91B51280
A30003018091381FF8006C90C8EA07E0606C705AA26D6C4AC7FCA280013F150EA26E141E
011F151CA26E143C010F1538A26D6C5CA28001035DA26E130101015DA26E13036D5DA26E
6C48C8FCA215C0023F130EA2EDE01E021F131CA2EDF03C020F1338A26E6C5AA215FC0203
5BA215FF6E5BA36E5BA26FC9FCA3153EA3151C393B7EB83E>I<B5D8FE01B5D8FC01B512
C0A300039026C0000790C7381FFC006C90C76C48EC07F06C735A04015E1A016D6C6E4A5A
A36D6C4DC7FC4C7FA26E5F011F9126073FC0130EA26E171E010F020F6D131CEE0E1FA26D
6C011E6D5BEE1C0FA26D6C5F4C6C7EA26E17F001014A6C6C5BA36D6C01F06D485AEEE001
A2DA7F804B5A923981C000FFA203C1150791263FC380D97F87C8FCA203E3158FDA1FE715
CE93C7123FA26EB415FC4B141FA202075E4B140FA36E486E5AA302015E4B1403A202005E
4B1401523B7FB855>I<007FB590387FFFFCA3C601F8010F1380D97FE0D903FCC7FC013F
EC01F06D6C5C5F6D6C13036D6C495A94C8FC6D6C5B161E6D6C131C6DEB803C5E91387FC0
7091383FE0F0EDE1E091381FF1C0EC0FF3EDFB806EB4C9FCA26E5A6E7EA26E7F6F7E15FF
825C913803DFF0ED8FF8140791380F07FC91380E03FE141E91381C01FF4A7E0278800270
6D7E14F049486D7E4A6D7E130349486D7E91C76C7E5B011E6E7E1601013E8101FF820007
6D01077FB500F0013FEBFF80A339397EB83E>I<B500FE91387FFFE0A3000101E091380F
FE006C49EC07F0017F6F5A606D6C5D6D6C140795C7FC6D6C140E171E6D6C141C6D6C143C
17386D6C14785F6D6D5B91387FC0015F91383FE0035F91381FF0076E6C48C8FC160E9138
07FC1E161C913803FE3C913801FF385E6E13F05E157F6F5AB3A24B7E023FB512C0A33B39
7FB83E>I<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>91
D<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>93 D<EB3FE0EBFFFC000313FF39
07C03F80390F800FC0486C6C7E01E07F6E7EA2380FC001D807807FEA0300C7FCA414FF13
0FEB7FF13801FF01EA07F8EA0FF0EA1FE0EA3FC0EA7F80A2D8FF00141CA41403A2387F80
0714063A3FC01C7E383A1FF0787FF83A0FFFF03FF0000301E013E03A007F000F8026277D
A52A>97 D<EA03F812FFA3120F1203B0EC0FE0EC7FFC9038F9FFFE9039FBE03F809039FF
800FC09039FE0007E049EB03F0A249EB01F816FCA216FE1500A216FFA916FEA3150116FC
A2ED03F86D14F0ED07E06DEB0FC09039E7801F809039E3E07F009038C1FFFE9038807FF8
C7EA1FC0283B7EB92E>I<EB03FC90381FFF80017F13E09038FE01F03901F800F83903F0
01FC3807E003EA0FC0121F90388001F8003FEB00F01560007F140090C8FCA25AA97EA27F
A2003F140E7F001F141C6C7E000714386C7ED801FC13F03900FF03E090387FFFC0011F13
00EB07F81F277DA525>I<ED1FC0EC07FFA3EC007F151FB0EB07F8EB1FFE90387FFF9F90
38FE07DF3901F800FF4848137F4848133F4848131F121F485AA2127F90C7FCA35AA97EA2
7F123FA2121F6C6C133F157F6C6C13FF3A03F001DFF03A01FC079FFF39007FFF1FEB3FFE
D907F013C0283B7DB92E>I<EB07F8EB1FFF017F13809038FC0FC03901F003E03903E001
F0000714F8390FC000FC121F4913FE003F147EA248C7127FA35A90B6FCA390C8FCA57EA2
7F123F15076C7E150E6C7E0007141C6C6C133CD801FC13783900FF01F090383FFFC06D13
80903803FC0020277EA525>I<147E903803FF80010F13C090381FC7E090383F07F0EB7E
0F13FE13FC0001EB07E09038F803C0000390C7FCADB512FCA3D803F8C7FCB3AB487EB512
F8A31C3B7FBA19>I<ED03E090390FF00FF090393FFC1FF890B5EA3C7C3A01F81FF0FC3A
03E007C07C3A07C003E038000FECF000001F80EB8001003F80A7001F5CEBC003000F5C00
075C6C6C485A9038F81F800006B5C7FCEB3FFC380E0FF090C9FC121EA3121F6C7E90B512
C015F86C14FE6CECFF8016C04815E0391F80007F48C7EA0FF0007E140316F8481401A500
7EEC03F0A26CEC07E06C6CEB0FC0D80FE0EB3F803A07FC01FF000001B512FC6C6C13F001
0790C7FC26387EA52A>I<EA03F812FFA3120F1203B0EC07F0EC1FFCEC7FFF9138F07F80
9038F9C01FD9FB807F9038FF000F49805BA35BB3A4486C497EB500E1B51280A3293A7EB9
2E>I<EA03C0487E487E487EA46C5A6C5A6C5AC8FCA9EA01F812FFA312071203B3AA487E
B512E0A313387EB718>I<EB01E0EB03F0EB07F8EB0FFCA4EB07F8EB03F0EB01E090C7FC
A9EB01FC13FFA313071301B3B3A2123C127E00FF13F8130314F0A2387E07E0387C0FC038
3FFF00EA0FFEEA03F8164984B719>I<EA03F812FFA3120F1203B1913803FFFCA36E13C0
913800FE005D15F04A5A4A5A4A5A4AC7FC141E5C5C14FCEBF9FE13FBEBFF7F496C7EEBFC
1F01F87F6E7E6E7EA26E7E6E7EA26E7E157FA2ED3F8016C0486CEB7FF0B500E1B5FCA328
3A7EB92C>I<EA03F812FFA3120F1203B3B3AD487EB512E0A3133A7EB918>I<2703F807F8
EB0FF000FFD91FFEEB3FFCDA7FFFEBFFFE913AF03F81E07F3D0FF9C00FC3801F802603FB
80D9E7007F020013E601FED907FC6D7EA2495CA2495CB3A4486C496C497EB500E1B500C3
B51280A341257EA446>I<3903F807F000FFEB1FFCEC7FFF9138F07F80390FF9C01F2603
FB807F9038FF000F49805BA35BB3A4486C497EB500E1B51280A329257EA42E>I<EB03FE
90380FFF80013F13E09038FE03F83901F800FC4848137E48487F4848EB1F80001F15C049
130F003F15E0A248C7EA07F0A44815F8A96C15F0A26D130F003F15E0A26C6CEB1FC0000F
15806D133F6C6CEB7F006C6C13FE3900FE03F890387FFFF0011F13C0D903FEC7FC25277E
A52A>I<3903F80FE000FFEB7FFC9038F9FFFE9039FBE07F803A07FF801FC03A03FE000F
E049EB07F0A249EB03F816FC150116FEA3ED00FFA916FE1501A316FC150316F86DEB07F0
ED0FE06D14C09039FF803F809039FBE07F009038F9FFFE9038F87FF8EC1FC091C8FCAB48
7EB512E0A328357EA42E>I<903903F801C090381FFE03EB7FFF9038FE07873901FC01C7
3903F000EF0007147F4848133F485A003F141F5B127FA390C7FC5AA96C7EA3123F7F001F
143F6C7E157F6C6C13FF3903F801DF3901FE0F9F39007FFF1FEB3FFCEB07F090C7FCABED
3FE00207B5FCA328357DA42C>I<3803F03F00FFEB7F809038F1FFE014C7390FF38FF038
03F70F13F69038FE07E09038FC03C0EC018091C7FCA25BB3A3487EB512F8A31C257EA421
>I<EBFF83000313E7000F13FFEA1F80383E003F487F00787FA200F87FA37E6C90C7FC6C
7EEA7FF8EBFF806C13E06C13F86C7F6C7F00017F6C7E01031380EB003F0060EB1FC000E0
130FA26C1307A37E15806C130F1500B4131EEBC07C38F3FFF800E15B38C07F801A277DA5
21>I<131CA5133CA3137CA213FC120112031207121FB6FCA3D801FCC7FCB2EC01C0A939
00FE0380A2017E13006D5AEB1FFE6D5AEB03F01A347FB220>I<D803F8EB0FE000FFEB03
FFA3000FEB003F0003140FB3A5151FA2153F1201156F6C6CEBEFF8903A7E03CFFF809038
3FFF8F6D130FD903FCEBE00029267EA42E>I<B538C07FFEA33A0FFC001FF0D803F8EB07
C016807F00011500A26D5B0000140EA2017F5BA2EC803C013F1338A26D6C5AA214E0010F
5BA214F101075BA2903803FB80A214FF6D90C7FCA36D5AA2147CA3143827257EA32C>I<
B53A8FFFF07FFEA3260FF8009038800FF8000791397F0007E0EF03C000031780816DEC80
070001027F1400A26D6E5A000002FF130E15EF6DECE01ED97F01141C15C70281EBF03CD9
3F8314381583D91FC36D5AECC701A2D90FE76D5AECEE00A2D907FEEBFFC04A137FA20103
5D4A133FA2010192C7FC4A7FA20100141E4A130E37257EA33C>I<B500C0B5FCA3000390
38007FF06C48EB3F806C6C013EC7FC6D133CEB3F806E5A011F5B6D6C5A14F1903807FBC0
6DB45A6D90C8FCA26D5A147F818114FF497FECCFF0EB03C790380783F890380F03FCEB0E
0190381E00FE497F496D7E01F8133F000181D80FFC497EB548B51280A329247FA32C>I<
B538C07FFEA33A07FC001FF06C48EB07C016807F00011500A26C6C130EA26D131E6D131C
A26D6C5AA2ECC078011F1370A2ECE0F0010F5B14F0903807F1C0A214FB01035BA26DB4C7
FCA36D5AA2147CA31438A214781470A25CA21301007C5BEAFE035C130749C8FCEAFC1EEA
783CEA3FF86C5AEA0FC027357EA32C>I<003FB512FCA39038C007F8D83E0013F0003C13
0FEC1FE0003814C00078EB3F80147F0070EBFF005C1301495A5CEA0007495A5C495A133F
90387F800E14005B485A5B0003141E485A5B4848131C001F143C4848137C4913FC007F13
03B6FCA31F247EA325>I<B81280A3290380972A>I E /Fh 30 122
df<153C157EEC01FE1407141F14FF13070003B5FCB6FCA3147F13F8EAFC00C7FCB3B3B3
A4007FB712FEA62F4E76CD43>49 D<EC3FFC49B512E0010F14F8013F14FE90B77E4816E0
0007D9007F7FD80FF8010F7F01E06D7F484801017FD83FF06D7F01FC1680486C806D6E13
C0B5FC6E6D13E0A318F082A26C90C7FCA26C5A6C5A6C5AEA01C0C94813E0A318C05E1880
5E18004C5AA24B5B5F4B5B4B5B5F4B90C7FC4B5A4B5A4B5AEDFFE05E4A5B4A90C8FCEC07
FC4A48EB03F04A5A4A5A4A5A4AC7EA07E0495A495A495A5C4948140FEB1F8049C8121F49
B7FC90B812C05A5A5A5A5A5A5AA2B91280A5344E79CD43>I<91380FFF8091B512F80103
14FF010F15C0013F15F090267FF8077F9026FF80017F4848C76C7ED803F881D807FE6E13
807F486D15C06E7F486D15E0A76C5D4A15C06C5B6C90C71480EA00FC90C8481300A24C5A
5F4B5B4B5B4B5B4B5B92B5C7FC91B512FC16F016C016FCEEFF80DA000713E0030113F892
38007FFE707E70138018C07013E018F0A27013F818FCA3D801E016FEEA07F8EA1FFE487E
487FA2B57EA218FCA44A4913F87E91C714F06C5D01FC16E06C484A13C0494A1380D80FFE
91B512002707FFE0075B000190B65A6C16F0013F15C0010F92C7FC010114F8D9001F90C8
FC374F7ACD43>I<177E17FF5E5EA25E5E5EA25E5E93B5FC5DA25D5D5DA25DED3FBFED7F
3F15FEA2EC01FCEC03F8EC07F015E0140FEC1FC0EC3F80EC7F00A214FE495A495A5C1307
495A495A495AA249C7FC13FE485A5B1203485A485A485AA2485A48C8FC12FEBA12C0A6C9
6C90C7FCAE020FB712C0A63A4F7CCE43>I<0003160ED807E0153E01FCEC03FED9FFE013
7F91B6FC5F5F5F5F5F5F94C7FC16FC5E16E016804BC8FC15F0D9E07CC9FC91CAFCAAEC07
FF027F13F001E1B512FC01E714FF01EF15C09026FFF8077FDA80017F49C77F496E7E01F0
6E7E836C5A491680C97E18C0A218E0A418F0A2EA07E0EA1FF8487E487EA2B5FCA318E0A3
4916C0007F5D4916805BD83FE0160001805C6C6C5D6D4A5AD80FF8495B6C6C01075B2703
FFC03F5B6C90B65A6C93C7FC013F14FC010F14F0010314809026007FF8C8FC344F79CD43
>I<171F4D7E4D7EA24D7EA34C7FA24C7FA34C7FA34C7FA24C7FA34C80A24C80167E8304
FE804C7E03018116F8830303814C7E03078116E083030F814C7E031F81168083033F8293
C7FC4B82157E8403FE824B800201835D840203835D02076F7F5D844AB87EA24A83A34A84
92C812014A6F80A2027E8202FE845C0101717FA24A820103855C0107717FA24A82010F85
5C496C707FB600F8021FB712E0A65B547BD366>65 D<B812E0A6D8000701FCC7FCB3B3B3
B0B812E0A62B527DD132>73 D<BAFC19F819FF1AC01AF01AFCD8000701F8C7001F7F0603
EBFF80060014C0073F13E07313F0851BF8851BFCA27313FEA31BFFA91BFEA34F13FCA21B
F8611BF04F13E04F13C096B5128006031400061F5B92B812F8621A804FC7FC19E003FCCB
FCB3ACB812E0A650527CD15C>80 D<B912F0F0FF8019F819FF1AC01AF0D8000701F8C76C
7F060F13FE06037F060080737F85737F87A2737FA387A863A34F5B6361634F5B96B5C8FC
06035B060F5B95B512F092B812C097C9FC19F86119FC9226F8000313FFDD007F7F727F72
7F727F727F727FA28684A286A887A61D3C1D7E8784A2736D13FCA273EBF001B800C06D90
38F803F8739038FE07F07390B5FC070115E0736C1480080F1400CEEA7FF85F537CD164>
82 D<91260FFF80130791B500F85B010302FF5B010FEDC07F013FEDF0FF4915F92701FF
F80090B5FC4801C0130F4849130149C87E000F824848814981003F824981007F82A283A2
00FF83A27FA2847F7F7F6E92C7FC6C13E014FCECFFC015FE6CECFFE016FF6C16E017F86C
16FE6C707E6C83846C836C6C826D826D820107821301D9003F16801403DA003F15C01501
DB001F14E01601707E171F7113F08383127C00FC82A283A37E19E0A37E6D17C05F6D1780
6D5D6D170001FC5D6D4B5AD9FFC04A5A02F8EC7FF8913AFFC003FFF0019F90B65A01075E
D8FE0193C7FC26F8007F14FC48010714E0489026003FFEC8FC3C5479D24B>I<B700FE90
B700FE49B612F0A6D8003F01F0C8003F01F0C9383FC0006D71725A876F1C3F6D7196C7FC
6F8373606D1E7E6F7116FE6D7160876F1B016D7160704A801F036D66704A6E14076E6588
704A170F6E65704A80089F161F6E6570023F6E143F6E050F94C8FC8870027F5F6EDC7E07
167E7002FE801FFE6E4C6C5E7001016F13014F7E6E08805BDD800317036E4C6C5EDDC007
16C01E076F4B6D5DDDE00FEEE00F4F7F6F07F05BDDF01F171F6F4B6D5D05F817F8063F17
3F6F92C76C92C9FC714816FC067E6E5C6FF1FE7EDDFEFE17FE6F4A6E5C05FF17FFA26F4A
6E5CA24E806F62A270496F5BA370496F5BA24E817061A27090C96C90CAFCA37048705AA2
4D1603040360A27048705A84537DD18B>87 D<EC3FFF0103B512F0011F14FE017F6E7E90
B712E048D9C0077F48D9800113FC486D6C6C7E163F486D6D7E848284A2826C49816C5BA2
C648C7FC90C8FCA44BB5FC4AB6FC143F49B7FC130F013FEBF80790B512800003EBFC0048
13F0485B485B485B91C7FC485AA2485AA55EA26C6C5C5E6C6C147D6E01FD13F86C9026C0
01F9EBFFE06C9026F00FF014F06C90B5487E0001ED803F6C6C49487E011F01F8010313E0
010101C090C8FC3C387CB641>97 D<913801FFF0021F13FF91B612E0010315F8010F8149
9038800FFE4948486C7ED9FFF8491380485B4A4913C0485B5A485BA25A91C76C1380486F
1300A2EE01FC484891C8FCA412FFAB127FA27FA27EA26C6DEC07E0A27E6EEC0FC06C7FEF
1F806C6D143F6C6DEC7F006C01FE14FE6D6C495A011F9038E00FF86D90B55A01035D0100
1580021F01FCC7FC020113E033387CB63C>99 D<943801FFC00407B5FCA6EE001F1707B3
A3913801FFC0021F13F891B6FC010315C7010F15F749D9C01FB5FC90397FFE0003494813
004801F08048498048498083485BA24890C8FCA25AA2485AA412FFAB127FA4123F7FA27E
A26C7F5F6C6D5C6C6D5C6C6D91B5FC6C6D010314F06D6C49ECFFC090393FFF803F6D90B5
12CF0107150F010114FCD9003F13F00203018049C7FC42547CD24B>I<913803FF80023F
13F891B512FE01036E7E010F15E0013F01017F903A7FFC003FF8D9FFF06D7E48496D7E48
496D7E5A4A6D13805A91C76C13C05AA24817E082485AA218F0A212FFA290B8FCA418E049
CAFCA5127FA36C7EA36CEE01E0EF03F06C7FEF07E06C7F6C6DEC0FC06C161F6C6DEC3F80
D97FFCEC7F006DB4EB01FE6D9038E00FFC010790B55A010115E06D6C1480021F49C7FC02
0013E034387CB63D>I<ED0FFE92B51280020714E0021F14F0027F14F89138FFF83F4990
38E07FFC01071380923800FFFE5B495A5C133FEE7FFC5C017FEC3FF8EE1FF0EE07C093C7
FCADB712E0A626007FFCC8FCB3B3A5007FB6FCA62F547CD329>I<DA1FFE14FE49B539E0
07FF800107DAF81F13C0011FDAFE7F13E0017F91B612F09026FFF807143F48D9E001EBF0
7F48902680007F133F4804F813E04890C7383FFC1F19C0484891391FFE070095C7FCA200
3F82A8001F5EA36C6C4A5AA26C6D495A6C5E6C9039E001FFE06CD9F8075B4890B65A484B
C8FC01E714F8D807C114E09026C01FFEC9FC91CBFC120FA27FA27F7F7F90B7FC17F06C16
FE717E18E06C836C83846C83488312075AD81FFCC7000114804848EC001F484815077113
C0485A83A56C6C4B1380A26C6C4B13006D5D6C6C4B5A6C6C4B5A6C01E049B45A6C01FE01
1F5BC690B712C0013F93C7FC010F15FC010115E0D9000F01FCC8FC3C4F7CB543>I<133F
EBFFC0487F487F487FA2487FA66C5BA26C5B6C5B6C5B013FC7FC90C8FCACEB1FF8B5FCA6
12017EB3B3A4B612F0A61C547BD326>105 D<EB3FF8B5FCA61203C6FCB3A40407B512F8
A69339003FF000EF7FC04D5A4C90C7FC4C5AEE0FF84C5A4C5A4C5A4CC8FCED03FE4B5A4B
5A4B5A153FEDFFF814F902FB7F91B57E828315DF039F7FDAFE0F7F4A6C7F4A7E6F7F836F
7F167F707E84707F82707F84707F707F8284717EB6D8F807B6FCA640537CD247>107
D<EB1FF8B5FCA612017EB3B3B3AFB612F8A61D537BD226>I<D93FF8D90FFEED7FF0B591
267FFFC0903803FFFE4BB500F0010F6D7E030702FC013F14E0031F6E90B67E922A3FC07F
FF01FE037F92267F001F903803F800000302FC6DD987E06D7EC6D9F9F8ED8FC0DAFBE003
DFC77F4B6D01DE143F02FF16FE4B4B8192C75CA24A5EA34A5EB3ACB6D8FC07B6D8E03FB6
FCA668367BB571>I<D93FF8EB0FFCB591B57E030314E0030F14F84B8092393FC07FFE92
387E003F00034A6D7EC6EBF9F0DAFBE0814B7F14FF4B8192C7FCA25CA35CB3ACB6D8FC0F
B612C0A642367BB54B>I<913801FFE0021F13FE91B612C0010315F0010F15FC49903880
7FFE903B7FFC000FFF8049486D7F4801E001017F48496D7FA248496E7E488391C8123F48
83A248834981A2007F1880A400FF18C0AC007F1880A3003F18006D5DA26C5FA26C6D4A5A
A26C6D4A5A6C5F6C6D495B6C01F801075B6D6C495B90273FFF807F90C7FC010F90B512FC
6D5D010015C0023F91C8FC020113E03A387CB643>I<D93FF8EB7FF0B50103B5FC031F14
E0037F14F802F9B612FE02FB01007FDAFFF8011F7F000102E06D7F6C4A6D7F92C76C7F4A
6E7F4A8283727EA28584A21A80A284A21AC0AB1A8060A31A006061A24E5AA26E4A5B6E5C
6103C0495B6F011F5B6F495B9227FE01FFFEC7FC02FDB65ADAFC7F14F0031F14C0030749
C8FC030013E093CAFCB0B612FCA6424D7CB54B>I<90393FF003FCB5EB1FFF4B13C092B5
12F002F114F89238FC7FFCECF3F000039039F7E0FFFEC65CECFF805DA25CEE7FFCEE3FF8
5CEE0FE093C7FCA35CB3AAB612FEA62F367CB537>114 D<903901FFE007011FEBFC1F01
7FEBFF7F48B7FC1207390FFE003FD81FF0130749130148487F5B007F81A200FF81A37F7F
01F891C7FC13FEEBFFF06CEBFF8015FC6C14FF16C06C15F06C816C15FE6C817E6C6C1580
011F15C01303D9003F14E01400030F13F01501007C8000FC157F163F6C151FA37E17E07F
7FEE3FC001F0147F6DECFF806D4913009039FF800FFE91B55A013F5CD8FC1F14E0D8F803
148027E0007FF8C7FC2C387CB635>I<147EA614FEA41301A31303A21307A2130F131F13
3F137F13FF1203000F90B6FCB8FCA5C66C48C8FCB3A8EE0FC0AB013FEC1F808017006D5C
6DEB807EEDE0FE6DEBFFFC01015C6D5C023F13C0DA03FEC7FC2A4D7ECB34>I<D91FFC91
3801FFC0B5020FB5FCA60003ED003FC6160FB3AD5FA35FA2017F5DA294B5FC6D6CD903F7
13F0DC07E7EBFFC0903A1FFF801FC76D90B512876D1507010114FC6D6C13F00207018091
C7FC42377BB54B>I<B600F0B6D8C007B512C0A600019026FC000101F0C7380FE0006C6F
6D5DA26E027F151F017F705D6E183F173F6D4B6C92C7FC6F5F6D70147E94B5FC6F17FE6D
4A6E5B03E016016D05C05B5E03F001F314036D020702E05B03F816076D03E101F05B160F
03FC01C0140F6D05F85BDBFE1F151FEF807F027F013F02FC5B03FFD9003F133F6E04FE90
C8FC5E04FE011F5B6EEEFF7E4C6D13FE6E5FA24C7F6E5FA26E496D5BA24C7F6E5FA24C7F
6E5F4C147F037F5EA26FC86CC9FC5A367DB461>119 D<B600F8010FB5FCA6C649C8EA7F
00A26D6C157E18FE6D5E6F13016D5E6F1303A26D6D5C17076D6D5C170F6D5E6F131F6D5E
6F133F6D93C7FC6F5BA26E6C137E17FE6E5C16816E5C16C36E5C16E7A26EEBF7E016FF6E
5CA26E5CA26E91C8FCA36F5AA26F5AA26F5AA26F5AA35EA25E151F5E153FD81FE091C9FC
486C5B486C137E15FE487E4A5A5D14034A5A49485A007F131F9038F07FC0393FA1FF8090
B5CAFC6C13FC6C5B000313E0C690CBFC404D7DB447>121 D E /Fi
4 121 df<B5FCA3EA0FF0EA07E0B3ACEA0FF0B5FCA310267DA517>105
D<D8FFE0EB7FFCA27FD807F8EB0FE06DEB07C0ED0380137E7FA2EB1F80EB0FC0A2EB07E0
EB03F0A2EB01F8EB00FC14FE147E143FEC1F83A2EC0FC3EC07E3A2EC03F3EC01FB15FF80
157FA2153F151F486C130F487ED8FFF813071503A226267DA52E>110
D<B5EB7FFCA3D80FF0EB0FE06C48EB07C0ED0380B3A60003EC07007F0001140E7F00005C
017C5B90383F81F090380FFFE06D5BD900FEC7FC26277DA52E>117
D<D87FFFEBFFFCA3D803FCEB7FC00001EC3F00153C6C7E017F5B6D5B6E5AEB1FC190380F
E3C05DEB07F76DB4C7FC6D5A5C6D7E147E147F4A7E497FEB03DFEC8FE090380787F0EB0F
03010E7F90381E01FC496C7E5B0170137F01F0EB3F804848131F000315C0D80FF0EB3FE0
B46CEB7FFFA328267EA52E>120 D E /Fj 38 123 df<EB01C01303EB0780EB0F00131E
5B133813785B485AA2485AA2485AA2120F90C7FC5AA2121E123EA3123C127CA512FCA25A
AC7EA2127CA5123C123EA3121E121FA27E7F1207A26C7EA26C7EA26C7E13781338133C7F
7FEB0780EB03C01301124A79B71E>40 D<12C07E7E12787E7E120E120F6C7E6C7EA26C7E
A26C7EA27F1378137CA2133C133EA3131E131FA51480A2130FAC131FA21400A5131E133E
A3133C137CA2137813F85BA2485AA2485AA2485A48C7FC120E121E5A5A5A5A5A114A7BB7
1E>I<156015F0B3A4007FB812C0B912E0A26C17C0C800F0C8FCB3A4156033327CAB3C>
43 D<121C127E127FEAFF80A213C0127FA2121D1201A4EA0380A3EA0700A2120EA25A5A
5A12200A187A8815>I<B512F0A514057F921A>I<121C123E127FEAFF80A3EA7F00123E12
1C09097A8815>I<121C123E127FEAFF80A3EA7F00123E121CC7FCAE121C127E127F5A13
80A2127FA2121F1203A4EA0700A4120EA25A123C12385A1220092F7A9F15>59
D<DA07FC130C91393FFF801C91B512E0903A03FE01F03C903A0FF0003C7CD91FC0131E49
C7EA07FC017E14035B484814014848140012074848157CA24848153CA2485AA2007F161C
A390C9FC481600AB7E6D151CA3123FA26C6C1538A26C7E17706C7E000316E06C7E6C6CEC
01C0017EEC03806DEC0700D91FC0130ED90FF0133C903903FE01F80100B55A023F13C0DA
07FEC7FC2E377CB437>67 D<B512FEA3000113006C5AB3B3A7487EB512FEA317337EB21C
>73 D<B612FEEDFFC016F03A03FC0007FC0001EC00FE167FEE3F80EE1FC017E0160FA217
F0A617E0A2161F17C0EE3F80EE7F0016FEED07FC90B612F016C04BC7FC01FCC9FCB3487E
B512F8A32C337DB234>80 D<B612FCEDFF8016F03A01FE0007FC0000EC01FEED007F707E
707E83160F83A75F161F5F4C5A4CC7FCED01FEED07FC90B612F01680829039FE001FE0ED
03F06F7E6F7E82167E167FA683A4181CA2EE3FC0A2486C021F1338B500FE14E093380FF0
70933803FFE0C96C13C09338003F8036357EB239>82 D<007FB712FEA39039C007F001D8
7E00EC007E007C163E0078161E170E127000F0160FA3481607A6C71500B3AB4A7E011FB5
12FCA330337DB237>84 D<EB7F803803FFF04813FC380F80FE381F003F486C6C7E6D6C7E
A26E7EEA1F80EA0F00C7FCA3EB03FF133F3801FFC73803FC07EA0FE0EA1FC0EA3F80EA7F
00A200FEECE1C0A4140FA2007F131B393F8033F33A1FC0E1FF80260FFFC113006CEB80FE
3900FE007C22237DA126>97 D<EA03F012FFA312071203AEEC3FC0ECFFF001F313FC9038
F7C0FE9038FE003F49EB1F8049EB0FC05BED07E0A216F01503A216F8A816F0A2150716E0
A26DEB0FC016806DEB1F0001EE133E9038C781FC9038C3FFF8018113E0C7EA3F8025357E
B32B>I<EB07F8EB3FFF90B512803901FC07C03903F003E03907E007F0380FC00FEA1F80
A2393F0007E0EC03C04890C7FC127EA212FEA8127E127FA26C14387F001F14706C7E6C6C
13E03903F001C03901FE07806CB51200EB3FFEEB07F01D237EA122>I<153FEC0FFFA3EC
007F81AEEB0FF0EB7FFC90B5FC3901FC0FBF3907E001FF48487E497F001F8048C7FCA25A
127EA212FEA8127EA2127F7EA26C6C5B5D6C6C5A6C6C4813803A03F81F3FFC3801FFFE38
007FF8D91FE0130026357DB32B>I<EB0FE0EB7FFC497E3801F83F3903E00F803907C007
C0390F8003E0121FD83F0013F014015A007E14F8A212FEB6FCA348C8FCA5127E127FA26C
14386C7E15706C7E6C6C13E03903F001C03901FE07806CB51200EB3FFEEB07F01D237EA1
22>I<14FEEB03FF010F138090381F8FC090383E1FE0137C13F81201EC0FC03903F00780
91C7FCABB512F0A3D803F0C7FCB3A7487E387FFFE0A31B357FB417>I<151F90391FC07F
8090387FF0FF3A01FFFDE7C03903F07F873907C01F073A0F800F8380001FECC000EB0007
4880A76C5CEB800F000F5C6C6C48C7FCEBF07EEBFFFC380C7FF0EB1FC0001CC9FCA2121E
A27EEBFFFE6CEBFFC015F06C80000F80391F0001FE003EEB007F48141F168048140FA500
7CEC1F00A2003F147E6C6C5B390FF007F80003B512E0C61480D91FFCC7FC22337EA126>
I<EA03F012FFA312071203AEEC1FC0EC7FF09038F1FFF89038F3C0FC9038F7007E13FE49
7F5BA35BB3486CEB7F80B538C7FFFCA326347EB32B>I<1207EA0F80EA1FC0EA3FE0A3EA
1FC0EA0F80EA0700C7FCA9EA07E012FFA3120F1207B3A6EA0FF0B5FCA310337EB215>I<
EB01C0EB03E0EB07F0EB0FF8A3EB07F0EB03E0EB01C090C7FCA9EB01F8137FA313031301
B3AF1218127E00FF13F01303A214E0387E07C0387C0F80383FFF00EA1FFCEA03F0154385
B217>I<EA03F012FFA312071203AF913807FFE0A36E1300EC01F8EC03E05D4A5A020EC7
FC143C5C5C13F1EBF3F813F7EBFEFCEBFC7EEBF83E497E816E7E1407816E7E1401816E7E
81486C7FB500C313F0A324347EB329>I<EA07E012FFA3120F1207B3B3A7EA0FF0B5FCA3
10347EB315>I<2703F01FE013FF00FF90267FF80313C04A6C487F903BF3C0FE1E07F03C
07F7003F3801F8D803F6143001FC90391FE000FC495CA3495CB3486C496C487EB53BC7FF
FE3FFFF0A33C217EA041>I<3903F01FC000FFEB7FF09038F1FFF89038F3C0FC3907F700
7EEA03FE497F5BA35BB3486CEB7F80B538C7FFFCA326217EA02B>I<EB07F0EB3FFE90B5
7E3901F80FC03903E003E048486C7E48486C7E001F8090C7127C48147E003E143E007E14
3FA300FE1580A8007E1500A2007F5C6C147EA26C6C5BA26C6C485A6C6C485A3903F80FE0
C6B51280D93FFEC7FCEB07F021237EA126>I<3903F03FC000FFEBFFF001F313FC9038F7
C0FE3907FE007F6C48EB3F8049EB1FC049130F16E0150716F0A2150316F8A816F01507A2
16E0150F6D14C0ED1F806DEB3F006D137E9038F781FC9038F3FFF801F113E09038F03F80
91C8FCAA487EB512C0A325307EA02B>I<90380FE00790383FFC0FEBFFFE3801FC0F3903
F0039F3907E001DF48486CB4FC48487F123F90C77E5AA2127E12FEA8127E127FA27E6D5B
121F6D5B6C6C5A3907F007BF3903F81F3F3800FFFEEB7FF8EB0FE090C7FCAAED7F809138
0FFFFCA326307DA029>I<3803E07C00FF13FF01E113809038E39FC03807E71FEA03EE90
38EC0F809038FC070049C7FCA35BB2487EB512E0A31A217FA01E>I<EBFF06000713CE48
13FEEA1F00003C133E007C131E127800F8130EA37E6C90C7FCEA7F8013F86CB47E6C13E0
6C13F86C7F00017F38000FFF1300EC3F800060131F12E0140F7EA27E15006C5B6C133E38
FF80FC38F7FFF800E113E038C07F8019237EA11E>I<1370A513F0A31201A21203120712
0F121FB512FEA33803F000AF1407A8140EEA01F8A23800FC1CEB7FF8EB3FF0EB0FC0182F
7FAD1E>I<D803F0133F00FFEB0FFFA30007EB007F000380B3A25DA25D12019039F801BF
803A00FC073FFCEB7FFEEB3FFCD907F0130026227EA02B>I<B53801FFF0A33A0FF0007F
806C48EB1F006D131E0003141C153C6C6C1338A26D137800001470A2017E5BA2EB7F0101
3F5BA290381F8380A214C7010F90C7FCA2EB07EEA214FE6D5AA26D5AA36D5AA224217E9F
29>I<B53A1FFFC3FFF0A33C07F800FE007F804949EB3E000003161CA26D486C133C0001
1638A26D486C13780000029F1370A2D9FE07EB80F0017E010F5BA2D97F0F13C190263F0E
075BA2029E13E390261F9C035BA202FC13F790260FF80190C7FCA216FF6D486C5AA36D48
137CA36D48133834217F9F37>I<B53803FFF8A32603FC0013800001ECFC0000005C017E
5B90387F01E090383F83C0011F5BEB0FC7D907EFC7FC14FE6D5A6D5A6D7E80497E5BECDF
809038079FC090380F0FE0EB1E0790381C03F090383C01F801787FEBF0000001147ED80F
F813FF26FFFC0313FCA326207F9F29>I<3A7FFF80FFF8A33A07F8003FC06C48EB1F806C
6CEB0F00150E6D131E0000141CA2017E5BA2017F13786D1370A26D6C5AA214C1010F5B14
E301075BA2D903F7C7FCA214FF6D5AA26D5AA31478A21470A214F05CA2495A127CEAFE03
5C49C8FC5BEAFC1EEA783CEA3FF86C5AEA07C025307F9F29>I<003FB512F0A39038800F
E0393E001FC0003C14800038133F0078EB7F0014FE00705B1301495A495A00005B495A13
1F495AEC0070137E13FE485A485A4913F01207484813E0381FC0011380003F1303387F00
1FB6FCA31C207E9F22>I E /Fk 7 117 df<ED1F80A24B7EA24B7EA34B7EA24A7FA34A7F
A24A7F15DFA2020F7F158F021F801507023F80143E81027E80EC7C0102FC804A7EA20101
814A137F0103814A133FA201078191B6FC4981A2498291C7120F824982013E80017E8213
7C8201FC824980B500F0017FEBFFF0A43C347DB343>65 D<EB7FFE0003B512E04814F848
80391FF80FFEEC03FF6E13808016C06C5A6C5AEA0180C8FC91B5FC131F48B6FC000713F8
481300EA1FFCEA3FF0485A485AA56C6C5A5C263FF81F13E06CB5EA7FFF6C497E0003EBF8
1F39007FC00728217EA02B>97 D<13FE12FFA4120F1207ADEC07FE91383FFFC090B612F0
829138F00FFC9138C003FE91380001FF491580A26F13C0A317E0A917C0A34B138017006D
5B9138C007FE9138F01FFC01FBB55A01F014E0D9E03F13809026C007FCC7FC2B347EB331
>I<903807FF80013F13F090B512FC48800007EB03FFEA0FFCEA1FF813F0123F6E5A4848
6C5A153000FF91C7FCA9127F7F123FED0F806C7E6DEB1F006C6C5B3907FF80FE0001EBFF
FC6C14F0013F5B010790C7FC21217DA027>I<3901FC1F8000FFEB7FF0ECFFF801FD13FC
ECE7FE380FFFC76C1387A21407EC03FCEC01F89038FE00601500B1B512F8A41F217EA024
>114 D<9038FFE1C0000313FF120F5A383F803F387F000F007E130712FEA26C90C7FC13
E013FF14F06C13FC6C13FF15806C14C012076C14E0C66C13F01303EB001F0078130F00F8
13077E15E07E6C130F9038C03FC090B51280150000F913FC38E03FE01C217DA023>I<13
3EA5137EA313FEA2120112031207121FB61280A4D807FEC7FCB0EC07C0A70003EB0F8013
FF6CEBFF006C5B6D5AEB0FF01A2F7EAE22>I E /Fl 2 104 df<ED0FE015FF140391380F
FC00EC1FE0EC3F804AC7FC14FE495AA2495AB3AD495AA2495A495A495A49C8FCEA01FEEA
7FF8EAFFE0A2EA7FF8EA01FEEA007F6D7E6D7E6D7E6D7EA26D7EB3AD6D7EA26D7E147F6E
7EEC1FE0EC0FFC913803FFE01400150F236479CA32>102 D<127EEAFFE013F8EA07FEC6
7EEB3F806D7E6D7E6D7EA26D7EB3AD6D7EA26D7E147F6E7E6E7EEC0FF0913803FFC00200
13E0A2020313C091380FF000EC1FC04A5A4AC7FC14FE495AA2495AB3AD495AA2495A495A
495A01FFC8FCEA07FEEAFFF813E0007EC9FC236479CA32>I E /Fm
42 122 df<121E123FEA7F80EAFFC0A313E0127F123F121E1200A5EA01C0A4EA0380A2EA
0700A2120E121E121C5A5A12200B1D78891B>44 D<121E123FEA7F80EAFFC0A4EA7F80EA
3F00121E0A0A78891B>46 D<1438147814F81303130F137FB5FCA213F71387EA0007B3B3
AFEB1FFE007FB61280A4214278C131>49 D<EC07FCEC3FFF91B512C0010314E0903907FC
03F090380FE000D91F80137890393F0001F8017EEB03FC49130712015B485A0007EC03F8
ED01F0484890C7FCA2121F5B123FA3127F5BEC7FE0903881FFF8903883F7FE39FF87007F
018CEB1F800198EB0FC001B8EB07E013B001E0EB03F016F8A24914FC150116FEA25B16FF
A4127FA5123F7F16FEA2121F16FC000F14036D14F81207ED07F06C6C14E06D130F6C6CEB
1FC06C6CEB3F8090397F80FF006DB45A010F13F8010313E00100138028447CC131>54
D<121C121EEA1FC090B712C0A35A17801700A25E003CC8121C485DA200705D5EA24B5A48
4A5A4BC7FCA2C8120E5DA25D5DA25D4A5AA214034A5AA24AC8FCA25C141E143EA2147E14
7CA214FCA21301A4495AA31307A6130FA96D5AA2EB01C02A457BC231>I<14FF010713E0
011F13F84913FE49C67E01F8EB3F804848EB0FC0D803C0EB07E00007140349EB01F0120F
90C7FCED00F85AA37FA27FED01F07FD80FF8EB03E07F6CB4EB07C09138800F806C9038E0
1F006CEBF03EECFC7C6CEBFFF06D5B011F5B6D13F001037F010F13FE90383F7FFFD97C3F
1380D9F80F13C02601E00713E02603C00113F048486C13F8000FEC3FFC48C7121F003EEC
07FE1503481400167FA248153FA2161FA4161E7E127C163C7E003F15786C15F06C6C1301
D807E0EB03E0D803F8EB0FC06CB4EBFF806C9038FFFE00013F5B010F13F0010190C7FC28
447CC131>I<14FF010713E0011F13F8497F90387F81FE3901FC007F4848EB1F8049EB0F
C0485A000FEC07E0484814F01503003F15F8A2485A16FCA200FF140116FEA616FFA4127F
5DA2123F7F001F5CA2120F6C6C130D151D6C6C13196C6C1331D800FE13E190397FEFC1FE
90381FFF81903807FE0190C7FCA2ED03FCA316F8A2150716F0EA0F80486CEB0FE0486C14
C0151F1680ED3F00495B6C48137E391E0001FC6C495A9038E01FF06CB512C000015C6C49
C7FCEB1FF028447CC131>I<ED1FFC4AB512C0020714F091391FE003FC027FC7127FD901
F8EC0FC0D903E0EC03E0D90780EC00F049C91278011C161C4982498249707E4848707EED
0FF04848D93FFE6D7E48C7B51470913903F80FC0000E902707E003E07F4A48C67E484948
01787F4AC77E48017E021C7F02FEEC0FF05CD8700103077F5C1303A200E0F003805C1307
A91303801270A213016E1700D83800030F5B80027E141F6C6D023F13066E6C017F130E6C
6D6C13F3913B07E003E3F81C6C902703F80FC15B0200B53800FFF06C6CD93FFE6D5A6C6C
D90FF0EB1F8092CBFC6C7E13707F7F010FEF1F806D6C16FFD903E0923803FE00D901F8ED
3FF8D9007F913803FFC0DA1FE0D97FFEC7FC0207B612F002014AC8FCDA001F138041477B
C54C>64 D<ED01E0A34B7EA34B7EA34B7EA24B7EA34B7E1539A203797F1570A203F07FED
E07FA2020180EDC03FA2020380ED801FA2020780ED000FA24A80020E1307A24A801603A2
4A8082A24A8182A24A8191B7FCA24982A202C0C7123F49486E7EA349C86C7EA24982010E
1507A2011E82011C1503A2013C820138811378017C83EA01FE2607FF8002077FB500F091
B612C0A442477DC649>I<DB0FFC146092B500C013E0020314F0020FECFC01913A3FFE00
FE03DAFFE0131F490180EB07874948C7EA03CFD90FF8EC00EF4948157F4948153F495A4A
151F49C9120F485A000317075B00071703485AA248481601A3485A1800A2127FA2491700
A212FFAC127FA27F19E0123FA36C7EA2F001C06C7EA26C6C1603000318807F0001EF0700
6C7E6D6C150E6E151E6D6C5D6D6C15386D6C15F0D903FE4A5A6D6C6CEB07C06D01E0EB1F
80DA3FFE01FFC7FC020FB512FC020314F0020014C0DB0FFEC8FC3B487BC546>67
D<B8FC17F017FC17FFC69026E0000713C06D4801007FEF1FF0EF0FFCEF03FE717E83727E
727E727EA2727E85180785A2180385A3727EA41A80AD1A00A44E5AA361180761180F6118
1F614E5A187F4E5A4D90C7FC4D5A4D5AEF1FF8EF7FE0496C903807FFC0B9C8FC17FC17F0
94C9FC41447CC34B>I<B912FCA4C601E0C7EA3FFE6D4814071701EF007EA2183E181EA2
84A384A40407EB0380A495C7FCA35EA25E5E16FF91B6FCA4ECC000163F8282A28219E0A3
F001C0A393C7FCA318031980A21807A3180FA2F01F0060604D5A1707496C147FBAFC60A3
3B447DC342>I<010FB6FCA4D9000313C002001380B3B3AA120EEA3F80487E487EA31600
5C13C0D87F805BEB000300385C003C495A6C5C390F801FE03907E03FC00001B5C7FC6C13
FCEB1FE028467CC332>74 D<B600E00107B512C0A4C601E0C8EBF8006D48ED7F80067EC7
FC187C1870604D5A4D5A4DC8FC170E5F5F5F5F4C5A4C5A4CC9FC160E5E5E5E5E15011503
4B7E4B7E151F4B7EED77FE15E39138C1C3FFDAC3817FECC70002CE8002DC6D7E02F8133F
4A804A131F4A6D7E831607707E8382707F84177F84717E171F84717E1707841703717E85
8585496C4A13F8B600E0013FEBFFE0A443447CC34C>I<B500C0021FB5FC8080A2C66C6C
020013E0F03F80D977FCED1F006E150E1373EB71FF811370816E7E143F816E7E140F816E
7E1403816E7F8082157F6F7E82151F6F7E8215076F7E828117806F13C0167F17E0EE3FF0
161F17F8EE0FFC160717FEEE03FF82188E82EF7FCE18EE173FEF1FFEA2170F1707A21703
A21701170013F8486C167ED807FF163EB512F8181E180EA240447CC349>78
D<B712E016FF17C017F8C69039E0003FFC6D48EB03FF04007F717E717E717E717EA28417
0784A760A2170F604D5AA24D5A4D5A4C48C8FCEE07FEEE3FF891B612E094C9FCA29139C0
007FC0EE1FF0EE07F8707E707E838284177F84A784A71AE084173FA2051FEB01C0496C15
F8B600E0130F943907FC0380943903FE0F00943800FFFECBEA3FFCF007F843467CC348>
82 D<49B41303010FEBE007013F13F890B56C5A3901FE00FFD803F8EB1F9FD807E0EB07
FF48487F48487F8148C87E825A007E81A212FE82A46C81A36C7E6D91C7FC7F7FEA3FFC6C
B47E14F86CEBFF806C14F86C14FE6C6E7E6C15E06D80011F80010780D9007F7F14079138
007FFF030F138015031500EE7FC0A2163FEE1FE0126012E0160FA47EA217C07E161F6C16
80A26CED3F007E6D147E6D5CD8FDF01301D8F8FE495A3AF07FC01FF06DB512C0D8E00F5C
010149C7FC39C0003FF02B487BC536>I<003FB912F8A4903BF8003FF8003F01C06D4813
0748C7ED01FC007E1700007C187C0078183CA30070181CA500F0181E48180EA5C81600B3
B3A4ED7FFC0103B77EA43F447DC346>I<B600E0011FB5FCA4C601E0C813E06D48ED3F80
F01F00180EB3B3A7013F161E181C80A2011F5EA26D6C157818706D6C15F001035E6E4A5A
01014B5A6DB4140F6E6C49C7FCDA3FE0137E91390FFC03FC6EB512F002015C6E6C1380DB
07FCC8FC40467CC349>I<EB0FFC90B57E48803903F00FF03907C003F8486CC67E001F14
7E6D137F81826C5A6C486D7E6C5AC8FCA6EC1FFF49B5FC90380FFE1FEB7FE03801FF00EA
03FCEA07F0485A485A123F485AA290C714E05AA3153FA36C6C136F15EF3B3FC001C7E1C0
391FE003873B0FF81F07FF802703FFFE0313006C9038F801FE3A001FE000FC2B2E7CAC31
>97 D<EA01FC12FFA4120712031201B2EC01FE91380FFFC0023F13F091387C03F89138F0
00FED9FDC0137FD9FF80EB1F8091C713C049140F49EC07E017F0160317F8A217FC1601A3
17FEA917FCA21603A217F8A2EE07F0A26DEC0FE017C06DEC1F80D9FB80EB3F00D9F1C013
7E9039F0E001FC9039E07C07F891383FFFE0D9C00F1380C7D803FCC7FC2F467DC436>I<
EC7FC0903803FFFC010F7F90383F803F90397E000F8049EB1FC0484814E04848133F485A
120F49EB1FC0001FEC0F804848EB070092C7FCA2127FA290C9FC5AAA7EA27FA2123F6D14
70121FA26C6C14E06C7E0003EC01C06C6CEB03806C6C1307017FEB0F0090383FC07E9038
1FFFF8010713E001001380242E7DAC2B>I<167FED3FFFA415018182B2EC7F80903803FF
F0010F13F890383FC07E90387F000F01FC6D5A48481301485A48487F000F81485AA2485A
A2127FA290C8FCA25AA97EA37F123FA2121F7F000F5D6C6C5B7F00034A1380D801FC9038
077FC06C6C011E13FE90383F80FC90381FFFF0010713E00100010013002F467DC436>I<
EB01FE903807FFC0011F13F090387F03F89038FC00FC4848137E48487F4848EB1F80A248
48EB0FC0121F4914E0003F1407A2127F90C713F0A35A90B6FCA390C9FCA67EA27F123FA2
16706C7EA26C6C14E012076C6CEB01C06C6CEB03806C6CEB0700017F130E90383FC07C90
380FFFF8010313E0010090C7FC242E7DAC2B>I<EC0FE0EC3FF8ECFFFE903803F83F9038
07E07F90390FC0FF80495AA2495A49EB7F00153E017E131C01FE90C7FCAFB67EA4C648C8
FCB3B0487E007F13FFA421467EC51E>I<EE1F80D901FCEB7FC0903A0FFF81FFE0013F90
38E3E1F090397E03F7039038F800FE484890387C01E0000391387E00C048486D1300A248
486D7EA2001F81A7000F5DA26C6C49C7FCA26C6C137E0001147C6C6C5B3901FE03F03903
3FFFE0010F1380260701FCC8FC0006CAFCA2120FA46C7E13E090B512F86CECFF806C15E0
6C8116FC0003813907E0000FD80F80EB01FF48C8EA7F80003E153F007E151F007C16C000
FC150FA5007C1680007E151F6CED3F00A26C6C147ED80FE0495AD803F8EB07F06CB4EB3F
E06C6CB51280011F49C7FC010113E02C427DAC31>I<EA01FC12FFA4120712031201B2EC
01FE913807FFC04A13F091383E07F8EC70014A6C7E4A7FEBFD8001FFC7127E167F5BA35B
B3A8486CECFF80B5D8F83F13FEA42F457DC436>I<EA01E0487E487E487EA46C5A6C5A6C
5AC8FCADEA01FC12FFA4120712031201B3AE487EB512F8A415437DC21C>I<143C147E14
FF491380A46D1300147E143C91C7FCADEC7F80EB3FFFA41300147F143FB3B3A9123E007F
1400486C5AA2147E5C1300387E01F8383E03F0381FFFC06C5BD801FCC7FC195785C21E>
I<EA01FC12FFA4120712031201B392387FFFE0A492381FFE00ED0FF016C093C7FC151E5D
5D5D4A5A4A5A4A5A4AC8FC5C4A7E147F4A7E9038FDCFE0EBFF87EC07F0496C7EEBFC0181
6E7E157E157F6F7E151F826F7E1507826F7E8282486C497EB5D8F81F13F8A42D457DC433
>I<EA01FC12FFA4120712031201B3B3B3A3487EB512F8A415457DC41C>I<D801FC01FFEC
1FE000FF010701E0EBFFFC4A6D487F913B1E03F803C07F913C3800FC07001F8000070160
D9FE0C80000349D97F186D7E2601FD805C01FFDA3F70130791C74980495DA3495DB3A848
6C4A6C497EB5D8F81FB50003B512E0A44B2C7DAB52>I<3901FC01FE00FF903807FFC04A
13F091383E07F8EC70010007496C7E0003497F3801FD8001FFC7127E167F5BA35BB3A848
6CECFF80B5D8F83F13FEA42F2C7DAB36>I<EC7F80903803FFF0010F13FC90383FC0FF90
397E001F80496D7ED801F0EB03E000038148486D7E48486D7EA24848147E003F157FA348
C8EA3F80A44816C0AA6C1680A26D147F003F1600A2001F157E6D14FE000F5D6D13016C6C
495A6C6C495A6C6C495A6C6C495A90263FC0FFC7FC6DB45A010713F89038007F802A2E7D
AC31>I<3901FC01FE00FF90380FFFC0023F13F091387C07F89138F001FE3A03FDC0007F
6CB448EB3F8091C7EA1FC05B49EC0FE017F0160717F8160317FCA3160117FEA917FC1603
A317F8160717F0160F6D15E0EE1FC06DEC3F806EEB7F00D9FDC013FE9039FCE001FC9138
7C0FF891383FFFE0020F1380DA03FCC7FC91C9FCAD487EB512F8A42F3F7DAB36>I<3903
F807E000FFEB1FF8EC3FFCEC78FEECE1FF3807F9C100031381EA01FBEC00FE01FF137C49
13381500A35BB3A7487EB512FEA4202C7DAB26>114 D<90383FE0183901FFFC3848EBFF
78390FE01FF8381F0003003E1301003C1300481478A212F81538A37E7E6C1400EA7FC013
FC383FFFE06C13FC6C13FF6C14806C14C0C614E0011F13F0010013F8EC0FFC1403006013
0000E014FE157E7E153EA37E153C7E157C6C14786C14F039FB8003E039F1F00FC000F0B5
128039E07FFE0038C00FF01F2E7DAC26>I<130EA6131EA4133EA2137EA213FE12011203
1207001FB512F0B6FCA3C648C7FCB3A3151CAA017E1338137FA26D1370EB1F8090380FE1
E0903807FFC06D13809038007E001E3E7EBC26>I<D801FC147F00FFEC3FFFA400071401
000380000181B3A75EA35D12005D6DEC7F80017E010613C06D011C13FE90381FC0789038
0FFFF06D13E00100018013002F2D7DAB36>I<B539F003FFFCA4000390C7EA7FE0D801FC
EC3F006D141E0000151CA26D143C6D1438A26D6C5BA26E13F0011F5CA2ECE001010F5CA2
6D6C485AA2ECF807010391C7FCA26E5A0101130EA26D6C5AA2ECFF3CEC7F38A215F86E5A
A26E5AA36E5AA36E5AA22E2C7EAA33>I<B500E1B539C07FFF80A43E07FE0007FC000FFC
006C486D48EB07F00001715A03015D826C6C01035DA21807017F496C91C7FC167EA29027
3F800F7F130EED0E3FA290261FC01E6D5AED1C1FA290260FE03C6D5AED380FA2902607F0
786D5AED7007A2902603F8F06D5AEDE003A2D901FDECF9C0EDC001A2D900FFECFF804B7E
A2027F92C8FC92C77EA26E147E023E143EA2021E143C021C141C412C7EAA46>I<B539F0
03FFFCA4000390C7EA7FE06C48EC3F00163E0000151CA2017F5CA280013F5CA26E13F001
1F5CA26D6C485AA2ECF00301075CA26D6C48C7FCA214FC0101130EA2ECFE1E0100131CA2
EC7F38A215F86E5AA26E5AA36E5AA36E5AA292C8FCA25C140EA25CA3003C5B127EB45BA2
5C130148485A387C0780011FC9FCEA3FFEEA0FFCEA03F02E3F7EAA33>121
D E /Fn 34 122 df<B712F0A7240780A12B>45 D<170F4D7EA34D7EA34D7EA34D7EA34C
7FA24C7F17CFA204077F1787A2040F7F1703A2041F80EE1E01A2043E80EE3C00A2047C80
0478137FA24C80183FA24B4880181FA24B486D7EA20307814C1307A2030F8193C77EA24B
82031E80A2033E82033C80A2037C820378157FA24B82193FA24A4882191FA24A488292B8
FC4A83A3DA0F80C8EA07FF92C97EA24A84021E82A2023E84023C82A2027C840278177FA2
4A841A3FA24948841A1FA24948841A0F0107854A1707A2010F8586131F496C85137F2601
FFF04D7F000701FC051F13F0B66C0307B612F0A45C657DE463>65
D<DD7FF81560040FB56C14E0047F14E00303B600F81301030F9026E003FE1303DB3FFEC7
EA3F80DBFFF091380FC0074A01C0EC03E0020790C9EAF80FDA0FFCEE7C1F4A48163EDA3F
E0EE1F3F4A48160F4A48EE07FF4990CA7E494883494883495A011F197F495A4A183F137F
4948181FA24849180F5A91CC12075A5B120F1B035B121FA21B01485AA3127F98C7FCA35B
A212FFAE127FA27FA4123F1CE0A26C7EA3120F7FF301C012077F7E6EF003807E6C7FF307
006D7E013F190E806D6C60130F6D6C606D6C606D6C18F06D6D4C5A6E6C5F6E6CEE0780DA
1FF84CC7FC6E6C161E6EB4167C020101C04A5A6E01F0EC07E0DB3FFEEC1FC092280FFFE0
01FFC8FC030390B512FCDB007F14F0040F14809326007FF8C9FC53667AE360>67
D<B912F018FF19E019F8C601FCC813FED93FF892380FFF80011F04017F9538007FF0737E
F10FFC737E737E737F737F747E747E1A1F747E871A0787747EA2741380A27413C0A21CE0
1B7FA21CF01B3FA21CF8A31CFC1B1FA51CFEAF1CFCA51B3F1CF8A41CF01B7F1CE0A21BFF
1CC0A2501380A2501300A2505A631A0F505A63505A505A1AFF4F5B4F90C7FCF10FFC4F5A
F17FF0953801FFC0013F040F5BD9FFFCDBFFFEC8FCBA12F819E096C9FC18F0576279E165
>I<BC1280A4C601FCC81201D93FF8DB001F13C0011F170319001A7F1A3F1A1F1A0F1A07
A21A03A21BE01A01A41A00A61B701870A41B00A418F0A4170117031707170F177F91B7FC
A402F8C7127F170F1707170317011700A41870A31B0EA41B1C95C8FCA51B3C1B38A31B78
A41BF0A31A01A21A031A07A2F20FE01A1F1A7F1AFF1903013F171FD9FFFC0303B5FCBC12
C0A44F6279E15A>I<BB12FCA4C601FCC8120FD93FF89238007FFE011F171F1907190319
00A21A7E1A3EA21A1EA21A1F86A486A6F20380A318E0A297C7FCA61701A417031707170F
171F17FF91B7FCA402F8C7FC171F170F170717031701A41700A895C9FCB3A580133F90B5
7EB712E0A4496279E156>I<B712C0A4C66CEB8000D91FFEC7FC6D5AB3B3B3B3AE497E90
387FFF80B712C0A422627AE12F>73 D<B500F8041FB512F08080A226003FFF0400EBFE00
6DF03FF86FEE0FE0011D7F011C725A81027F715A816E7E141F81140F6E7E8180826E7F80
82157F826F7E151F82150F6F7E8281836F7F8183167F83707E161F83160F707E83828470
7F8284177F84717E171F84170F84717E8319807113C08319E0187F19F0F03FF8181F19FC
180F19FEF007FF841A837213C3841AE3197F1AF3F13FFB191F1AFF85A28585A28585A201
3E187FA2017F183F1A1F3801FFC0000701F0170FB67E1A071A03A2546279E163>78
D<933801FFE0043F13FF4BB612E003079038003FF8DB1FF0EB03FEDB7FC0903800FF804A
48C8EA3FE0DA03FCED0FF0DA0FF8ED07FCDA1FE0ED01FE4A486F7E4A48707E4ACA6C7E49
48717E4948717E0107854948717E4948717E013F854A834948717F01FF864A187F488791
CC123F4887A24848737EA2000F8749190F001F87A34848737EA4007F1C80A24985A400FF
1CC0AF6C6C4F1380A5003F1C00A26D61A2001F63A26D191F000F63A26C6C4F5AA36C6D4E
5AA26C6D4E5A6C636E5F017F626D6C4D90C7FCA26D6C4D5A6D6C4D5A0107616D6C4D5A6E
173F6D6D4C5A6D6D4C5ADA3FE04B90C8FC6E6C4B5A6E6C4B5ADA07FEED1FF8DA01FFED3F
E09126007FC0ECFF80DB1FF8D907FEC9FCDB07FFEB3FF8030190B512E0DB003F91CAFC04
0113E05A667AE367>I<B912C018FEF0FFC019F0C601FCC7000113FCD93FF89138001FFF
011F04037F727F9538007FF0737E737E190F737E86731380A27313C0A31BE085A21BF0A9
1BE0A2611BC0A34F13801B0061624F5A4F5A4F5A4F5A4E485A4E90C7FCF01FFE943801FF
F891B812E096C8FC18F802F8CCFCB3B3A4497E90B5FCB7FCA44C6279E15A>I<DA07FF14
03023F01F05B49B512FC010702FF5B90260FFC0013C0D91FE090380FE01F017FC7EA03F0
01FE913800F83FD801F8153C48486F5A496F5A000782484881484881A248CAFCA2845A00
7E83A200FE83A384A37EA284A26C7EA27F6D93C7FC123F7FEA1FFC7F6C6C7E14E06C13FC
6CEBFFC06C14F86CECFF806D14F86DECFF806D15E0010715F86D15FE010081021F15C002
0181DA003F80030380DB003F7F16039338007FFEEF1FFF1707711380837113C0187F19E0
183F181FA2006018F000E0170FA31807A37EA46C18E0A36C170F19C07E181F6C18807FF0
3F006D167E7F6D5ED8FE7C4B5A486C4B5A6D6C4A5A26F80FE0EC1FC0D903FCEC7F8029F0
01FFE003FFC7FC6D6CB512FC48011F14F0020314C0489026001FFEC8FC3C667AE349>83
D<003FBC12F8A49126C000039038C0000301FCC76C49EB007F01F0190F01C019074848F1
03FC90C81701007E1A00007C1B7CA300781B3CA400701B1CA600F01B1E481B0EA7C91800
B3B3B3A54C7FA2041F13F84AB87EA457627CE160>I<B600FC0207B600E00203B512FCA4
000191C9000F01F8C9003F13C026007FFC040301E093380FFE006D487049705A7A5A011F
71725AA2696E717E010F67A26E721603010767A26E4D7E6D54C7FCA2876D6DDB01CF170E
A2876FDB0387171E6D1E1CA26F92260703FF163C027F1D38A26F030F80023FDC0E015FA2
6F031E80021FDC1C005FA2886E6C4B017F4B5AA36F4B6D6C1403020765A26F03F06E1407
6E4C011F93C8FCA2700101816E4C010F150EA2886E6D494801075DA37049C76C6C143C03
7F1B38A27049701378033F020E6E1570A270011E82031F021C6E5DA2896F6C49037F495A
A21DF07049033F1303030763A2704992381FF8076F98C9FCA2058117FC6F4A030F130EA2
05C317FE6F4A03075BA21DFFDC7FE7C96C5BA305FE7013F8043F61A37048705BA3704871
5AA37048715AA34D171F040396CAFCA24D830401180E86647FE189>87
D<EC1FF849B5FC010714C090390FE01FF090393F0003F80178EB01FE49EB007F48486E7E
48488149141FD807406E7E01F881486C1407837FA2707EA26C5A6C5A6C5AC9FCA6ED03FF
92B5FC140F027F1303903803FFE0010F1300EB1FF8EB7FE0495A4890C7FC485A485A485A
121F5B123F48481770A3485AA31607A3160FA26C6C141DA26C6CDA38FE13E0001F15706C
6C14E06C6C903A01C07F01C06CB4D90780EB83806C903AC03F003FFF27007FFFFC6D1300
011F01F0EB0FFC01010180EB03F03C417BBF42>97 D<4AB47E020F13F8023F13FE9139FF
807F80903A03FC0007E0D907F0EB01F04948EB007849488049488049C8120E01FE151700
0116FF48484A1380A248485C120F5B121F701300496E5A003F167C94C7FC127FA25BA312
FFAC127FA27FA2123FA27F121FEF01C0120F7F0007EE03807F0003EE07006C7E6C6C150E
A26D6C5C6D6C5CD90FE05CD907F8495AD903FEEB07C0902700FFC03FC7FC91383FFFFE02
0F13F80201138032417CBF3A>99 D<181EEF3FFEEE07FFA4EE000F1703A21701B3AAEDFF
80020F13F8023F13FE9138FFC03F903A03FE0007C1D907F8EB01E1D90FE0EB0071494814
394948141D49C8120F01FE15071201484815035B00071601120F5B121FA2485AA3127FA2
5BA212FFAC127FA37F123FA3121F7F120FA26C6C1503A26C6C15070001160F7F0000161D
017F15396D6CEC71FF6D6C14E1D90FF0D903C113C0D903FCD90F81EBFF806DB4EB7E0190
39007FFFFC021F13E00201010091C7FC41657CE349>I<4AB4FC021F13F0027F13FC9039
01FF01FF903A03F8007F80D90FE0EB1FC049486D7E49486D7E49C76C7E01FE8100016F7E
5B00036F7E485AEF7F80485AA2001F17C049153F123FA3007F17E05BA312FF90B8FCA301
C0CAFCA8127FA37FA2123FA36C7E18E0120F7F0007EE01C06C7EEF03806C7E6C6CED0700
6D150E6D7E6D6C143CD90FF05C6D6C5CD901FEEB03C0903A00FFC01F8091263FFFFEC7FC
020713F8020013C033417DBF3A>I<ED0FF0ED7FFC4A487E913807F81F91390FE00F8091
391F801FC0023FEB3FE091387F007F14FEA2495A0103EC3FC04AEB1F80EE0F00010791C7
FCA25C130FB3A4B712F0A426000FF0C8FCB3B3B0497EEB3FFE003FB6FCA42B657EE428>
I<F03F80DA03FC903801FFE091273FFFC00713F091B538F01FC1903C01FE07F83E03F890
3A07F000FE784948EB7FF0494890393FC001F04948011FEB00E049C76C6C1300A201FE6E
7E000182A2000382491403A3000782A800035EA36D140700015EA200005E017F4A5AA26D
6C495A6D6C495A496C49C8FC6E13FE903971FE07F80170B55AD9F03F13C09026E003FCC9
FC000190CBFCA77FA27F6C7E13FF6DB512FEEEFFF06D15FE6D6F7E6D16E04982017F8201
FEC700017FD803F89138001FFED807E0ED03FF484815004848EE7F8090CA123F48EF1FC0
007E170FA219E0481707A7007EEF0FC0A26CEF1F80A26C6CEE3F006C6C167E6C6C5ED803
F8ED03F86C6C4B5AD8007FED1FC0D93FE0ECFF80D90FFED90FFEC7FC0101B612F0D9003F
1480020101F0C8FC3D5E7DBF42>I<133E137F497E487F487FA56C5B6C5B6DC7FC133E90
C8FCB3EB03C0EA07FF127FA41201EA007FA2133FB3B3AC497E497EB612E0A41B5F7DDE23
>105 D<EB03C0EA07FFB5FCA41201EA007FA2133FB3AB0403B512F8A40400148094387F
F800EF3FE0188095C7FC177C17785F4C5A4C5A4C5A4CC8FC161E16385E5E4B5A4B5A4BC9
FCED1F804B7E157F4B7E9138C1EFF0ECC3CF9138C787F89138CF03FC14DE9138F801FE4A
6C7E5C4A6D7E707EA2707E707EA2707E707EA2707E707EA2717E717EA2717E717EA28471
7E84496C4A7E496C4A13E0B600F090B6FCA440647CE346>107 D<EB03C0EA07FFB5FCA4
1201EA007FA2133FB3B3B3B3AD497E497EB612F0A41C647DE323>I<D903C0D9FFC0EC07
FED807FF010701F891383FFFC0B5011F01FE91B512F0923D3F00FF8001F807FC03F8903B
3FC007C001FEDAC1E06D6C48C77E0001D9C3C090260FF01E6E7E26007FC7C70007013814
3F06F882D93FCE020349141F02DC6F488102D85E02F8DA01FD150F4ADBFF8081A34A93C8
FCA44A5DB3B3496C4A6C4B7E496C4A6D4A7EB6D8F007B6D8803FB512FCA4663F7CBE6F>
I<D903C0EB7FE0D807FF903803FFFCB5010F13FFDB3F0013C00378EB1FE003E06D7E0001
D9C1C06D7E27007FC380130302C7C77FD93FCE140102DC81A214F8717E5CA25CA45CB3B3
496C4A7F496C4A7FB6D8F003B612C0A4423F7DBE49>I<EDFFE0020713FC023FEBFF8091
39FF803FE0903A01FC0007F0D907F0EB01FC49486D7E4948147F49486E7E49C86C7E01FE
6F7E48486F7E000383491503000783491501000F83001F834981A2003F1880A34848EE7F
C0A400FF18E0AC007F18C0A36D16FF003F1880A3001F18006D5D000F5FA26C6C4B5AA26C
6C4B5A00015F6C6C4B5A6D151F6D6C4A5A6D6C4A5AD90FE002FEC7FCD907F8EB03FCD903
FEEB0FF8903A00FF803FE0023FB51280020701FCC8FC020013E03B417DBF42>I<D903C0
EB7FC0D807FF903807FFFCB5011F13FFDB7F0013C003F8EB1FE0DAC1E0EB0FF80001D9C7
80EB03FC26007FCFC76C7E02DE6E7ED93FDC8202F86F7E4A153F4A82727E5C727EA2727E
A2851803A285A3841A80AC1A0060A3611807A261180F61A26E4B5A616E153F4E5A6E5E02
DC4BC7FC4D5A02CE4A5ADAC780495ADAC3C0495ADAC1F0EB3FE0913AC07E01FF806FB448
C8FC030F13F80300138093CAFCB3A3497E497EB612F0A4415B7DBE49>I<9039078003F8
D807FFEB0FFFB5013F138092387C07C09238F01FE0DA81C013F00001903883803F39007F
8700148E133F029CEB1FE0EE0FC002B8EB030093C7FC14F0A35CA55CB3B1497EEBFFF8B6
12FCA42C3F7CBE33>114 D<9139FFE00180010FEBFC03017FEBFF079039FF001F8FD803
F8EB03DFD807E0EB00FFD80F80147F48C8123F161F123E007E150F127C160712FCA31603
7EA27EA26C7E01E091C7FCEA3FF813FE381FFFF06CEBFF806C14F86C14FF6C15C06C6C14
F0011F80010780D9007F7F02037FDA003F1380030313C0030013E0163F0060ED1FF000E0
150F160717F86C1503A216017EA37E17F0A27E16036C16E06D140717C06DEC0F80D8FCE0
EC1F000178143ED8F83E14FC3AF01FC00FF80107B512E0D8E001148027C0003FF8C7FC2D
417DBF34>I<1438A71478A414F8A31301A31303A21307130F131FA2137F13FF1203000F
90B6FCB8FCA3260007F8C8FCB3AE17E0AE0103EC01C080A2010115806E130313006EEB07
006E130E6E6C5A91381FF078913807FFF06E5B9138007F802B597FD733>I<D903C0150F
D807FFED1FFFB50203B5FCA40001ED0007D8007F1501A2013F81B3B25FA45FA2011F5DA2
6E140E130F5F6D6C4A7F5F6D6C4A13E0D901FED903C0EBFFC0903A007FC01F8091393FFF
FE00020F13F8020001E0EC800042407DBE49>I<B66C49B512E0A4000101F8C8387FFE00
26007FE0ED1FF8013FEE0FE06161011F94C7FC80010F160EA26E151E0107161C8001035E
A26E157801011670806D5EA26F1301027F5DA26E6C495AA26F1307021F92C8FCA26E6C13
0EA26F131E0207141CA26F133C020314388102015CA26F13F06E5C168092387F81C0A216
C3033F5B16E3DB1FE7C9FCA216FF6F5AA26F5AA36F5AA26F5AA36F5A433F7FBD46>I<B6
D8801FB500E090B512F8A4000301F0C7D87FFCC7001F1380C601C0DA1FF0913807FE0001
7F735A71486E5A725D013F6217076E81011F030F5EA26E6F1403010F031F5E171D6E6F14
070107033D93C7FC17386E6F5C01030378150EEF707F6E70131E010103F0151CEFE03F6E
70133C6D02011638EFC01F03806F1378027F01031670EF800F03C06F13F0023F01075EEF
000703E0EDF801021F495E040E130303F0EDFC03020F011E5E041C130103F8EDFE070207
013C93C8FC0438130003FC6F5A02030178150E0470147F03FE169E020101F0159C4C143F
03FF16FC6E5F4C141FA2037F5E4C140FA2033F5E93C81207A26F5E031E1503030E5E5D3F
7FBD60>I<007FB500C0010FB512E0A4C691C70003EBFC00D91FFC6E13E0010F6F90C7FC
01075E18F86D6C5D6D6C4A5A6D7F4D5A6E6C495A6E6C49C8FC6E6C130E171E6E6C5B6E6C
5B6E6C5B5F913801FF016EEB83C092387FC780033F90C9FC16EFED1FFE6F5A6F5A826F7E
6F7E5D834B7F92380F3FE0ED1E1F033C7F9238380FF892387807FCEDF003DA01E07F4A48
6C7E707F4A486D7E4AC7FC021E6E7E021C6E7E023C6E7E5C4A6E7E49486E7E01036F7E13
07010F6F7F013F83D9FFF04A7F00076D4A13FCB56C020FEBFFF8A4453E80BD46>I<B66C
49B512E0A4000101F8C8387FFE0026007FE0ED1FF8013F17E0725A011F5F96C7FC80010F
160EA26D6C5DA26E153C01031638A26D6C5DA26E15F06D5EA26E6C495AA26F1303023F5D
A26F1307021F92C8FC6F5B020F140EA26F131E0207141C6F133C02031438A26F13780201
14706F13F06E5CA21681037F5B16C3033F5BA216E7031F90C9FC16FF6F5AA36F5AA26F5A
A36F5AA26F5AA215015E15035EA2150793CAFC5D150EA2151E151C153CD81F801338487E
486C5BA25D14015D49485A383F80074948CBFC001E133E380FC0FC6CB45A000113E06C6C
CCFC435B7FBD46>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4
%%BeginPaperSize: a4
/setpagedevice where {
pop 1 dict dup /PageSize [ 595 842 ] put setpagedevice
} {
statusdict /a4tray known {
statusdict begin a4tray end
/a4 where { pop a4 } if
} {
/a4 where {
pop a4
} {
statusdict /setpage known {
statusdict begin
595 842 0 setpage
end
} if
} ifelse
} ifelse
} ifelse
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 330 739 a Fn(A)42 b(System)f(F)-11 b(or)42 b(F)-11
b(ault-T)g(oleran)l(t)43 b(Execution)g(of)e(Data)h(and)420
922 y(Compute)i(In)l(tensiv)l(e)g(Programs)e(Ov)l(er)i(a)f(Net)l(w)l
(ork)g(Of)1451 1104 y(W)-11 b(orkstations)1168 1345 y
Fm(J.A.Smith)32 b(and)g(S.K.Shriv)-5 b(asta)m(v)g(a)1080
1461 y(Departmen)m(t)32 b(of)g(Computing)g(Science,)966
1577 y(The)i(Univ)m(ersit)m(y)f(of)f(New)m(castle)i(up)s(on)f(T)m(yne,)
1357 1694 y(New)m(castle)h(up)s(on)e(T)m(yne,)1533 1810
y(NE1)h(7R)m(U)g(UK)791 1926 y Fl(f)p Fm(jim.smith,san)m(tosh.shriv)-5
b(asta)m(v)g(a)p Fl(g)p Fm(@new)m(castle.ac.uk)1472 2121
y(18)32 b(february)i(1996)1661 2393 y Fk(Abstract)653
2496 y Fj(The)28 b(bag)h(of)g(tasks)f(structure)g(p)r(ermits)g(dynamic)
f(partitioning)i(for)g(a)f(wide)h(class)538 2587 y(of)c(parallel)h
(applications.)36 b(This)25 b(pap)r(er)g(describ)r(es)g(a)g
(fault-toleran)n(t)h(implemen)n(tation)538 2678 y(of)37
b(this)g(structure)f(using)i(atomic)e(actions)i(\(atomic)f
(transactions\))h(to)f(op)r(erate)g(on)538 2770 y(p)r(ersisten)n(t)30
b(ob)t(jects,)j(whic)n(h)d(are)h(accessed)h(in)e(a)h(distributed)e
(setting)i(via)g(a)f(Remote)538 2861 y(Pro)r(cedure)24
b(Call)g(\(RPC\).)g(The)g(system)e(is)i(suited)f(to)h(parallel)h
(execution)e(of)h(data)g(and)538 2952 y(compute)31 b(in)n(tensiv)n(e)i
(programs)g(that)g(require)g(p)r(ersisten)n(t)g(storage)i(and)d(fault)i
(toler-)538 3044 y(ance,)g(and)d(runs)h(on)g(sto)r(c)n(k)g(hardw)n(are)
g(and)g(soft)n(w)n(are)h(platforms,)i Fi(unix)p Fj(,)d(C++.)54
b(Its)538 3135 y(suitabilit)n(y)30 b(is)g(examined)f(in)h(the)f(con)n
(text)h(of)g(the)g(measured)f(p)r(erformance)h(of)h(three)538
3226 y(applications;)c(ra)n(y)e(tracing,)i(matrix)e(m)n(ultiplication)h
(and)f(Cholesky)h(factorization.)330 3496 y Fh(1)135
b(In)l(tro)t(duction)330 3678 y Fg(Man)n(y)34 b(computations)e
(manipulate)g(v)n(ery)h(large)g(amoun)n(ts)g(of)h(data.)58
b(Matrix)33 b(calculations)330 3778 y(represen)n(t)28
b(one)h(example)e(class.)40 b(In)30 b(a)f(Massiv)n(ely)c(P)n(arallel)g
(Pro)r(cessor)h(\(MPP\))j(suc)n(h)g(a)g(v)-5 b(ast)330
3877 y(data)30 b(set)g(is)f(t)n(ypically)d(partitioned)i(statically)e
(b)r(et)n(w)n(een)k(the)g(v)n(ery)f(man)n(y)g(distributed)f(pro-)330
3977 y(cessing)i(elemen)n(ts)g(and)h(mo)n(v)n(ed)f(amongst)g(them)h(as)
g(necessary)f(to)i(p)r(erform)e(the)j(computa-)330 4076
y(tion.)40 b(Suc)n(h)29 b(an)g(approac)n(h)e(is)h(exempli\014ed)e(in)j
(Cannon's)f(algorithm)d(for)j(matrix)f(m)n(ultiplic-)330
4176 y(ation)e([14].)36 b(One)27 b(suggestion)d(is)i(that)h(a)g(Net)n
(w)n(ork)f(Of)h(W)-7 b(orkstations)24 b(\(NO)n(W\))k(b)r(e)f(mo)r
(delled)330 4276 y(on)g(suc)n(h)h(an)f(arc)n(hitecture)f([2)o(].)38
b(Ho)n(w)n(ev)n(er,)26 b(it)h(ma)n(y)f(b)r(e)i(that)g(problem)d(size)i
(can)g(exceed)h(ev)n(en)330 4375 y(the)k(aggregate)c(memory)h(of)i(all)
e(a)n(v)-5 b(ailable)27 b(mac)n(hines.)45 b(In)32 b(suc)n(h)f(a)g
(situation,)f(the)i(problem)330 4475 y(cannot)27 b(b)r(e)h(statically)c
(partitioned)h(b)r(et)n(w)n(een)j(pro)r(cessors.)455
4575 y(As)34 b(the)h(problem)d(size)h(increases)f(so)i(to)r(o)g(do)r
(es)g(the)h(computation)d(time)h(in)g(an)n(y)h(giv)n(en)330
4674 y(con\014guration,)e(and)h(in)f(a)h(NO)n(W)g(p)r(oten)n(tially)d
(so)j(to)r(o)g(do)r(es)g(the)g(n)n(um)n(b)r(er)f(of)h(no)r(des)g(whic)n
(h)330 4774 y(ma)n(y)f(b)r(e)j(emplo)n(y)n(ed.)53 b(As)34
b(the)g(scale)e(of)i(a)g(distributed)e(computation)g(is)h(increased)f
(in)h(this)330 4873 y(w)n(a)n(y)-7 b(,)33 b(the)g(p)r(ossibilit)n(y)28
b(of)33 b(a)f(failure)e(o)r(ccurring)h(whic)n(h)g(migh)n(t)g(a\013ect)i
(the)g(execution)e(of)i(the)330 4973 y(computation)i(m)n(ust)i
(increase.)65 b(If)38 b(it)f(is)g(not)h(p)r(ossible)d(to)j(tolerate)d
(suc)n(h)j(an)f(ev)n(en)n(t,)j(it)d(is)330 5073 y(necessary)26
b(to)h(restart)g(the)h(en)n(tire)e(computation.)455 5172
y(The)32 b(approac)n(h)e(describ)r(ed)h(here)h(pro)n(vides)e(a)i
(solution)d(for)j(these)h(problems)c(b)n(y)j(imple-)330
5272 y(men)n(ting)c(a)h(store)g(on)h(secondary)e(storage)f(whic)n(h)i
(is)g(shared)g(b)r(et)n(w)n(een)g(a)h(collection)c(of)k(con-)330
5372 y(curren)n(t)e(pro)r(cesses.)41 b(A)29 b(computation)e(is)h
(organized)f(as)h(a)h(bag)g(of)g(tasks)f(t)n(yp)r(e)i(structure)e([7])
330 5471 y(where)e(the)h(o)n(v)n(erall)c(computation)h(is)i(divided)f
(up)i(in)n(to)f(a)g(n)n(um)n(b)r(er)f(of)i(tasks)f(whic)n(h)g(are)g
(then)330 5571 y(sc)n(heduled)k(dynamically)c(b)r(et)n(w)n(een)31
b(a)g(p)r(oten)n(tially)c(v)-5 b(arying)29 b(collection)f(of)j
(concurren)n(t)e(pro-)330 5670 y(cesses.)35 b(Computation)23
b(data,)j(including)c(the)k(bag)e(of)i(tasks)e(is)g(lo)r(cated)g(in)h
(the)h(shared)e(store,)1809 5919 y(1)p eop
%%Page: 2 2
2 1 bop 330 390 a Fg(whic)n(h)26 b(is)f(organized)f(as)i(a)h(rep)r
(ository)d(of)j(ob)5 b(jects)26 b(and)h(fault)f(toleran)n(t)e(access)i
(to)h(it)f(supp)r(or-)330 490 y(ted)f(through)f(atomic)e(actions)h(op)r
(erating)g(on)h(the)h(con)n(tained)e(ob)5 b(jects.)36
b(It)25 b(is)e(suggested)h(that)330 589 y(these)k(mec)n(hanisms)23
b(pro)n(vide)j(a)h(clear)f(mo)r(del)f(to)j(the)g(user.)455
689 y(In)c(this)g(exp)r(erimen)n(t,)f(these)i(facilities)20
b(are)k(supp)r(orted)g(through)g(an)g(established)e(distrib-)330
789 y(uted)36 b(system)e(whic)n(h)g(runs)h(on)g(man)n(y)f(v)n(ersions)f
(of)i Ff(unix)h Fg(and)f(C++,)h(without)f(alteration)330
888 y(to)30 b(either.)43 b(The)30 b(approac)n(h)f(is)f(in)n(v)n
(estigated)f(through)j(implemen)n(tation)25 b(of)30 b(applications)c
(of)330 988 y(scale)j(appropriate)g(to)i(parallelizati)o(on)25
b(and)31 b(fault-tolerance)d(in)i(a)h(NO)n(W.)g(P)n(erformance)d(is)330
1088 y(sho)n(wn)f(to)g(b)r(e)h(fundamen)n(tally)d(limited)f(only)i(in)h
(hardw)n(are)f(bandwidths.)455 1187 y(The)i(pap)r(er)g(con)n(tin)n(ues)
e(with)i(notes)g(on)g(related)e(w)n(ork)h(in)g(Sect.)i(2,)f(a)g
(description)e(of)i(the)330 1287 y(applications)i(and)k
(fault-tolerance)d(mec)n(hanisms)f(in)j(Sect.)i(3,)g(measured)d(p)r
(erformance)g(in)330 1386 y(Sect.)c(4)f(and)h(summary)c(in)j(Sect.)h
(5.)330 1661 y Fh(2)135 b(Related)45 b(W)-11 b(ork)330
1843 y Fg(The)33 b(attraction)e(of)i(exploiting)d(a)j(readily)d(a)n(v)
-5 b(ailable)29 b(NO)n(W)k(to)g(p)r(erform)f(parallel)c(compu-)330
1942 y(tations)36 b(is)f(widely)g(ac)n(kno)n(wledged.)62
b(It)37 b(is)f(also)f(recognized)g(that)i(a)f(NO)n(W)h(t)n(ypically)d
(has)330 2042 y(disadv)-5 b(an)n(tages)23 b(compared)h(to)h(a)h(tigh)n
(tly)e(coupled)g(m)n(ultipro)r(cessor,)e(including)h(a)i(lo)n(w)n(er)e
(p)r(er-)330 2142 y(formance)j(in)n(terconnect)g(and)h(a)g(greater)f
(need)i(for)f(fault-tolerance.)455 2241 y(Exp)r(erimen)n(ts)d(ha)n(v)n
(e)j(b)r(een)h(p)r(erformed)e(to)i(statically)c(partition)h(data)i(in)n
(tensiv)n(e)e(compu-)330 2341 y(tations)i(o)n(v)n(er)g(a)h(NO)n(W,)g
(e.g.)39 b([5].)h(Ho)n(w)n(ev)n(er,)27 b(the)h(size)g(of)g(the)h
(computation)d(is)h(b)r(ounded)i(b)n(y)330 2441 y(aggregate)24
b(memory)g(of)j(the)g(mac)n(hines.)34 b(Structuring)25
b(similar)d(to)27 b(the)g(bag)f(of)g(tasks)g(is)g(often)330
2540 y(emplo)n(y)n(ed)j(in)i(practice,)h(e.g.)50 b(for)31
b(seismic)e(migration)f(in)j([1],)i(but)g(with)e(limited)e(pro)n
(vision)330 2640 y(for)e(fault-tolerance)d(and)k(for)f(problems)e(whic)
n(h)h(are)h(less)f(in)n(tensiv)n(e)f(in)i(data.)455 2739
y(Mec)n(hanisms)k(to)k(supp)r(ort)f(fault-tolerance)e(ma)n(y)h(b)r(e)i
(transparen)n(t)e(to)i(the)g(application)330 2839 y(programmer,)h(e.g.)
i([12)o(],)78 b([15)o(].)68 b(Ho)n(w)n(ev)n(er,)39 b(a)e(transparen)n
(t)f(sc)n(heme)h(is)f(unlik)n(ely)f(to)j(tak)n(e)330
2939 y(adv)-5 b(an)n(tage)27 b(of)i(p)r(oin)n(ts)e(in)h(an)h
(application)c(where)j(data)g(to)h(b)r(e)g(sa)n(v)n(ed)e(is)h(minim)n
(um,)c(suc)n(h)29 b(as)330 3038 y(when)f(data)f(has)g(just)h(b)r(een)g
(written)f(to)g(disk)g(for)g(instance.)455 3138 y(One)f(non)g
(transparen)n(t)e(sc)n(heme)h(for)h(the)h(static)e(partitioning)e
(approac)n(h)h([17)o(])j(main)n(tains)330 3238 y(a)d(parit)n(y)e(cop)n
(y)h(of)h(distributed)e(partitions)f(of)j(computation)e(state.)35
b(While)23 b(p)r(erformance)f(for)330 3337 y(a)j(Cholesky)e
(factorization)f(of)k(5000)12 b(elemen)n(t)23 b(square)h(matrix)f(,)j
(at)g(1700)11 b(seconds)25 b(emplo)n(ying)330 3437 y(17)k(Sparc-2)g
(mac)n(hines,)f(is)h(similar)c(to)30 b(that)h(recorded)e(here)g(the)i
(computation)d(is)h(b)r(ounded)330 3537 y(b)n(y)g(total)g(memory)e(and)
i(the)h(approac)n(h)e(here)h(whic)n(h)f(emplo)n(ys)f(few)n(er)i(mac)n
(hines)e(is)i(resilien)n(t)330 3636 y(to)e(a)h(greater)d(n)n(um)n(b)r
(er)i(of)g(failures.)455 3736 y(An)k(early)d(design)i(study)14
b([4)o(])31 b(considered)e(the)i(use)f(of)h(atomic)d(actions)h(as)h(a)h
(mec)n(hanism)330 3835 y(to)c(supp)r(ort)h(fault-toleran)n(t)c
(parallel)g(programming)e(o)n(v)n(er)k(a)h(NO)n(W.)455
3935 y(F)-7 b(ault)35 b(tolerance)f(for)i(a)g(bag)g(of)g(tasks)g(t)n
(yp)r(e)g(structure)g(has)g(b)r(een)h(considered)d(b)r(efore,)330
4035 y(e.g.)66 b([3)o(],)40 b([8])d(but)h(without)f(pro)n(viding)d
(access)i(to)h(large)e(scale)h(data)h(on)g(secondary)e(stor-)330
4134 y(age.)h(Plinda)24 b([11)o(])j(whic)n(h)f(supp)r(orts)g(access)g
(to)g(p)r(ersisten)n(t)g(tuple)g(spaces)g(and)h(a)f(transaction)330
4234 y(mec)n(hanism)e(do)r(es)j(ha)n(v)n(e)g(some)f(similarit)n(y)21
b(to)28 b(this)f(w)n(ork.)455 4334 y(The)37 b(exp)r(erimen)n(ts)e
(describ)r(ed)h(here)h(attempt)g(to)h(exploit)d(parallelism)c(in)37
b(a)g(NO)n(W)g(of)330 4433 y(mo)r(dest)32 b(scale)e(to)j(p)r(erform)e
(large)f(scale)h(computations)f(in)i(a)g(fault-toleran)n(t)d(w)n(a)n(y)
j(without)330 4533 y(altering)25 b(op)r(erating)g(system)i(or)f
(language.)330 4807 y Fh(3)135 b(Implemen)l(tation)330
5006 y Fe(3.1)112 b(F)-9 b(ault)38 b(T)-9 b(olerance)330
5159 y Fg(It)24 b(is)e(assumed)g(that)i(a)f(w)n(orkstation)e(fails)g(b)
n(y)i(crashing)e(and)j(that)g(then)g(an)n(y)e(data)h(in)g(v)n(olatile)
330 5259 y(storage)31 b(is)g(lost,)i(but)g(that)g(held)f(on)h(disk)e
(remains)f(una\013ected.)52 b(It)34 b(is)d(also)g(assumed)g(that)330
5358 y(the)d(net)n(w)n(ork)e(do)r(es)h(not)h(partition.)455
5458 y(A)n(tomic)20 b(actions)h(op)r(erating)g(on)h(p)r(ersisten)n(t)f
(state)i(pro)n(vide)d(a)i(con)n(v)n(enien)n(t)f(framew)n(ork)f(for)330
5558 y(in)n(tro)r(ducing)j(fault-tolerance)f([10)o(])k(through)f
(ensuring)f(de\014ned)i(concurren)n(t)e(b)r(eha)n(viour)f(and)1809
5919 y(2)p eop
%%Page: 3 3
3 2 bop 330 390 a Fg(fault-tolerance.)32 b(A)n(tomic)22
b(actions)g(ha)n(v)n(e)g(the)i(w)n(ell)e(kno)n(wn)g(prop)r(erties)g(of)
i(\(1\))f(serializabili)o(t)n(y)-7 b(,)330 490 y(\(2\))28
b(failure)d(atomicit)n(y)-7 b(,)24 b(and)k(\(3\))f(p)r(ermanence)f(of)i
(e\013ect.)455 589 y(A)36 b(con)n(v)n(enien)n(t)f(mo)r(del)g(is)g(for)h
(this)g(state)g(to)h(b)r(e)g(encapsulated)e(in)h(the)h(instance)e(v)-5
b(ari-)330 689 y(ables)30 b(of)i(p)r(ersisten)n(t)f(ob)5
b(jects)32 b(and)g(accessed)e(through)i(mem)n(b)r(er)e(functions.)49
b(Within)31 b(these)330 789 y(functions)j(the)g(programmer)c(places)j
(lo)r(c)n(k)f(requests,)j(e.g.)57 b(read)33 b(or)g(write)g(to)i(suit)e
(the)i(se-)330 888 y(man)n(tics)27 b(of)j(the)g(op)r(eration,)f(and)h
(t)n(ypically)c(surrounds)i(the)j(co)r(de)e(within)g(the)h(function)f
(b)n(y)330 988 y(an)d(atomic)d(action,)i(starting)f(with)i
Fd(b)l(e)l(gin)g Fg(and)g(ending)f(with)g Fd(c)l(ommit)h
Fg(or)g Fd(ab)l(ort)p Fg(.)36 b(Op)r(erations)330 1088
y(th)n(us)e(enclosed)e(whic)n(h)g(can)i(include)e(calls)f(on)i(other)g
(atomic)f(ob)5 b(jects)33 b(are)g(then)h(p)r(erceiv)n(ed)330
1187 y(as)27 b(a)h(single)e(atomic)f(op)r(eration.)37
b(The)28 b(infrastructure)e(manages)g(the)i(required)f(access)f(from)
330 1287 y(and/or)e(to)i(disk)f(based)h(state.)36 b(Suc)n(h)26
b(ob)5 b(jects)25 b(ma)n(y)g(b)r(e)h(distributed)e(on)i(separate)f(mac)
n(hines,)330 1386 y(e.g.)49 b(for)31 b(p)r(erformance,)g(and)h
(replicated)d(to)j(increase)d(a)n(v)-5 b(ailabilit)n(y)e(.)43
b(The)32 b(applications)c(are)330 1486 y(implemen)n(ted)19
b(using)h(the)i(Arjuna)g(to)r(ol)f(kit)g([16)o(],)i(an)f(ob)5
b(ject-orien)n(ted)20 b(programming)c(system)330 1586
y(that)28 b(implemen)n(ts)c(in)j(C++)f(this)h(ob)5 b(ject)28
b(and)f(action)f(mo)r(del.)455 1685 y(The)h(follo)n(wing)d(enhancemen)n
(ts)i(add)h(fault-tolerance)e(to)i(a)g(bag)g(of)h(tasks)f(application.)
431 1868 y(1.)42 b(The)32 b(sla)n(v)n(e)e(b)r(egins)h(an)i(atomic)d
(action)h(b)r(efore)h(fetc)n(hing)f(a)h(task)g(from)f(the)i(bag,)g(and)
538 1968 y(commits)d(the)j(action)f(after)h(writing)d(the)k(corresp)r
(onding)c(result.)52 b(If)34 b(the)g(sla)n(v)n(e)c(fails)538
2067 y(the)25 b(action)e(ab)r(orts,)i(all)d(w)n(ork)h(p)r(ertaining)g
(to)i(the)g(curren)n(t)f(task)g(is)g(reco)n(v)n(ered)e(and)j(the)538
2167 y(task)i(itself)f(b)r(ecomes)g(a)n(v)-5 b(ailable)23
b(again)j(in)h(the)g(bag.)431 2333 y(2.)42 b(The)21 b(shared)f(ob)5
b(jects)20 b(are)g(replicated)f(on)i(at)g(least)e Fc(k)8
b Fg(+)d(1)21 b(mac)n(hines,)f(so)h(that)g(the)g(failure)538
2433 y(of)27 b(up)h(to)g Fc(k)i Fg(of)e(these)f(mac)n(hines)e(ma)n(y)h
(b)r(e)i(tolerated.)431 2599 y(3.)42 b(A)c(computation)d(ob)5
b(ject)38 b(con)n(tains)e(a)h(description)e(of)j(the)g(computation)e
(and)i(data)538 2698 y(ob)5 b(jects)23 b(and)g(the)h(computation's)d
(completion)f(status.)36 b(This)22 b(ob)5 b(ject)24 b(ma)n(y)e(b)r(e)i
(queried)538 2798 y(at)e(an)n(y)g(time)f(to)i(determine)d(the)k(status)
e(of)h(the)g(computation)d(and)j(ma)n(y)e(b)r(e)i(replicated)538
2897 y(for)29 b(a)n(v)-5 b(ailabilit)n(y)e(.)38 b(It)31
b(is)e(a)h(con)n(v)n(enien)n(t)e(in)n(terface)g(for)i(a)f(pro)r(cess)g
(to)h(b)r(e)h(started)f(on)f(an)538 2997 y(arbitrary)24
b(mac)n(hine)h(to)j(join)e(in)h(an)h(ongoing)d(computation.)455
3180 y(Arjuna)e(requires)e(an)j(underlying)d(RPC)i(to)g(implemen)n(t)d
(distribution)h(and)j(ob)5 b(ject)23 b(serv)n(er)330
3279 y(pro)r(cess)f(managemen)n(t;)f(accessing)f(these)j(services)e
(through)h(certain)f(in)n(terface)g(classes.)33 b(The)330
3379 y(RPC)38 b(implemen)n(tation)c(emplo)n(y)n(ed)h(here)k(supp)r
(orts)f(optional)d(use)k(of)f(the)h(TCP)f(proto)r(col)330
3479 y(with)28 b(connection)f(establishmen)n(t)f(on)i(a)g(p)r(er-call)e
(basis.)38 b(Some)28 b(optimization)c(of)29 b(this)e(RPC)330
3578 y(mec)n(hanism)21 b(has)k(b)r(een)g(p)r(erformed)e(to)i(exploit)e
(homogeneit)n(y)f(of)i(mac)n(hines.)34 b(The)25 b(RPC)f(also)330
3678 y(supp)r(orts)36 b(reuse)g(of)g(an)g(existing)e(serv)n(er)g(pro)r
(cess.)62 b(This)36 b(facilit)n(y)d(is)i(exploited)g(in)g(service)330
3778 y(of)j(the)h(main)d(shared)h(data)h(ob)5 b(jects)37
b(in)h(order)f(to)h(prev)n(en)n(t)f(excessiv)n(e)f(con)n(ten)n(tion)g
(in)i(the)330 3877 y(shared)19 b(comm)n(unications)c(medium;)20
b(the)g(common)d(serv)n(er)h(is)h(single)e(threaded)i(and)h(therefore)
330 3977 y(serializes)j(all)i(sla)n(v)n(e)g(requests.)455
4076 y(In)35 b(eac)n(h)f(application,)f(the)i(main)e(op)r(erands)h(are)
g(managed)f(as)h(collections)d(of)k(smaller)330 4176
y(ob)5 b(jects.)51 b(Eac)n(h)32 b(task)g(en)n(tails)e(computation)g(of)
j(some)e(part)h(of)h(the)g(result,)f(whic)n(h)g(ma)n(y)f(b)r(e)330
4276 y(one)c(or)g(more)f(of)h(suc)n(h)h(ob)5 b(jects.)455
4375 y(A)n(t)31 b(the)g(start)f(of)h(the)g(computation,)f(the)h(shared)
f(ob)5 b(jects)30 b(are)g(installed)e(in)i(the)h(ob)5
b(ject)330 4475 y(rep)r(ository)-7 b(.)65 b(In)38 b(the)h
(fault-toleran)n(t)c(v)n(ersion,)j(a)f(fault-toleran)n(t)e(bag)i(of)h
(tasks)f(is)g(created)330 4575 y(and)29 b(all)e(task)h(descriptions)e
(stored)i(in)h(it.)40 b(Then)29 b(the)h(c)n(hosen)e(n)n(um)n(b)r(er)g
(of)h(sla)n(v)n(es)d(is)i(created)330 4674 y(on)k(separate)g(w)n
(orkstations.)49 b(In)33 b(the)g(non)g(fault-toleran)n(t)d(implemen)n
(tation,)f(eac)n(h)j(sla)n(v)n(e)e(is)330 4774 y(informed)g(of)j(a)f
(unique)g(allo)r(cation)c(of)k(tasks)g(to)g(p)r(erform.)50
b(In)33 b(these)g(initial)28 b(exp)r(erimen)n(ts,)330
4873 y(a)39 b(master)f(pro)r(cess)h(is)f(emplo)n(y)n(ed)f(to)j(p)r
(erform)e(these)i(functions)f(and)g(then)h(w)n(ait)f(for)g(the)330
4973 y(completion)23 b(of)k(the)g(sla)n(v)n(es)d(b)r(efore)j(p)r
(erforming)c(an)n(y)j(\014nal)g(pro)r(cessing)e(to)j(the)g(output,)g
(suc)n(h)330 5073 y(as)35 b(con)n(v)n(erting)e(to)i(a)g(desired)f
(\014le)h(format,)h(and)f(\014nally)f(rep)r(orting)f(on)j(the)g
(elapsed)e(time.)330 5172 y(The)27 b(master)e(tak)n(es)i(no)f(activ)n
(e)g(part)g(during)g(the)h(main)e(part)i(of)g(the)g(application,)d(so)i
(a)h(shell)330 5272 y(script)33 b(replacemen)n(t)e(is)i(quite)g
(feasible.)54 b(Also)33 b(at)h(this)f(time)g(the)h(shared)f(ob)5
b(jects)34 b(are)f(not)330 5372 y(replicated.)455 5471
y(The)27 b(fault-toleran)n(t)d(bag)i(of)h(tasks)g(is)f(implemen)n(ted)e
(as)i(a)h(reco)n(v)n(erable)c(queue)k([6])g(whic)n(h)330
5571 y(relaxes)i(the)j(usual)d(FIF)n(O)j(ordering)c(to)j(suit)g(its)f
(use)i(in)e(a)h(transactional)d(en)n(vironmen)n(t.)45
b(If)330 5670 y(an)33 b(elemen)n(t)e(is)h(dequeued)h(within)e(a)i
(transaction,)f(then)h(it)g(is)e(write-lo)r(c)n(k)n(ed)f(immediately)-7
b(,)1809 5919 y(3)p eop
%%Page: 4 4
4 3 bop 330 390 a Fg(but)36 b(only)e(actually)f(dequeued)j(at)f(the)h
(time)e(the)i(transaction)d(commits.)58 b(Similar)31
b(use)k(of)330 490 y(reco)n(v)n(erable)22 b(queues)k(in)f(async)n
(hronous)f(transaction)g(pro)r(cessing)f(is)i(describ)r(ed)g(in)13
b([10)o(].)37 b(The)330 589 y Fd(de)l(queue)c Fg(op)r(eration)d
(returns)i(a)g(status)h(whic)n(h)e(allo)n(ws)e(the)k(caller)d(to)i
(distinguish)e(b)r(et)n(w)n(een)330 689 y(the)i(situation)d(where)h
(the)i(queue)f(is)f(empt)n(y)g(and)h(that)h(where)e(en)n(tries)g
(remain)e(but)k(are)e(all)330 789 y(lo)r(c)n(k)n(ed)c(b)n(y)h(other)g
(users.)330 1021 y Fe(3.2)112 b(Applications)330 1174
y Fg(Three)39 b(applications)c(are)k(implemen)n(ted.)69
b(The)39 b(\014rst)h(is)e(a)h(p)r(ort)g(of)h(a)f(publicly)d(a)n(v)-5
b(ailable)330 1274 y(ra)n(y)22 b(tracing)g(pac)n(k)-5
b(age,)22 b Fd(r)l(ayshade)k Fg([13)o(].)36 b(Input)24
b(data)f(comprises)d(only)i(scene)h(description)e(and)330
1374 y(output)h(is)e(a)g(t)n(w)n(o)h(dimensional)16 b(arra)n(y)j(of)i
(red-green-blue)d(pixel)h(v)-5 b(alues.)33 b(A)22 b(task)e(is)g
(de\014ned)i(as)330 1473 y(computation)g(of)i(a)g(n)n(um)n(b)r(er)f(of)
i(ro)n(ws)d(of)j(the)f(output)h(arra)n(y)-7 b(.)34 b(T)-7
b(o)24 b(displa)n(y)d(the)k(output)g(image,)330 1573
y(it)37 b(is)g(con)n(v)n(enien)n(t)e(to)j(cop)n(y)e(it)h(to)h(the)g
(\014le)f(format)f(used)h(in)g(the)h(original)33 b(pac)n(k)-5
b(age,)39 b(Utah)330 1672 y(Raster)24 b(RLE)g(format.)34
b(In)25 b(this)e(implemen)n(tation,)e(this)i(op)r(eration)g(is)g(p)r
(erformed)g(serially)d(b)n(y)330 1772 y(the)25 b(master)d(pro)r(cess.)
34 b(A)25 b(simple)c(scene)j(pro)n(vided)e(as)i(an)f(example)f(in)i
(the)g(pac)n(k)-5 b(age)23 b(is)g(traced)330 1872 y(for)h(the)g(purp)r
(oses)f(of)h(the)h(test.)36 b(F)-7 b(or)23 b(comparison,)e(the)k
(unaltered)d(pac)n(k)-5 b(age)23 b(is)g(built)f(and)i(run)330
1971 y(as)j(a)g(sequen)n(tial)e(program)g(on)i(one)g(of)h(the)g(w)n
(orkstations.)455 2071 y(The)i(remaining)c(applications)g(are)j(dense)h
(matrix)e(computations,)g(matrix)f(m)n(ultiplica-)330
2171 y(tion)e(and)h(Cholesky)e(factorization.)33 b(A)27
b(preliminary)21 b(description)j(of)i(the)g(former)f(w)n(as)g(giv)n(en)
330 2270 y(in)31 b([19].)50 b(In)33 b(linear)c(algebra)h(computations)f
(it)j(is)f(common)f(to)i(emplo)n(y)d(blo)r(c)n(k)i(structuring)330
2370 y(to)g(b)r(ene\014t)h(from)e(increased)f(lo)r(calit)n(y)f([9)o(].)
49 b(In)31 b(the)h(implemen)n(tation)26 b(of)31 b(b)r(oth)h(matrix)d
(com-)330 2470 y(putations)i(here,)h(matrices)d(are)i(comp)r(osed)f(of)
i(square)e(blo)r(c)n(ks)g(and)i(a)f(task)g(de\014ned)i(as)e(the)330
2569 y(computation)25 b(of)j(a)f(single)e(blo)r(c)n(k)h(of)i(the)g
(result.)455 2669 y(In)37 b(the)h(case)f(of)g(matrix)e(m)n
(ultiplication,)f(a)j(task)g(en)n(tails)e(a)i(blo)r(c)n(k)f(dot)i(pro)r
(duct)f(of)g(a)330 2768 y(ro)n(w)e(of)i(blo)r(c)n(ks)e(in)h(the)h
(\014rst)g(and)f(column)f(of)i(blo)r(c)n(ks)e(in)h(the)h(second)f(op)r
(erand)g(matrices.)330 2868 y(The)25 b(implemen)n(tation)19
b(of)25 b(Cholesky)d(factorization)f(emplo)n(ys)h(the)j(P)n(o)r
(ol-of-T)-7 b(asks)20 b(algorithm)330 2968 y(of)e([9],)c
Fb(x)p Fg(6.3.8.)32 b(The)19 b(required)d(in)n(ter)h(task)h(co)r
(ordination)d(is)i(ultimately)e(implemen)n(ted)g(through)330
3067 y(a)23 b(t)n(w)n(o)f(dimensional)d(arra)n(y)i(of)i(\015ags)g(whic)
n(h)f(indicate)f(whether)i(corresp)r(onding)e(blo)r(c)n(ks)g(in)i(the)
330 3167 y(output)f(matrix)c(ha)n(v)n(e)i(b)r(een)h(written)f(or)h
(not.)34 b(Concurren)n(t)20 b(op)r(erations)f(on)h(the)i(\015ags)e(are)
g(con-)330 3267 y(trolled)k(through)h(lo)r(c)n(ks)f(obtained)h(within)f
(the)j(scop)r(e)e(of)h(atomic)e(actions)g(and)i(are)f(therefore)330
3366 y(reco)n(v)n(erable.)33 b(A)28 b(fuller)e(description)f(app)r
(ears)h(in)h([18)o(].)330 3641 y Fh(4)135 b(P)l(erformance)330
3823 y Fg(Eac)n(h)38 b(exp)r(erimen)n(t)e(is)i(conducted)h(during)e
(o\013)i(p)r(eak)f(time)g(in)g(a)g(cluster)f(of)i(HP9000/710)330
3922 y(\(HP710\))j(mac)n(hines)d(eac)n(h)j(with)g(32)13
b(Mb)n(yte)43 b(memory)c(and)k(64)13 b(Kb)n(yte)42 b(cac)n(he,)j
(connected)330 4022 y(b)n(y)35 b(10)13 b(Mbit/s)34 b(Ethernet.)59
b(A)36 b(small)c(n)n(um)n(b)r(er)i(of)h(HP9000/730)c(\(HP730\))j(mac)n
(hines)f(with)330 4121 y(64)13 b(Mb)n(yte)33 b(memory)e(and)i(256)12
b(Kb)n(yte)33 b(cac)n(he)f(ha)n(v)n(e)g(sizeable)f(temp)r(orary)g(disk)
h(space)h(space)330 4221 y(a)n(v)-5 b(ailable.)40 b(F)-7
b(or)30 b(the)g(matrix)e(computations)g(a)h(cluster)g(con)n(taining)e
(a)j(HP730)e(is)h(used,)i(and)330 4321 y(the)g(shared)f(ob)5
b(jects)31 b(lo)r(cated)e(on)i(it,)g(but)h(HP710)d(mac)n(hines)f(are)i
(used)h(otherwise.)45 b(In)31 b(this)330 4420 y(w)n(a)n(y)26
b(computations)f(with)j(data)f(requiremen)n(ts)d(of)k(ab)r(out)f(200)13
b(Mb)n(yte)27 b(are)g(p)r(erformed.)330 4653 y Fe(4.1)112
b(Cost)37 b(of)h(Queue)g(Access)330 4806 y Fg(An)27 b(indication)22
b(of)k(the)h(failure)c(free)j(o)n(v)n(erhead)e(cost)i(ma)n(y)e(b)r(e)j
(obtained)d(b)n(y)i(comparing)d(fault)330 4906 y(toleran)n(t)37
b(and)i(non)f(fault)h(toleran)n(t)d(sequen)n(tial)h(computations)f
(running)i(within)f(a)i(single)330 5005 y(w)n(orkstation.)44
b(This)30 b(is)g(done)h(for)f(matrix)f(m)n(ultiplication)c(b)n(y)30
b(lo)r(cating)f(a)h(single)f(sla)n(v)n(e)f(and)330 5105
y(the)35 b(data)e(ob)5 b(jects)34 b(on)g(the)h(same)d(host,)k(a)e
(HP730)e(mac)n(hine.)55 b(The)34 b(measured)e(results)h(are)330
5204 y(sho)n(wn)27 b(in)g(T)-7 b(ab.)27 b(1)g(for)g(a)h(range)e(of)h
(task)g(sizes.)455 5304 y(The)g(fault-tolerance)e(costs)h(represen)n(t)
h(the)h(follo)n(wing)23 b(op)r(erations:)455 5470 y Fb(\017)41
b Fg(The)c(cost)f(of)h(creating)e(the)i(queue)g(and)f(enqueueing)g(one)
g(en)n(try)h(p)r(er)f(blo)r(c)n(k)g(of)h(the)538 5570
y(output)28 b(matrix)d(within)h(a)h(surrounding)e(action,)h(and)i
(committing)c(that)k(action.)1809 5919 y(4)p eop
%%Page: 5 5
5 4 bop 330 448 a Fg(T)-7 b(able)44 b(1:)71 b(Cost)44
b(of)h(emplo)n(ying)c(queue)k(in)f(sequen)n(tial)e(m)n(ultiplication)d
(of)45 b(3000)e(square)330 547 y(matrices.)34 b(The)28
b(times)e(in)g(columns)g(3)h(and)g(4)h(are)e(a)n(v)n(erages)f(rounded)i
(to)g(in)n(teger)f(v)-5 b(alues.)p 330 659 3035 4 v 1300
758 a(Execution)26 b(time)501 b(F)-7 b(ault)27 b(tolerance)e(Cost)372
875 y(Items)433 974 y(of)378 1074 y(w)n(ork)719 875 y(Blo)r(c)n(k)717
974 y(width)644 1074 y(\(elemen)n(ts\))1258 875 y(F)-7
b(ault-)1225 974 y(toleran)n(t)1214 1074 y(\(seconds\))1682
875 y(Non)1659 974 y(fault-)1615 1074 y(toleran)n(t)1604
1173 y(\(seconds\))2154 875 y(During)2175 974 y(queue)2127
1074 y(Creation)2127 1173 y(\(seconds\))2576 875 y(After)2565
974 y(queue)2525 1074 y(creation)2517 1173 y(\(seconds\))3086
875 y(T)g(otal)3096 974 y(as)27 b(\045)3049 1074 y(of)g(total)3101
1173 y(time)p 330 1207 V 459 1306 a(9)237 b(1000)378
b(2201)222 b(2152)385 b(6.5)263 b(41.5)382 b(2.2)424
1406 y(16)250 b(750)400 b(2254)222 b(2224)364 b(10.3)242
b(20.3)382 b(1.4)424 1506 y(25)250 b(600)400 b(2215)222
b(2171)397 b(15)306 b(29)448 b(2)424 1605 y(36)250 b(500)400
b(2313)222 b(2252)397 b(22)274 b(38.3)382 b(2.7)404 1705
y(144)228 b(250)400 b(3068)222 b(2917)364 b(93.8)242
b(58.1)382 b(5.2)404 1804 y(225)228 b(200)400 b(3579)222
b(3352)376 b(154)253 b(73.5)382 b(6.8)p 330 1854 V 455
2193 a Fb(\017)41 b Fg(The)20 b(cost)f(incurred)f(b)n(y)i(the)g(sla)n
(v)n(e)e(of)i(binding)e(to)i(the)g(queue)g(ob)5 b(ject,)21
b(essen)n(tially)16 b(serv)n(er)538 2292 y(creation,)25
b(and)j(then)g(dequeuing)e(an)h(en)n(try)g(describing)e(eac)n(h)i
(piece)f(of)i(w)n(ork.)455 2456 y(The)22 b(queue)g(en)n(tries)f(are)h
(simply)d(small)g(job)k(descriptions)c(and)j(their)g(size)f(is)g(indep)
r(enden)n(t)330 2556 y(of)27 b(the)h(data)f(size)f(so)h(the)h(cost)f
(of)g(using)f(the)i(queue)f(should)f(b)r(e)i(dep)r(enden)n(t)g(on)g
(the)f(n)n(um)n(b)r(er)330 2656 y(of)k(tasks,)h(rather)e(than)i(data)f
(size.)47 b(Therefore)30 b(p)r(ercen)n(tage)g(o)n(v)n(erheads)f(should)
i(reduce)g(for)330 2755 y(larger)h(scale)i(computations,)h(but)h(ev)n
(en)f(for)g(the)g(size)f(of)i(computation)d(p)r(erformed,)j(fault)330
2855 y(tolerance)25 b(do)r(es)j(not)f(app)r(ear)g(to)g(b)r(e)h(the)g
(signi\014can)n(t)d(cost.)455 2954 y(The)32 b(queue)g(is)f(implemen)n
(ted)e(as)j(a)g(collection)d(of)j(separately)e(lo)r(c)n(k)-5
b(able)30 b(p)r(ersisten)n(t)h(ob-)330 3054 y(jects,)j(and)e(some)f
(breakdo)n(wn)f(of)j(the)f(costs)g(asso)r(ciated)e(with)i(the)h(use)f
(of)g(atomic)e(actions)330 3154 y(on)d(individual)d(p)r(ersisten)n(t)i
(ob)5 b(jects)28 b(is)e(giv)n(en)g(in)h([16)o(].)330
3386 y Fe(4.2)112 b(P)m(arallel)38 b(Execution)330 3539
y Fg(The)28 b(parallel)23 b(p)r(erformance)j(of)h(the)h(applications)c
(is)i(sho)n(wn)h(in)g(Fig.)13 b(1.)368 4704 y @beginspecial
0 @llx 0 @lly 351 @urx 126 @ury 3510 @rwi @setspecial
%%BeginDocument: graph/dqnqgraph.eps
/$F2psDict 6400 dict def 
$F2psDict begin
$F2psDict /mtrx matrix put
/l {lineto} bind def
/m {moveto} bind def
/s {stroke} bind def
/n {newpath} bind def
/gs {gsave} bind def
/gr {grestore} bind def
/clp {closepath} bind def
/graycol {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
4 -2 roll mul setrgbcolor} bind def
/col-1 {} def
/col0 {0 0 0 setrgbcolor} bind def
/col1 {0 0 1 setrgbcolor} bind def
/col2 {0 1 0 setrgbcolor} bind def
/col3 {0 1 1 setrgbcolor} bind def
/col4 {1 0 0 setrgbcolor} bind def
/col5 {1 0 1 setrgbcolor} bind def
/col6 {1 1 0 setrgbcolor} bind def
/col7 {1 1 1 setrgbcolor} bind def
	end
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
0 setlinecap 0 setlinejoin
-4 4 translate
0.0 126.0 translate 0.900 -0.900 scale
0.500 setlinewidth
% Polyline
%
% Begin Imported EPS File: dqnqrayshade.eps
%
gs
4 4 translate
1.111111 -1.111111 scale
0 -126 translate
-50 -50 translate
%
/gnudict 120 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 Box stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
LTb
791 420 M
63 0 V
1666 0 R
-63 0 V
707 420 M
(0) Rshow
791 723 M
31 0 V
1698 0 R
-31 0 V
791 1027 M
63 0 V
1666 0 R
-63 0 V
-1750 0 R
(500) Rshow
791 1330 M
31 0 V
1698 0 R
-31 0 V
791 1633 M
63 0 V
1666 0 R
-63 0 V
-1750 0 R
(1000) Rshow
791 1937 M
31 0 V
1698 0 R
-31 0 V
791 2240 M
63 0 V
1666 0 R
-63 0 V
-1750 0 R
(1500) Rshow
983 420 M
0 63 V
0 1757 R
0 -63 V
983 280 M
(2) Cshow
1367 420 M
0 63 V
0 1757 R
0 -63 V
0 -1897 R
(4) Cshow
1752 420 M
0 63 V
0 1757 R
0 -63 V
0 -1897 R
(6) Cshow
2136 420 M
0 63 V
0 1757 R
0 -63 V
0 -1897 R
(8) Cshow
2520 420 M
0 63 V
0 1757 R
0 -63 V
0 -1897 R
(10) Cshow
791 420 M
1729 0 V
0 1820 V
-1729 0 V
791 420 L
140 1330 M
currentpoint gsave translate 90 rotate 0 0 M
(Elapsed time \(seconds\)) Cshow
grestore
1655 140 M
(Number of slaves) Cshow
1655 2380 M
(\(a\) Ray trace) Cshow
2328 1087 M
(2) Lshow
2328 541 M
(8) Lshow
1175 1876 M
(Sequential) Lshow
LT2
791 1791 M
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
18 0 V
17 0 V
LT0
791 2232 M
983 1482 L
192 -235 V
192 -101 V
192 -104 V
193 -24 V
192 -11 V
192 8 V
192 -9 V
192 18 V
LT1
791 2007 M
983 1280 L
192 -239 V
1367 925 L
192 -71 V
193 -60 V
192 -33 V
192 -28 V
192 -17 V
192 -16 V
LT0
791 1910 M
983 1214 L
1175 979 L
1367 864 L
192 -76 V
193 -46 V
192 -28 V
192 -25 V
192 -13 V
192 -8 V
LT1
791 1869 M
983 1167 L
1175 934 L
1367 819 L
192 -69 V
193 -46 V
192 -27 V
192 -31 V
192 -15 V
192 -14 V
stroke
grestore
end

gr
%
% End Imported EPS File: dqnqrayshade.eps
%
 clp gs col-1 s gr
% Polyline
%
% Begin Imported EPS File: dqnq3000.eps
%
gs
134 4 translate
1.111111 -1.111111 scale
0 -126 translate
-50 -50 translate
%
/gnudict 120 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 Box stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
LTb
651 420 M
63 0 V
1575 0 R
-63 0 V
567 420 M
(0) Rshow
651 602 M
31 0 V
1607 0 R
-31 0 V
651 784 M
63 0 V
1575 0 R
-63 0 V
567 784 M
(1000) Rshow
651 966 M
31 0 V
1607 0 R
-31 0 V
651 1148 M
63 0 V
1575 0 R
-63 0 V
-1659 0 R
(2000) Rshow
651 1330 M
31 0 V
1607 0 R
-31 0 V
651 1512 M
63 0 V
1575 0 R
-63 0 V
-1659 0 R
(3000) Rshow
651 1694 M
31 0 V
1607 0 R
-31 0 V
651 1876 M
63 0 V
1575 0 R
-63 0 V
-1659 0 R
(4000) Rshow
651 2058 M
31 0 V
1607 0 R
-31 0 V
651 2240 M
63 0 V
1575 0 R
-63 0 V
-1659 0 R
(5000) Rshow
885 420 M
0 63 V
0 1757 R
0 -63 V
885 280 M
(2) Cshow
1353 420 M
0 63 V
0 1757 R
0 -63 V
0 -1897 R
(4) Cshow
1821 420 M
0 63 V
0 1757 R
0 -63 V
0 -1897 R
(6) Cshow
2289 420 M
0 63 V
0 1757 R
0 -63 V
0 -1897 R
(8) Cshow
651 420 M
1638 0 V
0 1820 V
-1638 0 V
651 420 L
1470 140 M
(Number of slaves) Cshow
1470 2380 M
(\(b\) Matrix multiplication) Cshow
1821 1476 M
(300) Lshow
1821 820 M
(750) Lshow
LT0
651 2116 M
885 1406 L
234 -42 V
234 9 V
234 32 V
234 -6 V
234 -53 V
234 10 V
LT1
651 2107 M
885 1375 L
234 -19 V
234 -30 V
234 132 V
234 -70 V
234 -18 V
234 -27 V
LT0
651 1603 M
885 1142 L
1119 997 L
234 -85 V
234 25 V
234 -25 V
234 21 V
234 -3 V
LT1
651 1606 M
885 1114 L
234 -112 V
234 -74 V
234 22 V
234 8 V
234 36 V
234 -39 V
stroke
grestore
end

gr
%
% End Imported EPS File: dqnq3000.eps
%
 clp gs col-1 s gr
% Polyline
%
% Begin Imported EPS File: dqnq4800.eps
%
gs
254 4 translate
1.111111 -1.111111 scale
0 -126 translate
-50 -50 translate
%
/gnudict 120 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 Box stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
LTb
651 420 M
63 0 V
1575 0 R
-63 0 V
567 420 M
(0) Rshow
651 648 M
31 0 V
1607 0 R
-31 0 V
651 875 M
63 0 V
1575 0 R
-63 0 V
567 875 M
(1000) Rshow
651 1103 M
31 0 V
1607 0 R
-31 0 V
651 1330 M
63 0 V
1575 0 R
-63 0 V
-1659 0 R
(2000) Rshow
651 1558 M
31 0 V
1607 0 R
-31 0 V
651 1785 M
63 0 V
1575 0 R
-63 0 V
-1659 0 R
(3000) Rshow
651 2013 M
31 0 V
1607 0 R
-31 0 V
651 2240 M
63 0 V
1575 0 R
-63 0 V
-1659 0 R
(4000) Rshow
885 420 M
0 63 V
0 1757 R
0 -63 V
885 280 M
(2) Cshow
1353 420 M
0 63 V
0 1757 R
0 -63 V
0 -1897 R
(4) Cshow
1821 420 M
0 63 V
0 1757 R
0 -63 V
0 -1897 R
(6) Cshow
2289 420 M
0 63 V
0 1757 R
0 -63 V
0 -1897 R
(8) Cshow
651 420 M
1638 0 V
0 1820 V
-1638 0 V
651 420 L
1470 140 M
(Number of slaves) Cshow
1470 2380 M
(\(c\) Cholesky factorization) Cshow
1821 1376 M
(400) Lshow
1821 1012 M
(800) Lshow
LT0
651 2010 M
885 1459 L
234 -136 V
234 -20 V
234 -18 V
234 3 V
234 -13 V
LT1
651 1970 M
885 1431 L
234 -125 V
234 -32 V
234 -33 V
468 23 V
234 -25 V
LT0
651 1827 M
885 1318 L
234 -109 V
234 -58 V
234 -29 V
234 -11 V
234 6 V
234 16 V
LT1
651 1799 M
885 1296 L
234 -102 V
234 -56 V
234 -16 V
234 -9 V
234 -5 V
234 5 V
stroke
grestore
end

gr
%
% End Imported EPS File: dqnq4800.eps
%
 clp gs col-1 s gr
$F2psEnd
%%EndDocument
 @endspecial 330 4886 a(Figure)23 b(1:)36 b(P)n(erformance)21
b(of)k(parallel)c(applications,)h(comparing)g(fault-toleran)n(t)g
(\(solid)h(line\))330 4986 y(and)k(non)h(fault-toleran)n(t)c(\(dashed)k
(line\))e(v)n(ersions)f(for)i(indicated)f(task)h(sizes.)455
5272 y(In)36 b(the)h(ev)n(en)n(t)g(of)f(sla)n(v)n(e)e(failure)h(and)h
(immediate)d(resumption,)k(or)e(replacemen)n(t)f(b)n(y)i(a)330
5372 y(spare,)h(the)g(failure)c(free)j(execution)f(time)g(is)g
(increased)f(b)n(y)i(a)f(reco)n(v)n(ery)f(time)g(due)j(to)f(the)330
5471 y(loss)28 b(of)j(ab)r(orted)e(w)n(ork.)44 b(This)29
b(reco)n(v)n(ery)f(time)h(is)g(the)i(cost)f(of)g(b)r(et)n(w)n(een)g
(zero)g(and)g(one)g(task)330 5571 y(executions,)f(the)h
Fd(aver)l(age)k(r)l(e)l(c)l(overy)c Fg(b)r(eing)g(half)f(of)h(the)g
(maxim)n(um.)40 b(A)30 b(computation)e(with)330 5670
y(non)37 b(uniform)f(tasks)h(ma)n(y)f(still)f(b)r(e)j(c)n(haracterized)
c(b)n(y)k(a)f(simple)e(a)n(v)n(erage)g(reco)n(v)n(ery)f(cost,)1809
5919 y(5)p eop
%%Page: 6 6
6 5 bop 330 390 a Fg(though)38 b(this)g(ma)n(y)e(b)r(e)j(misleading)33
b(if)38 b(the)h(cost)f(v)-5 b(aries)36 b(v)n(ery)h(considerably)-7
b(.)66 b(If)38 b(data)g(are)330 490 y(cac)n(hed)25 b(at)h(a)g(sla)n(v)n
(e)d(whic)n(h)i(fails,)f(then)i(the)h(sla)n(v)n(e)c(that)j(tak)n(es)f
(o)n(v)n(er)g(the)h(ab)r(orted)f(task)h(incurs)330 589
y(an)36 b(extra)f(cost)h(in)g(cac)n(he)f(misses.)60 b(If)37
b(a)f(sla)n(v)n(e)e(fails)g(and)i(do)r(es)g(not)g(resume)f(and)h(there)
g(is)330 689 y(no)e(spare,)h(then)f(the)h(increase)d(in)h(o)n(v)n
(erall)d(execution)j(time)g(dep)r(ends)i(on)f(the)g(exact)g(p)r(oin)n
(t)330 789 y(of)c(failure,)e(but)i(ma)n(y)e(b)r(e)i(regarded)e(as)i
(comprising)25 b(t)n(w)n(o)k(comp)r(onen)n(ts.)42 b(First,)29
b(there)h(is)f(the)330 888 y(cost)c(of)h(redoing)e(the)i(failed)e(task)
h(and)h(secondly)-7 b(,)25 b(the)h(execution)e(of)i(the)g(remaining)c
(tasks)j(is)330 988 y(slo)n(w)n(ed)g(since)i(there)g(is)g(then)h(one)f
(less)f(sla)n(v)n(e.)455 1088 y(T)-7 b(able)12 b(2)19
b(summarizes)c(the)20 b(p)r(erformance)d(of)j(the)f(parallel)d
(implemen)n(tations,)f(sho)n(wing)j(for)330 1187 y(eac)n(h)k
(application)d(a)k(measure)d(of)j(the)g(p)r(erformance)e(ac)n(hiev)n
(ed)g(and)h(estimate)f(of)i(the)g(a)n(v)n(erage)330 1287
y(reco)n(v)n(ery)i(time.)36 b(The)28 b(table)f(also)f(indicates)f(the)j
(total)f(data:)37 b(input)28 b(\()p Fd(input)p Fg(\),)g(written)f(\()p
Fd(put)p Fg(\))330 1386 y(and)g(read)g(collectiv)n(ely)c(b)n(y)k(sla)n
(v)n(es)e(during)h(the)i(computation)d(\()p Fd(get)p
Fg(\).)330 1648 y(T)-7 b(able)34 b(2:)53 b(F)-7 b(ault-toleran)n(t)33
b(application)f(parallel)f(p)r(erformance)j(summary)-7
b(.)58 b(The)36 b(sp)r(eedup)330 1747 y(sho)n(wn)27 b(for)h(ra)n(y)f
(tracing)f(is)h(absolute,)g(i.e.)37 b(relativ)n(e)25
b(to)j(that)h(of)f(the)g(sequen)n(tial)e(implemen)n(t-)330
1847 y(ation.)p 331 1858 2998 4 v 367 1958 a(Application)16
b(T)-7 b(asks)73 b(T)-7 b(ask)248 b(Data)27 b(access)206
b(Minim)n(umP)n(erformance)52 b(Av)n(erage)1153 2058
y(size)339 b(\(Mb)n(yte\))305 b(time)172 b(\(sp)r(eedup)111
b(reco)n(v)n(ery)1030 2157 y(\(elemen)n(ts\))25 b Fd(input)100
b(get)135 b(put)63 b Fg(\(seconds\))110 b(or)26 b(rate\))115
b(\(seconds\))p 331 2207 V 339 2307 a(Ra)n(y)27 b(T)-7
b(race)339 2406 y(\(512)497 2376 y Fa(2)534 2406 y Fg(\))847
2287 y(256)868 2387 y(64)1098 2287 y(2)5 b Fb(\002)g
Fg(512)1098 2387 y(8)g Fb(\002)g Fg(512)1565 2338 y(small)206
b(6.3)2244 2287 y(483)2244 2387 y(204)2670 2287 y(2)p
Fc(:)p Fg(3)2670 2387 y(5)p Fc(:)p Fg(5)3093 2287 y(1)p
Fc(:)p Fg(5)3093 2387 y(9)p Fc(:)p Fg(6)339 2507 y(Matrix)339
2607 y(Multiplication)339 2707 y(\(3000)539 2677 y Fa(2)575
2707 y Fg(\))847 2559 y(100)868 2659 y(16)1137 2559 y(300)1263
2529 y Fa(2)1137 2659 y Fg(750)1263 2629 y Fa(2)1464
2610 y Fg(144)1689 2559 y(1440)1709 2659 y(576)1975 2610
y(72)2223 2559 y(2545)2223 2659 y(1353)2533 2559 y(21)14
b(M\015op)p Fc(=)p Fg(s)2533 2659 y(40)g(M\015op)p Fc(=)p
Fg(s)3105 2559 y(24)3084 2659 y(102)339 2814 y(Cholesky)339
2913 y(F)-7 b(actorization)339 3013 y(\(4800)539 2983
y Fa(2)575 3013 y Fg(\))868 2865 y(78)868 2965 y(21)1137
2865 y(400)1263 2835 y Fa(2)1137 2965 y Fg(800)1263 2934
y Fa(2)1485 2865 y Fg(99)1464 2965 y(108)1689 2865 y(1198)1709
2965 y(645)1975 2865 y(99)1954 2965 y(108)2223 2865 y(1879)2223
2965 y(1512)2533 2865 y(20)14 b(M\015op)p Fc(=)p Fg(s)2533
2965 y(24)g(M\015op)p Fc(=)p Fg(s)3105 2865 y(23)3105
2965 y(74)p 331 3048 V 455 3310 a(F)-7 b(or)32 b(all)g(three)h(exp)r
(erimen)n(ts)e(it)i(is)g(seen)g(that)h(increasing)c(the)k(task)f(size)f
(impro)n(v)n(es)e(the)330 3410 y(p)r(erformance.)37 b(In)28
b(the)h(matrix)c(computations,)h(the)j(increase)d(in)h(total)g(data)h
(read)g(with)f(de-)330 3509 y(creasing)22 b(blo)r(c)n(k)i(size)f(seems)
h(to)h(b)r(e)g(the)g(o)n(v)n(erwhelming)20 b(e\013ect.)37
b(In)25 b(the)g(ra)n(y)f(tracing)f(example)330 3609 y(little)i(data)i
(is)f(read,)h(but)h(at)f(25)13 b(KByte)26 b(and)i(98)12
b(Kb)n(yte)27 b(the)h(task)f(output)h(is)e(not)h(so)g(large)e(as)330
3708 y(to)i(b)r(e)h(bandwidth)g(limited)c(and)j(so)g(the)h(larger)d
(task)i(is)f(c)n(heap)r(er)h(prop)r(ortionally)-7 b(.)455
3808 y(Noting)28 b(that)i(the)f(data)g(format)f(con)n(v)n(ersion)e(for)
j(ra)n(y)f(tracing)g(men)n(tioned)f(earlier)f(tak)n(es)330
3908 y(ab)r(out)14 b(23)27 b(and)i(13)13 b(seconds)28
b(resp)r(ectiv)n(ely)d(for)k(the)g(task)f(sizes,)12 b(2)28
b(and)14 b(8,)28 b(the)i(p)r(erformance)c(of)330 4007
y(this)h(easy)g(application)c(app)r(ears)k(promising.)455
4107 y(The)40 b(p)r(erformance)f(of)h(the)h(matrix)d(computations)g(is)
h(not)i(exciting,)h(though)e(in)g(the)330 4207 y(one)c(case)g(the)g(p)r
(eak)h(p)r(erformance)d(of)i(the)h(memory)d(based)i(matrix)e(m)n
(ultiplication)c(on)36 b(a)330 4306 y(single)28 b(HP710,)h(measured)g
(at)h(33)13 b(M\015op/s,)30 b(is)f(exceeded.)45 b(Some)29
b(in)n(tuition)f(for)i(the)g(cost)g(of)330 4406 y(the)j(parallel)28
b(computations)i(ma)n(y)h(b)r(e)i(gained)e(b)n(y)h(considering)d(the)k
(cost)f(of)h(accessing)d(the)330 4505 y(data.)40 b(Eac)n(h)28
b(data)g(access)g(en)n(tails)e(b)r(oth)k(a)e(memory)e(to)j(memory)d
(cop)n(y)i(b)r(et)n(w)n(een)h(sla)n(v)n(e)d(and)330 4605
y(serv)n(er)j(mac)n(hine)f(and)i(a)g(lo)r(cal)e(disk,)j(or)e
(\014lesystem)g(cac)n(he)g(access)h(on)g(the)h(serv)n(er)d(mac)n(hine.)
330 4705 y(Some)23 b(p)r(oten)n(tial)g(b)r(ene\014t)i(exists)e(b)r(oth)
i(in)f(pip)r(elining)d(data)j(accesses)e(and)j(in)e(cac)n(hing)g(blo)r
(c)n(ks)330 4804 y(at)37 b(sla)n(v)n(e)e(mac)n(hines)g(but)j(neither)e
(is)g(attempted)h(here.)66 b(F)-7 b(or)36 b(blo)r(c)n(k)g(sizes)g(ab)r
(o)n(v)n(e)12 b(250,)39 b(the)330 4904 y(lo)n(w)34 b(lev)n(el)e
(transfer)j(rates)f(for)h(lo)r(cal)e(memory)f(to)k(remote)d(memory)-7
b(,)35 b(lo)r(cal)e(disk)h(read)g(and)330 5004 y(lo)r(cal)f(disk)h
(write)g(\(new)h(data\))g(are)g(found)g(to)g(b)r(e)h(roughly)d(constan)
n(t)i(at)g(ab)r(out)13 b(1,)h(1.6)34 b(and)330 5103 y(0.2)13
b(Mb)n(yte/s.)67 b(Assuming)36 b(no)h(b)r(ene\014t)i(is)e(gained)f
(from)g(cac)n(hing)g(blo)r(c)n(ks)g(b)r(et)n(w)n(een)i(tasks,)330
5203 y(an)d(estimate)d(for)j(the)g(total)f(time)f(in)n(v)n(olv)n(ed)e
(in)j(transfers)g(for)g(the)i(matrix)c(m)n(ultiplication)330
5302 y(application)37 b(with)j(larger)e(blo)r(c)n(k)h(size)g(is)g(1368)
12 b(seconds.)75 b(This)39 b(w)n(ould)h(then)h(b)r(e)g(a)f(lo)n(w)n(er)
330 5402 y(b)r(ound)c(on)f(the)g(parallel)c(computation)i(time)h(and)h
(since)f(the)i(implemen)n(tation)30 b(describ)r(ed)330
5502 y(almost)d(ac)n(hiev)n(es)g(this)i(minim)n(um)d(time)i(it)h(seems)
g(p)r(ossible)e(that)j(bandwidth)f(limitation)c(is)330
5601 y(b)r(eing)j(observ)n(ed.)41 b(F)-7 b(uller)27 b(analysis)f([18)o
(])j(\014nds)h(that)f(the)h(b)r(ene\014t)g(gained)d(in)i(this)f
(particular)1809 5919 y(6)p eop
%%Page: 7 7
7 6 bop 330 390 a Fg(situation)20 b(from)h(in)n(v)n(olun)n(tary)e
(\014lesystem)h(cac)n(hing)g(is)h(lik)n(ely)e(to)j(b)r(e)h(small,)d
(strengthening)h(the)330 490 y(case)27 b(for)g(bandwidth)g(limitation.)
330 764 y Fh(5)135 b(Summary)330 946 y Fg(The)23 b(w)n(ork)e(describ)r
(ed)g(here)i(considers)d(the)j(implemen)n(tation)18 b(of)k(certain)f
(large)g(scale)f(compu-)330 1046 y(tations)k(eac)n(h)i(structured)f(as)
g(a)h(bag)f(of)h(tasks)f(o)n(v)n(er)f(a)h(NO)n(W)h(emplo)n(ying)c(P)n
(ersisten)n(t)i(ob)5 b(jects)330 1145 y(and)39 b(atomic)d(actions)h(to)
i(supp)r(ort)g(fault-tolerance.)67 b(The)39 b(\014rst)g(application)c
(is)j(a)h(public)330 1245 y(domain)33 b(ra)n(y)g(tracing)g(pac)n(k)-5
b(age)33 b(with)i(mo)r(derate)e(demands)h(for)g(space.)59
b(Exp)r(erimen)n(t)32 b(sug-)330 1345 y(gests)24 b(that)g(resp)r
(ectable)f(p)r(erformance)f(can)i(b)r(e)h(ac)n(hiev)n(ed)d(if)i(a)g
(suitably)e(large)g(gran)n(ularit)n(y)e(is)330 1444 y(c)n(hosen.)36
b(The)27 b(other)f(t)n(w)n(o)g(applications)d(are)j(b)r(oth)h(dense)g
(matrix)d(computations)g(where)j(the)330 1544 y(space)f(requiremen)n(t)
e(can)i(exceed)g(a)n(v)-5 b(ailable)23 b(memory)-7 b(.)33
b(In)27 b(suc)n(h)g(a)f(case)g(a)g(mo)r(del)f(whic)n(h)g(em-)330
1644 y(plo)n(ys)j(a)h(relativ)n(ely)c(small)i(n)n(um)n(b)r(er)h(of)i
(mac)n(hines)d(sharing)g(large)g(secondary)h(storage)g(space)330
1743 y(has)i(some)g(attraction.)44 b(F)-7 b(or)31 b(this)f(t)n(yp)r(e)h
(of)g(execution,)f(a)g(realistic)d(all-b)r(e-it)h(protot)n(yp)r(e)i
(im-)330 1843 y(plemen)n(tation)i(has)i(sho)n(wn)h(that)g(the)h(cost)e
(of)h(in)n(tro)r(ducing)e(fault-tolerance)f(is)i(small)d(and)330
1942 y(p)r(erformance)17 b(gain)h(through)h(parallelism)13
b(is)19 b(limited)d(essen)n(tially)f(b)n(y)k(hardw)n(are)f(bandwidths.)
455 2042 y(The)34 b(system)f(describ)r(ed)g(here)g(pro)n(vides)f(a)i
(practical)d(solution)g(to)j(the)h(question)e(as)g(to)330
2142 y(ho)n(w)20 b(to)g(exploit)f(commonly)e(a)n(v)-5
b(ailable)16 b(clusters)j(of)i(w)n(orkstations)c(for)j(running)g
(compute)f(and)330 2241 y(data)27 b(in)n(tensiv)n(e)e(programs)f(b)n(y)
j(pro)n(viding)e(m)n(uc)n(h)h(needed)i(supp)r(ort)f(for)g
(fault-tolerance)d(and)330 2341 y(mo)r(derate)32 b(sp)r(eedup.)54
b(Since)32 b(the)i(to)r(olkit)d(dev)n(elop)r(ed)h(here)h(do)r(es)g(not)
g(require)e(an)n(y)h(sp)r(ecial)330 2441 y(hardw)n(are)26
b(or)h(soft)n(w)n(are)f(facilities)e(other)j(than)h(those)g(already)d
(a)n(v)-5 b(ailable,)24 b(it)j(can)h(readily)d(b)r(e)330
2540 y(adapted)33 b(to)g(exploit)e(new)j(generations)c(of)j(hardw)n
(are.)52 b([18)o(])34 b(describ)r(es)e(detailed)f(p)r(erform-)330
2640 y(ance)f(analysis)c(of)k(applications)c(rep)r(orted)k(here)f(and)h
(enables)f(prediction)e(of)j(the)h(exp)r(ected)330 2739
y(p)r(erformance)22 b(under)i(higher)e(net)n(w)n(ork)h(bandwidth.)35
b(F)-7 b(or)24 b(example,)e(if)i(the)g(comm)n(unications)330
2839 y(media)31 b(is)h(replaced)f(b)n(y)i(fast)g(ethernet,)i(at)e(100)
12 b(Mbits/s,)33 b(but)h(the)f(con\014guration)e(remains)330
2939 y(otherwise)f(unc)n(hanged)g(a)h(p)r(erformance)f(of)h(80)13
b(M\015op/s)31 b(is)f(an)n(ticipated)f(for)i(matrix)e(m)n(ulti-)330
3038 y(plication)24 b(using)j(4)g(sla)n(v)n(es.)455 3138
y(The)g(o)n(v)n(erall)c(conclusion)i(is)h(that)i(ob)5
b(jects)26 b(and)i(actions)d(as)i(emplo)n(y)n(ed)d(in)j(the)h(computa-)
330 3238 y(tions)j(describ)r(ed)f(seem)h(to)h(b)r(e)g(a)g(con)n(v)n
(enien)n(t)e(w)n(a)n(y)g(to)i(express)f(fault)g(tolerance)f(in)h
(parallel)330 3337 y(applications,)24 b(and)j(for)g(appropriate)e
(scale)h(of)h(computation)f(imp)r(ose)f(small)g(cost.)330
3612 y Fh(Ac)l(kno)l(wledgemen)l(ts)330 3794 y Fg(The)35
b(w)n(ork)e(rep)r(orted)g(here)i(has)f(b)r(een)g(supp)r(orted)h(in)f
(part)g(b)n(y)g(researc)n(h)e(and)j(studen)n(tship)330
3893 y(gran)n(ts)f(from)h(the)h(UK)f(Ministry)f(of)i(Defence,)i
(Engineering)32 b(and)k(Ph)n(ysical)c(Sciences)i(Re-)330
3993 y(searc)n(h)c(Council)g(\(Gran)n(t)h(Num)n(b)r(er)g(GR/H81078\))f
(and)h(ESPRIT)g(pro)5 b(ject)31 b(BR)n(O)n(ADCAST)330
4093 y(\(Basic)21 b(Researc)n(h)g(Pro)5 b(ject)21 b(Num)n(b)r(er)h
(6360\).)33 b(The)23 b(supp)r(ort)f(of)h(the)g(Arjuna)f(team)g(is)f(ac)
n(kno)n(w-)330 4192 y(ledged,)i(and)h(in)e(particular)f(the)j
(assistance)d(of)i(M.)h(Little,)f(G.)h(P)n(arrington,)d(and)j(S.)f
(Wheater)330 4292 y(with)k(implemen)n(tation)c(issues)j(relev)-5
b(an)n(t)26 b(to)h(this)g(w)n(ork.)330 4566 y Fh(References)372
4748 y Fg([1])41 b(George)j(S.)i(Almasi)d(and)j(Allan)e(Gottlieb.)90
b Fd(Highly)48 b(Par)l(al)t(lel)g(Computing)p Fg(.)92
b(Ben-)501 4848 y(jamin/Cummings,)22 b(2nd)27 b(edition,)f(1994.)35
b(ISBN)28 b(0-8053-0443-6.)372 5014 y([2])41 b(Thomas)32
b(E.)h(Anderson,)i(Da)n(vid)e(E.)h(Culler,)f(and)h(Da)n(vid)f(A.)h(P)n
(atterson.)54 b(A)34 b(case)g(for)501 5113 y(NO)n(W)27
b(\(Net)n(w)n(orks)g(of)g(Workstations\).)35 b Fd(IEEE)30
b(Micr)l(o)p Fg(,)f(15\(1\):54{64,)c(F)-7 b(ebruary)26
b(1995.)372 5280 y([3])41 b(Da)n(vid)c(Edw)n(ard)g(Bakk)n(en.)68
b Fd(Supp)l(orting)40 b(F)-6 b(ault-T)g(oler)l(ant)40
b(Par)l(al)t(lel)h(Pr)l(o)l(gr)l(amming)g(in)501 5379
y(Linda)p Fg(.)47 b(PhD)31 b(thesis,)f(Departmen)n(t)g(of)g(Computer)g
(Science,)g(The)h(Univ)n(ersit)n(y)d(of)i(Ari-)501 5479
y(zona,)20 b(T)-7 b(ucson,)21 b(Arizona)d(85721,)h(August)h(1994.)j(Av)
-5 b(ailable)16 b(as)k(tec)n(hnical)d(rep)r(ort)i(TR94-)501
5578 y(23.)1809 5919 y(7)p eop
%%Page: 8 8
8 7 bop 372 390 a Fg([4])41 b(Henri)35 b(E.)h(Bal.)62
b(F)-7 b(ault)36 b(toleran)n(t)e(parallel)f(programming)e(in)36
b(Argus.)62 b Fd(Concurr)l(ency:)501 490 y(Pr)l(actic)l(e)30
b(and)g(Exp)l(erienc)l(e)p Fg(,)f(4\(1\):37{55,)c(F)-7
b(ebruary)26 b(1992.)372 656 y([5])41 b(A.)28 b(Benzoni)f(and)h(M.)g
(L.)g(Sales.)37 b(Concurren)n(t)27 b(matrix)f(factorizations)e(on)k(w)n
(orkstation)501 756 y(net)n(w)n(orks.)i(In)25 b(A.)h(E.)e(Finc)n(ham)f
(and)i(B.)g(F)-7 b(ord,)25 b(editors,)e Fd(Par)l(al)t(lel)30
b(Computation)p Fg(,)c(pages)501 855 y(273{284.)e(Clarendon)h(Press,)i
(1991.)372 1021 y([6])41 b(Philip)19 b(A.)j(Bernstein,)g(Meic)n(h)n(un)
f(Hsu,)i(and)f(Bruce)f(Mann.)28 b(Implemen)n(ting)18
b(reco)n(v)n(erable)501 1121 y(requests)26 b(using)h(queues.)36
b Fd(A)n(CM)30 b(SIGMOD)p Fg(,)e(pages)e(112{122,)e(1990.)372
1287 y([7])41 b(Nic)n(holas)27 b(Carriero)h(and)i(Da)n(vid)g(Gelern)n
(ter.)44 b Fd(How)33 b(T)-6 b(o)33 b(Write)g(Par)l(al)t(lel)h(Pr)l(o)l
(gr)l(ams:)45 b(A)501 1386 y(First)30 b(Course)p Fg(.)37
b(MIT)28 b(Press,)e(1991.)35 b(ISBN)28 b(0-262-03171-X.)372
1553 y([8])41 b(Timoth)n(y)c(Clark)g(and)i(Kenneth)h(P)-7
b(.)39 b(Birman.)69 b(Using)38 b(the)i(ISIS)f(resource)f(manager)501
1652 y(for)33 b(distributed,)i(fault-toleran)n(t)c(computing.)55
b(T)-7 b(ec)n(hnical)32 b(Rep)r(ort)i(92-1289,)f(Cornell)501
1752 y(Univ)n(ersit)n(y)24 b(Computer)j(Science)f(Departmen)n(t,)h
(June)g(1992.)372 1918 y([9])41 b(Gene)22 b(H.)i(Golub)d(and)i(Charles)
d(F.)j(V)-7 b(an)23 b(Loan.)28 b Fd(Matrix)e(Computations)p
Fg(.)j(John)22 b(Hopkins)501 2017 y(Univ)n(ersit)n(y)i(Press,)i(second)
h(edition,)f(1989.)35 b(ISBN)28 b(0-8018-3772-3.)330
2183 y([10])41 b(Jim)30 b(Gra)n(y)h(and)h(Andreas)g(Reuter.)50
b Fd(T)-6 b(r)l(ansaction)35 b(Pr)l(o)l(c)l(essing:)48
b(Conc)l(epts)34 b(and)h(T)-6 b(e)l(ch-)501 2283 y(niques)p
Fg(.)37 b(Morgan)25 b(Kau\013man,)i(1993.)330 2449 y([11])41
b(Karp)5 b(jo)r(o)31 b(Jeong.)52 b Fd(F)-6 b(ault-T)g(oler)l(ant)34
b(Par)l(al)t(lel)j(Pr)l(o)l(c)l(essing)e(Combining)i(Linda,)g(Che)l
(ck-)501 2549 y(p)l(ointing,)32 b(and)g(T)-6 b(r)l(ansactions)p
Fg(.)42 b(PhD)29 b(thesis,)g(New)g(Y)-7 b(ork)28 b(Univ)n(ersit)n(y)-7
b(,)27 b(Departmen)n(t)h(of)501 2648 y(Computer)e(Science,)h(Jan)n
(uary)e(1996.)330 2814 y([12])41 b(M.)29 b(F)-7 b(rans)29
b(Kaasho)r(ek,)f(Ra)n(ymond)f(Mic)n(hiels,)g(Henri)h(E.)h(Bal,)g(and)g
(Andrew)g(S.)h(T)-7 b(anen-)501 2914 y(baum.)45 b(T)-7
b(ransparen)n(t)29 b(fault-tolerance)e(in)j(parallel)d(Orca)i
(programs.)43 b(In)31 b Fd(Pr)l(o)l(c)l(e)l(e)l(dings)501
3014 y(of)d(the)f(Symp)l(osium)h(on)f(Exp)l(erienc)l(es)h(with)f
(Distribute)l(d)g(and)h(Multipr)l(o)l(c)l(essor)g(Systems)501
3113 y(III)p Fg(,)f(pages)g(297{312,)d(Newp)r(ort)k(Beac)n(h,)e(CA,)i
(Marc)n(h)f(1992.)330 3279 y([13])41 b(Craig)25 b(Kolb.)35
b Fd(r)l(ayshade)p Fg(.)k(ftp://ftp.cs.y)n(ale.edu,)26
b(Ma)n(y)h(1990.)35 b(v)n(ersion)25 b(3.0.)330 3445 y([14])41
b(Vipin)27 b(Kumar,)g(Anan)n(th)i(Grama,)f(Ansh)n(ul)g(Gupta,)h(and)g
(George)e(Karypis.)38 b Fd(Intr)l(o)l(duc-)501 3545 y(tion)30
b(to)f(Par)l(al)t(lel)j(Computing)p Fg(.)37 b(Benjamin)26
b(Cummings,)f(1994.)35 b(ISBN)28 b(0-8053-3170-0.)330
3711 y([15])41 b(Juan)c(Leon,)k(Allan)36 b(L.)i(Fisher,)h(and)f(P)n
(eter)f(Steenkiste.)68 b(F)-7 b(ail-safe)35 b(PVM:)j(A)h(p)r(ort-)501
3811 y(able)c(pac)n(k)-5 b(age)36 b(for)g(distributed)g(programming)c
(with)k(transparen)n(t)f(reco)n(v)n(ery)-7 b(.)63 b(T)-7
b(ec)n(h-)501 3910 y(nical)31 b(Rep)r(ort)i(CMU-CS-93-124,)f(Sc)n(ho)r
(ol)f(of)j(Computer)e(Science,)h(Carnegie)e(Mellon)501
4010 y(Univ)n(ersit)n(y)-7 b(,)24 b(Pittsburgh,)i(P)-7
b(A)28 b(15213,)d(F)-7 b(ebruary)27 b(1993.)330 4176
y([16])41 b(G.)33 b(D.)i(P)n(arrington,)c(S.)j(K.)f(Shriv)-5
b(asta)n(v)g(a,)33 b(S.)h(M.)f(Wheater,)i(and)f(M.)f(C.)h(Little.)53
b(The)501 4276 y(design)28 b(and)i(implemen)n(tation)24
b(of)30 b(Arjuna.)44 b Fd(USENIX)30 b(Computing)j(Systems)e(Journal)p
Fg(,)501 4375 y(8\(3\):225{308,)24 b(summer)h(1995.)330
4541 y([17])41 b(James)23 b(S.)j(Plank,)f(Y)-7 b(oungbae)24
b(Kim,)h(and)g(Jac)n(k)f(J.)i(Dongarra.)31 b(Algorithm-based)22
b(disk-)501 4641 y(less)30 b(c)n(hec)n(kp)r(oin)n(ting)f(for)j(fault)f
(toleran)n(t)f(matrix)g(op)r(erations.)48 b(In)32 b Fd(25th)j
(International)501 4741 y(Symp)l(osium)30 b(on)g(F)-6
b(ault-T)g(oler)l(ant)29 b(Computing)p Fg(,)f(June)g(1995.)330
4907 y([18])41 b(J.)31 b(Smith.)47 b Fd(F)-6 b(ault)33
b(T)-6 b(oler)l(ant)34 b(Par)l(al)t(lel)h(Applic)l(ations)g(Using)e(a)h
(Network)f(Of)h(Worksta-)501 5006 y(tions)p Fg(.)52 b(PhD)32
b(thesis,)h(Univ)n(ersit)n(y)d(of)i(New)n(castle)f(up)r(on)i(T)n(yne,)h
(Departmen)n(t)d(of)i(Com-)501 5106 y(puting)27 b(Science,)f(1996.)35
b(F)-7 b(orthcoming.)330 5272 y([19])41 b(J.)23 b(Smith)f(and)h(San)n
(tosh)f(Shriv)-5 b(asta)n(v)g(a.)27 b(F)-7 b(ault-toleran)n(t)20
b(execution)i(of)h(computationally)501 5372 y(and)28
b(storage)f(in)n(tensiv)n(e)f(programs)g(o)n(v)n(er)h(a)h(net)n(w)n
(ork)f(of)i(w)n(orkstations:)36 b(A)29 b(case)f(study)-7
b(.)501 5471 y(In)27 b(ESPRIT)g(Basic)f(Researc)n(h)g(Pro)5
b(ject)26 b(6360)g(Third)h(Y)-7 b(ear)26 b(Rep)r(ort,)i(July)e(1995.)
1809 5919 y(8)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
