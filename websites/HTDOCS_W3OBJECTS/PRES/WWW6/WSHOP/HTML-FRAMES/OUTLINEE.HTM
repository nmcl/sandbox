<HTML>
<BODY >

<P></P><A HREF="JavaScript:parent.ItemClicked(1, 0)"> PPT Slide </A><br><UL>
6th International World-Wide Web Conference
<BR></UL><UL>
Santa Clara, CA, USA, April 5-11, 1997
</UL><UL>

</UL><UL>
Object-oriented Web Servers and Data Modelling Workshop</UL></P>
<P><UL>
David Ingham
<BR></UL><UL>
Research Associate, Arjuna Project
</UL><UL>
Department of Computing Science, Newcastle University, U.K.
</UL><UL>

</UL><UL>
Email:	dave.ingham@ncl.ac.uk
</UL><UL>
URL:	http://www.cs.ncl.ac.uk/~dave.ingham/</UL></P>
<P><UL>
A Distributed Object-Oriented Web Server<BR></UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(2, 0)"> W3Objects Overview </A><br><UL>
<LI>Framework to aid in the construction of Web-based applications
<UL>
<LI>key goal is to provide an extensible Web architecture
</UL></UL><UL>
<LI>W3Objects are encapsulated entities
<UL>
<LI>interface inheritance provides polymorphism
<LI>code reuse achieved using behavioural inheritance
</UL></UL><UL>
<LI>W3Objects are organised and named within contexts
</UL><UL>
<LI>Referencing mechanisms ensure referential integrity and migration transparency (See WWW5 paper)
</UL><UL>
<LI>Inter-object communication via remote procedure call (RPC)</UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(3, 0)"> W3Objects Site Architecture </A><br>
<P></P><A HREF="JavaScript:parent.ItemClicked(4, 0)"> Web Access to W3Objects </A><br><UL>
HTTP<BR></UL></P>
<P><UL>
HTTP Request
<BR></UL><UL>
GET w3o/banking/
</UL><UL>
balance?acc=1234
</UL><UL>
HTTP/1.0</UL></P>
<P><UL>
balance<BR></UL></P>
<P><UL>
banking<BR></UL></P>
<P><UL>
HTTPReq
<BR></UL><UL>
headersIn, dataIn
</UL><UL>
status, headersOut, body</UL></P>
<P><UL>
HTTP Response
<BR></UL><UL>
HTTP 200 OK
</UL><UL>
&#060headers&#062
</UL><UL>
&#060body&#062</UL></P>
<P><UL>
RPC<BR></UL></P>
<P><UL>
RPC<BR></UL></P>
<P><UL>
Web server<BR></UL></P>
<P><UL>
Nameserver<BR></UL></P>
<P><UL>
W3OServer<BR></UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(5, 0)"> Site Management Features </A><br><UL>
<LI>Scalability through transparent distribution
<UL>
<LI>arbitrary allocation of services to machines, transparent to users
</UL></UL><UL>
<LI>Transparent service migration
<UL>
<LI>services may be migrated between processes and hosts
<LI>referential integrity ensured
</UL></UL><UL>
<LI>Introduction and removal of services
<UL>
<LI>new services added by registering them in the nameserver
</UL></UL><UL>
<LI>Support for stateful services
<UL>
<LI>W3Objects persist across requests
<LI>session-state can be held in memory or optionally on disc
<LI>persistence support provided
</UL></UL><UL>
<LI>Management operations accessible via API or Web interfaces</UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(6, 0)"> Comparison with Alternative Techniques </A><br><UL>
<LI>Common Gateway Interface
<UL>
<LI>highly inefficient
<LI>centralised services
<LI>poor support for session-based services
</UL></UL><UL>
<LI>Server APIs
<UL>
<LI>performance benefits over CGI
<LI>poor isolation of faults
<LI>centralised services
<LI>poor support for session-based services</UL></UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(7, 0)"> W3Objects Referencing Model </A><br><UL>
<LI>Aims
<UL>
<LI>to provide referential integrity
<LI>to provide migration transparency
<LI>to provide flexible mechanisms to support differing object requirements
</UL></UL><UL>
<LI>Integration of referencing techniques
<UL>
<LI>all W3Objects support forward referencing with chain short-cutting
<LI>cheapest guarantee of referential integrity
<LI>per reference customisation for fault-tolerance or performance
</UL></UL><UL>
<LI>Implementation built using Shadows
</UL><UL>
<LI>Deployed within W3Objects servers
<UL>
<LI>guarantees integrity of links between W3Objects</UL></UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(8, 0)"> Object Migration & Short-cutting </A><br><UL>
Step 1<BR></UL></P>
<P><UL>
Step 3<BR></UL></P>
<P><UL>
Step 2<BR></UL></P>
<P><UL>
1<BR></UL></P>
<P><UL>
2<BR></UL></P>
<P><UL>
1<BR></UL></P>
<P><UL>
2<BR></UL></P>
<P><UL>
1<BR></UL></P>
<P><UL>
2<BR></UL></P>
<P><UL>
O<BR></UL></P>
<P><UL>
O<BR></UL></P>
<P><UL>
O<BR></UL></P>
<P><UL>
O’<BR></UL></P>
<P><UL>
O’’<BR></UL></P>
<P><UL>
O’<BR></UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(9, 0)"> Obtaining References </A><br><UL>
Step 1<BR></UL></P>
<P><UL>
Step 3<BR></UL></P>
<P><UL>
Step 2<BR></UL></P>
<P><UL>
Space A<BR></UL></P>
<P><UL>
Space B<BR></UL></P>
<P><UL>
Space C<BR></UL></P>
<P><UL>
O<BR></UL></P>
<P><UL>
O<BR></UL></P>
<P><UL>
O<BR></UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(10, 0)"> Name-serversmaintaining bindings between names and objects </A><br><UL>
name-server 1<BR></UL></P>
<P><UL>
O<BR></UL></P>
<P><UL>
“A”<BR></UL></P>
<P><UL>
name-server 2<BR></UL></P>
<P><UL>
“B”<BR></UL></P>
<P><UL>
1<BR></UL></P>
<P><UL>
2<BR></UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(11, 0)"> Name-servers & Call-backproviding alternative paths to objects </A><br><UL>
Step 1<BR></UL></P>
<P><UL>
Step 3<BR></UL></P>
<P><UL>
Step 2<BR></UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(12, 0)"> Referencing Model Summary </A><br><UL>
<LI>Forward referencing
<UL>
<LI>default mechanisms for all W3Objects
<LI>achieves referential integrity
<LI>provides migration transparency
<LI>chain-shortcutting reduces points of failure
</UL></UL><UL>
<LI>Name-servers
<UL>
<LI>used to provide name to object bindings
<LI>used to provide alternative paths to an object
</UL></UL><UL>
<LI>Callback
<UL>
<LI>used in conjunction with name-servers to eliminate common paths
<LI>used with references to minimise invocation overhead</UL></UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(13, 0)"> Manageable W3Object Services </A><br><UL>
<LI>Strong separation of presentation logic from functional aspects
</UL><UL>
<LI>A service is logically represented as a single object
</UL><UL>
<LI>Internally a service object contains view objects
<UL>
<LI>a view either represent a complete page or a page component
<LI>views are either static or dynamic; private or shared
</UL></UL><UL>
<LI>Presented pages are created by assembling view objects
</UL><UL>
<LI>Manageability is obtained through inheritance
<UL>
<LI>develop application without consideration for Web presentation
<LI>develop Web interface using view components
<LI>dynamic views glue the Web interface to the functional interface</UL></UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(14, 0)"> Views </A><br>
<P></P><A HREF="JavaScript:parent.ItemClicked(15, 0)"> Service Management Features </A><br><UL>
<LI>Web interface can be configured at run-time without outages
</UL><UL>
<LI>Isolation of commonality
<UL>
<LI>shared views are updated once; changes automatically propagated
</UL></UL><UL>
<LI>Encapsulation
<UL>
<LI>entire service can be managed as a single object
</UL></UL><UL>
<LI>Service evolution
<UL>
<LI>views can be created, modified and removed
<LI>views can be migrated, e.g., created privately then shared
</UL></UL><UL>
<LI>Accessible management interface
<UL>
<LI>all management operations can be accessed via Web interfaces</UL></UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(16, 0)"> Manageable Object Internals </A><br>
<P></P><A HREF="JavaScript:parent.ItemClicked(17, 0)"> Scripted Views </A><br><UL>
<LI>Implemented using W3OScript
<UL>
<LI>server-side scripting language based on tcl
<LI>safe tcl interpreter augmented with W3Object-specific commands
<LI>implemented using Embedded Tk (ET)
</UL></UL><UL>
<LI>Can be used to define presentation logic
<UL>
<LI>tailored presentations
</UL></UL><UL>
<LI>Provides glue between Web interface and functional interface
<UL>
<LI>user classes can define new W3OScript operations
</UL></UL><UL>
<LI>W3OScript resources can be configured using Web interfaces</UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(18, 0)"> Example: Supporting Metadata </A><br>
<P></P><A HREF="JavaScript:parent.ItemClicked(19, 0)"> Alternative Approaches </A><br><UL>
<LI>Style sheets can provide consistent look and feel
<UL>
<LI>use is encouraged
<LI>does not help maintaining consistency of replicated data
</UL></UL><UL>
<LI>Server-side includes (SSI)
<UL>
<LI>server-parsed templates may include CGI calls
<LI>improves flexibility
<LI>poor performance
</UL></UL><UL>
<LI>W3Objects
<UL>
<LI>pre-parsing where possible to improve performance
<LI>overheads of RPC can be alleviated with caching</UL></UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(20, 0)"> Data Modelling: Object Wrapping </A><br><UL>
<LI>Web access to legacy systems requires gateways
<UL>
<LI>protocol translations
<LI>interface translation
</UL></UL><UL>
<LI>Object-oriented model is suitable for legacy system gateways
<UL>
<LI>strong separation of interface & implementation
<LI>object wrapping allows legacy resources to be treated as native
</UL></UL><UL>
<LI>Wrapping using W3Objects provides Web gateway
</UL><UL>
<LI>Distributed objects offer increased flexibility
</UL><UL>
<LI>Scripted presentation logic simplifies management</UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(21, 0)"> Summary </A><br><UL>
<LI>W3Objects provides a Web-to-object gateway
</UL><UL>
<LI>Distributed object technology provides a scaleable platform for Web service provision
</UL><UL>
<LI>Smart referencing mechanisms support referential integrity and migration transparency
</UL><UL>
<LI>Support for building Web services
<UL>
<LI>persistence, concurrency control, etc.
<LI>support for session-based applications
</UL></UL><UL>
<LI>Manageable services
<UL>
<LI>strong separation of presentation and functional logic
<LI>scripted resources</UL></UL></P>
<P>
<P></P><A HREF="JavaScript:parent.ItemClicked(22, 0)"> PPT Slide </A><br><UL>
David Ingham
<BR></UL><UL>
Research Associate, Arjuna Project
</UL><UL>
Department of Computing Science, Newcastle University, U.K.
</UL><UL>

</UL><UL>
Email:	dave.ingham@ncl.ac.uk
</UL><UL>
URL:	http://www.cs.ncl.ac.uk/~dave.ingham/</UL></P>
<P><UL>
http://arjuna.ncl.ac.uk/w3objects/<BR></UL></P>
<P>
</BODY>
</HTML>